#pragma once

// DaysGone (00) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Parameters
//---------------------------------------------------------------------------

// Function BendGame.ActionIcon.SetShowHoldIndication
struct UActionIcon_SetShowHoldIndication_Params
{
	bool                                               bShow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.SetHoldProgress
struct UActionIcon_SetHoldProgress_Params
{
	float                                              InProgress;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.SetForcedInputDevice
struct UActionIcon_SetForcedInputDevice_Params
{
	TEnumAsByte<EConsoleForGamepadLabels>              InForcedInputDevice;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.SetActionType
struct UActionIcon_SetActionType_Params
{
	TEnumAsByte<EInputType>                            InActionType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.SetActionName
struct UActionIcon_SetActionName_Params
{
	struct FName                                       InActionName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.OnHoldProgressChanged
struct UActionIcon_OnHoldProgressChanged_Params
{
	float                                              InProgress;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionIcon.HasValidVisuals
struct UActionIcon_HasValidVisuals_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.ActionIcon.HasValidBinding
struct UActionIcon_HasValidBinding_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.ActionIcon.HandleOnInputBindingChange
struct UActionIcon_HandleOnInputBindingChange_Params
{
	struct FName                                       InputName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionTextBlock.SetText
struct UActionTextBlock_SetText_Params
{
	struct FText                                       InText;                                                   // (Parm)
};

// Function BendGame.ActionTextBlock.SetForcedInputDevice
struct UActionTextBlock_SetForcedInputDevice_Params
{
	TEnumAsByte<EConsoleForGamepadLabels>              InForcedInputDevice;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ActionTextBlock.GetText
struct UActionTextBlock_GetText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.AIVehicleManager.RemoveAllGroups
struct AAIVehicleManager_RemoveAllGroups_Params
{
};

// Function BendGame.AIVehicleManager.GetRamManager
struct AAIVehicleManager_GetRamManager_Params
{
	class UBendVehicleRamManager*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.GetGroup
struct AAIVehicleManager_GetGroup_Params
{
	struct FString                                     GroupName;                                                // (Parm, ZeroConstructor)
	class UBendMotorcycleRiderGroup*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.GetAwarenessManager
struct AAIVehicleManager_GetAwarenessManager_Params
{
	class UVehicleAwarenessManager*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.GetAIVehicleManager
struct AAIVehicleManager_GetAIVehicleManager_Params
{
	class AAIVehicleManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.EnableRVODebug
struct AAIVehicleManager_EnableRVODebug_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.EnableDebugDraw
struct AAIVehicleManager_EnableDebugDraw_Params
{
};

// Function BendGame.AIVehicleManager.EnableCornerDebugDraw
struct AAIVehicleManager_EnableCornerDebugDraw_Params
{
};

// Function BendGame.AIVehicleManager.DisableDebugDraw
struct AAIVehicleManager_DisableDebugDraw_Params
{
};

// Function BendGame.AIVehicleManager.DisableCornerDebugDraw
struct AAIVehicleManager_DisableCornerDebugDraw_Params
{
};

// Function BendGame.AIVehicleManager.DebugDrawToggle
struct AAIVehicleManager_DebugDrawToggle_Params
{
};

// Function BendGame.AIVehicleManager.CreateGroup
struct AAIVehicleManager_CreateGroup_Params
{
	struct FString                                     GroupName;                                                // (Parm, ZeroConstructor)
	struct FGroupFormationSettings                     formationSettings;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	class UBendMotorcycleRiderGroup*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.CleanupDriver
struct AAIVehicleManager_CleanupDriver_Params
{
	class ABendPawn*                                   driver;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AIVehicleManager.AddGroup
struct AAIVehicleManager_AddGroup_Params
{
	class UBendMotorcycleRiderGroup*                   motoGroup;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AIVehicleWaypoint.OnReachedWaypoint
struct AAIVehicleWaypoint_OnReachedWaypoint_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isEndWaypoint;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AIVehicleWaypoint.OnReachedEndWaypoint
struct AAIVehicleWaypoint_OnReachedEndWaypoint_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendImpactEffect.RemoveAvoidance
struct ABendImpactEffect_RemoveAvoidance_Params
{
};

// Function BendGame.BendImpactEffect.OnImpactEffectSpawned
struct ABendImpactEffect_OnImpactEffectSpawned_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendImpactEffect.OnImpact
struct ABendImpactEffect_OnImpact_Params
{
};

// Function BendGame.BendImpactEffect.GetInstigator
struct ABendImpactEffect_GetInstigator_Params
{
	class AController*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendImpactEffect.CreateImpactEffectBP
struct ABendImpactEffect_CreateImpactEffectBP_Params
{
	class UClass*                                      ImpactTemplate;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SurfaceNormal;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ParticleRotation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShootDir;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatorCtrl;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DestructionOnly;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendImpactEffect*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendImpactEffect.AddAvoidLocation
struct ABendImpactEffect_AddAvoidLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutTime;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsRandomizer.SetVehiclePartsDatabase
struct ABendVehiclePartsRandomizer_SetVehiclePartsDatabase_Params
{
	class UBendVehiclePartsDatabase*                   PartsDatabase;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsRandomizer.SetDefaultPartIndex
struct ABendVehiclePartsRandomizer_SetDefaultPartIndex_Params
{
	TEnumAsByte<EMotorcyclePartType>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsRandomizer.RandomizeParts
struct ABendVehiclePartsRandomizer_RandomizeParts_Params
{
};

// Function BendGame.BendVehiclePartsRandomizer.RandomizeDefaultPartIndex
struct ABendVehiclePartsRandomizer_RandomizeDefaultPartIndex_Params
{
	TEnumAsByte<EMotorcyclePartType>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsRandomizer.GetVehiclePartsDatabase
struct ABendVehiclePartsRandomizer_GetVehiclePartsDatabase_Params
{
	class UBendVehiclePartsDatabase*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.UpdateSouthernRegionOverlapOverrides
struct ABendAmbientGenerator_UpdateSouthernRegionOverlapOverrides_Params
{
	bool                                               IncrementUp;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.UpdateCurrentWorldTier
struct ABendAmbientGenerator_UpdateCurrentWorldTier_Params
{
};

// Function BendGame.BendAmbientGenerator.UpdateConditionalLooks
struct ABendAmbientGenerator_UpdateConditionalLooks_Params
{
};

// Function BendGame.BendAmbientGenerator.SpawnForCombatEscalation
struct ABendAmbientGenerator_SpawnForCombatEscalation_Params
{
	struct FVector                                     CenterLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.SpawnAllAvilable
struct ABendAmbientGenerator_SpawnAllAvilable_Params
{
	float                                              Brightness;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.SetImportanceToBlockBelow
struct ABendAmbientGenerator_SetImportanceToBlockBelow_Params
{
	TEnumAsByte<ESpawnImportance>                      importance;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.ScreamerSpawn
struct ABendAmbientGenerator_ScreamerSpawn_Params
{
	struct FBendAmbientSpawnType                       SpawnType;                                                // (Parm)
	int                                                spawnCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.ReturnSpawnToPool
struct ABendAmbientGenerator_ReturnSpawnToPool_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.ResetGlobalSpawnLimit
struct ABendAmbientGenerator_ResetGlobalSpawnLimit_Params
{
};

// Function BendGame.BendAmbientGenerator.ResetDemotedCrowdLimit
struct ABendAmbientGenerator_ResetDemotedCrowdLimit_Params
{
};

// Function BendGame.BendAmbientGenerator.ResetDeadSpawns
struct ABendAmbientGenerator_ResetDeadSpawns_Params
{
};

// Function BendGame.BendAmbientGenerator.RequestSpawnSimple
struct ABendAmbientGenerator_RequestSpawnSimple_Params
{
	struct FBendAmbientSpawnType                       Type;                                                     // (Parm)
	class ABendSpawnLocationBase*                      Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSpawnedDelegate;                                        // (Parm, ZeroConstructor)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               deactivateLocation;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.RequestSpawn
struct ABendAmbientGenerator_RequestSpawn_Params
{
	struct FBendSpawnRequestData                       request;                                                  // (Parm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               deactivateLocation;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.RemoveAmbientVehicleSpawnBox
struct ABendAmbientGenerator_RemoveAmbientVehicleSpawnBox_Params
{
	class ABendVehiclePawnSpawnLocation*               abox;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.RemoveAmbientSpawnBox
struct ABendAmbientGenerator_RemoveAmbientSpawnBox_Params
{
	class ABendSpawnLocationBase*                      abox;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.RemoveAmbientSpawnArea
struct ABendAmbientGenerator_RemoveAmbientSpawnArea_Params
{
	class ABendAmbientSpawnArea*                       aArea;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OverrideGlobalSpawnLimitNEW
struct ABendAmbientGenerator_OverrideGlobalSpawnLimitNEW_Params
{
	int                                                newLimit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OverrideGlobalSpawnLimit
struct ABendAmbientGenerator_OverrideGlobalSpawnLimit_Params
{
	int                                                newLimit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OverrideDemotedCrowdLimit
struct ABendAmbientGenerator_OverrideDemotedCrowdLimit_Params
{
	int                                                newLimit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnScreamerSpawnSpawned
struct ABendAmbientGenerator_OnScreamerSpawnSpawned_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnRegionChanged
struct ABendAmbientGenerator_OnRegionChanged_Params
{
	TEnumAsByte<ERegions>                              Region;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnPlayerTeleported
struct ABendAmbientGenerator_OnPlayerTeleported_Params
{
	class ABendPawn*                                   Character;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnPlayerRespawn
struct ABendAmbientGenerator_OnPlayerRespawn_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnMissionEnd
struct ABendAmbientGenerator_OnMissionEnd_Params
{
	class UBendMissionData*                            LastMissionData;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnMissionBegin
struct ABendAmbientGenerator_OnMissionBegin_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnFinishedSpawnOnVehicleSeat
struct ABendAmbientGenerator_OnFinishedSpawnOnVehicleSeat_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                SpawnedVehiclePawn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnFastTravelBegin
struct ABendAmbientGenerator_OnFastTravelBegin_Params
{
	struct FName                                       TravelDestination;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnFadeFromBlackStart
struct ABendAmbientGenerator_OnFadeFromBlackStart_Params
{
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendAmbientGenerator.OnEscalationSpawned
struct ABendAmbientGenerator_OnEscalationSpawned_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.OnDemoJumpPoint
struct ABendAmbientGenerator_OnDemoJumpPoint_Params
{
	class UDataAsset*                                  JobOrMissionID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.NotifyVehicleSpawned
struct ABendAmbientGenerator_NotifyVehicleSpawned_Params
{
	class AVehiclePawn*                                SpawnedVehiclePawn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.NotifySpawnedWithVehicle
struct ABendAmbientGenerator_NotifySpawnedWithVehicle_Params
{
	class ABendSpawnLocationBase*                      SpawnBox;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                SpawnedVehiclePawn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               autoSpawnOnVehicle;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAmbientSpawnType                       SpawnType;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendAmbientGenerator.NotifySpawned
struct ABendAmbientGenerator_NotifySpawned_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.NotifyKilled
struct ABendAmbientGenerator_NotifyKilled_Params
{
	class ABendAIController*                           KilledController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   KilledPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetWorldTierByLocation
struct ABendAmbientGenerator_GetWorldTierByLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendWorldTier>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetWorldTier
struct ABendAmbientGenerator_GetWorldTier_Params
{
	TEnumAsByte<EBendWorldTier>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetTotalActiveCount
struct ABendAmbientGenerator_GetTotalActiveCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetSpawnLimit
struct ABendAmbientGenerator_GetSpawnLimit_Params
{
	TEnumAsByte<ESpawnImportance>                      importance;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetPercentageOfFactionInTrackedSpawns
struct ABendAmbientGenerator_GetPercentageOfFactionInTrackedSpawns_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetNumSpawnsOfFactionLastHundred
struct ABendAmbientGenerator_GetNumSpawnsOfFactionLastHundred_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetGlobalSpawnLimit
struct ABendAmbientGenerator_GetGlobalSpawnLimit_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetDemotedCrowdLimit
struct ABendAmbientGenerator_GetDemotedCrowdLimit_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetAliveCrowdMembers
struct ABendAmbientGenerator_GetAliveCrowdMembers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetActiveSpawnCount
struct ABendAmbientGenerator_GetActiveSpawnCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.GetActiveByAwareness
struct ABendAmbientGenerator_GetActiveByAwareness_Params
{
	TEnumAsByte<EAIAwareState>                         Awareness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.ForceDespawnAll
struct ABendAmbientGenerator_ForceDespawnAll_Params
{
	bool                                               resetSpawnedCount;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               resetToKilled;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Delay;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.DespawnUnit
struct ABendAmbientGenerator_DespawnUnit_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               notifyDespawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               runFullDespawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.DespawnUnimportantOutsideRadius
struct ABendAmbientGenerator_DespawnUnimportantOutsideRadius_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               immediate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESpawnImportance>                      importance;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.DespawnUnimportantInRadius
struct ABendAmbientGenerator_DespawnUnimportantInRadius_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               immediate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESpawnImportance>                      importance;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.DespawnUnimportant
struct ABendAmbientGenerator_DespawnUnimportant_Params
{
	bool                                               immediate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESpawnImportance>                      importance;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.AddAmbientVehicleSpawnBox
struct ABendAmbientGenerator_AddAmbientVehicleSpawnBox_Params
{
	class ABendVehiclePawnSpawnLocation*               abox;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.AddAmbientSpawnBox
struct ABendAmbientGenerator_AddAmbientSpawnBox_Params
{
	class ABendSpawnLocationBase*                      abox;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientGenerator.AddAmbientSpawnArea
struct ABendAmbientGenerator_AddAmbientSpawnArea_Params
{
	class ABendAmbientSpawnArea*                       aArea;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendState.WhileInState
struct UBendState_WhileInState_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendState.ResetStateTimer
struct UBendState_ResetStateTimer_Params
{
};

// Function BendGame.BendState.RequestStateTimerEvent
struct UBendState_RequestStateTimerEvent_Params
{
	float                                              atTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendState.ReenterState
struct UBendState_ReenterState_Params
{
};

// Function BendGame.BendState.OnStateTimerEvent
struct UBendState_OnStateTimerEvent_Params
{
};

// Function BendGame.BendState.OnPathComplete
struct UBendState_OnPathComplete_Params
{
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendState.OnInitState
struct UBendState_OnInitState_Params
{
};

// Function BendGame.BendState.OnExitState
struct UBendState_OnExitState_Params
{
};

// Function BendGame.BendState.OnEnterState
struct UBendState_OnEnterState_Params
{
};

// Function BendGame.BendState.OnBeginPlay
struct UBendState_OnBeginPlay_Params
{
};

// Function BendGame.BendState.GetStateTimer
struct UBendState_GetStateTimer_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendState.ChangeState
struct UBendState_ChangeState_Params
{
	struct FString                                     newStateName;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.BendAnimState_Base.IsActive
struct UBendAnimState_Base_IsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_Base.GetStateEnumeratedType
struct UBendAnimState_Base_GetStateEnumeratedType_Params
{
	TEnumAsByte<EBendAnimState>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_Base.GetPawnOwner
struct UBendAnimState_Base_GetPawnOwner_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_Base.GetAnimCategory
struct UBendAnimState_Base_GetAnimCategory_Params
{
	TEnumAsByte<EBendAnimCategory>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PerformActionContext.UpdateBlendspaceParameters
struct UPerformActionContext_UpdateBlendspaceParameters_Params
{
	struct FName                                       Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PerformActionContext.CancelThisAction
struct UPerformActionContext_CancelThisAction_Params
{
	bool                                               bReturnToPreviousState;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.PerformAction
struct UBendAnimState_PerformAction_PerformAction_Params
{
	struct FBendActionData                             TheActionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      PropActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorWorldTransform;                                     // (Parm, IsPlainOldData)
	struct FScriptDelegate                             OnCompleteDelegate;                                       // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailDelegate;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnLoopDelegate;                                           // (Parm, ZeroConstructor)
	struct FName                                       MasterTimelineName;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.OnMontageStarted
struct UBendAnimState_PerformAction_OnMontageStarted_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CanGrapple
struct UBendAnimState_PerformAction_CanGrapple_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CancelActionWithBlendOutTime
struct UBendAnimState_PerformAction_CancelActionWithBlendOutTime_Params
{
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceCleanup;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CancelActionWithActionData
struct UBendAnimState_PerformAction_CancelActionWithActionData_Params
{
	struct FBendActionData                             ActionToCancel;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CancelAction
struct UBendAnimState_PerformAction_CancelAction_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CanBeStealthKilled
struct UBendAnimState_PerformAction_CanBeStealthKilled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CanBePairKilled
struct UBendAnimState_PerformAction_CanBePairKilled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CanBeMeleeAttacked
struct UBendAnimState_PerformAction_CanBeMeleeAttacked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_PerformAction.CanBeGrappled
struct UBendAnimState_PerformAction_CanBeGrappled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.SetPlayerFaction
struct UFactionManager_SetPlayerFaction_Params
{
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FactionManager.SetFactionLevel
struct UFactionManager_SetFactionLevel_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFactionLevel>                         NewFactionType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FactionManager.SetFaction
struct UFactionManager_SetFaction_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FactionManager.PlayerFactionValue
struct UFactionManager_PlayerFactionValue_Params
{
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.GetEncampmentDataForFaction
struct UFactionManager_GetEncampmentDataForFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendEncampmentData*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.GetBaseConfidence
struct UFactionManager_GetBaseConfidence_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.FactionValueToLevel
struct UFactionManager_FactionValueToLevel_Params
{
	float                                              FactionValue;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFactionLevel>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.FactionValueBP
struct UFactionManager_FactionValueBP_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.FactionLevelToValue
struct UFactionManager_FactionLevelToValue_Params
{
	TEnumAsByte<EFactionLevel>                         FactionLevel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.FactionLevel
struct UFactionManager_FactionLevel_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFactionLevel>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.AdjustPlayerFaction
struct UFactionManager_AdjustPlayerFaction_Params
{
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AdjustValue;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FactionManager.AdjustFaction
struct UFactionManager_AdjustFaction_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AdjustValue;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientBlockerComp.IsOverlapping
struct UBendAmbientBlockerComp_IsOverlapping_Params
{
	struct FVector                                     testLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              testRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimVariationData.GetSequenceEntryList
struct UBendAnimVariationData_GetSequenceEntryList_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendAnimSequenceEntry>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAnimVariationData.GetRandomSequence
struct UBendAnimVariationData_GetRandomSequence_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimVariationData.GetRandomBlendSpace
struct UBendAnimVariationData_GetRandomBlendSpace_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimVariationData.GetNumSequences
struct UBendAnimVariationData_GetNumSequences_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceStrictCompatibilityCheck;                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimVariationData.GetNumBlendSpaces
struct UBendAnimVariationData_GetNumBlendSpaces_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceStrictCompatibilityCheck;                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimVariationData.GetBlendSpaceEntryList
struct UBendAnimVariationData_GetBlendSpaceEntryList_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendAnimBlendSpaceEntry>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAnimVariationData.ContainsGroup
struct UBendAnimVariationData_ContainsGroup_Params
{
	struct FName                                       AnimGroupName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.StatusEffect.SetTickRate
struct UStatusEffect_SetTickRate_Params
{
	float                                              newTickrate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StatusEffect.SetDuration
struct UStatusEffect_SetDuration_Params
{
	float                                              newDuration;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StatusEffect.RestartEffect
struct UStatusEffect_RestartEffect_Params
{
};

// Function BendGame.StatusEffect.OnTick
struct UStatusEffect_OnTick_Params
{
	bool                                               StopEffect;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StatusEffect.OnStart
struct UStatusEffect_OnStart_Params
{
};

// Function BendGame.StatusEffect.OnRestart
struct UStatusEffect_OnRestart_Params
{
};

// Function BendGame.StatusEffect.OnEnd
struct UStatusEffect_OnEnd_Params
{
};

// Function BendGame.BendWeapon_Manager.GetHolsteringItem
struct UBendWeapon_Manager_GetHolsteringItem_Params
{
	class ABendEquippableItem*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippable_Manager.GetBinoculars
struct UBendEquippable_Manager_GetBinoculars_Params
{
	class ABendEquippableItem*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippable_Manager.AddEquippableItem
struct UBendEquippable_Manager_AddEquippableItem_Params
{
	class ABendEquippableItem*                         Item;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEquip;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttackAnimData.GetNamedAttackAction
struct UBendAttackAnimData_GetNamedAttackAction_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Attacker;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     targetVel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aimAngle;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ignoreDistanceCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasRightArm;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasLeftArm;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               usingTwoHander;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAttackData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAttackAnimData.GetAttackAction
struct UBendAttackAnimData_GetAttackAction_Params
{
	class ABendPawn*                                   Attacker;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     targetVel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeleton*                                   CurrentSkeleton;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aimAngle;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ignoreDistanceCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasRightArm;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasLeftArm;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               usingTwoHander;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAttackData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMusic.ToString
struct UBendMusic_ToString_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendMusic.Stop
struct UBendMusic_Stop_Params
{
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopImmediately;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.SetMusicTrack
struct UBendMusic_SetMusicTrack_Params
{
	struct FMusicTrack                                 InTrack;                                                  // (Parm, OutParm)
};

// Function BendGame.BendMusic.SetLocalRegisterValue
struct UBendMusic_SetLocalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.SetGlobalRegisterValue
struct UBendMusic_SetGlobalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.SetDebugDisplayState
struct UBendMusic_SetDebugDisplayState_Params
{
	bool                                               DisplayState;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.PlaybackState
struct UBendMusic_PlaybackState_Params
{
	TEnumAsByte<EMusicPlaybackState>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.Play
struct UBendMusic_Play_Params
{
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.OnTick
struct UBendMusic_OnTick_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TickNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.OnStop
struct UBendMusic_OnStop_Params
{
};

// Function BendGame.BendMusic.OnSetAsSecondary
struct UBendMusic_OnSetAsSecondary_Params
{
};

// Function BendGame.BendMusic.OnSetAsPrimary
struct UBendMusic_OnSetAsPrimary_Params
{
};

// Function BendGame.BendMusic.OnSetAsLast
struct UBendMusic_OnSetAsLast_Params
{
};

// Function BendGame.BendMusic.OnPlayerDied
struct UBendMusic_OnPlayerDied_Params
{
	TEnumAsByte<EAIFactionType>                        KilledByFaction;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETypeOfBaseDamage>                     BaseDamageType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETypeOfDamage>                         DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AmountOfDamage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.OnPlayerDamaged
struct UBendMusic_OnPlayerDamaged_Params
{
	class UClass*                                      TypeOfDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AmountOfDamage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CurrentHealth;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusic.OnPlay
struct UBendMusic_OnPlay_Params
{
};

// Function BendGame.BendMusic.OnLoadingScreenOpened
struct UBendMusic_OnLoadingScreenOpened_Params
{
};

// Function BendGame.BendMusic.OnLoadingScreenClosed
struct UBendMusic_OnLoadingScreenClosed_Params
{
};

// Function BendGame.BendMusic.OnFadeOut
struct UBendMusic_OnFadeOut_Params
{
};

// Function BendGame.BendMusic.OnFadeIn
struct UBendMusic_OnFadeIn_Params
{
};

// Function BendGame.BendMusic.OnBulletPassedByNearPlayer
struct UBendMusic_OnBulletPassedByNearPlayer_Params
{
};

// Function BendGame.BendMusic.OnAudioStop
struct UBendMusic_OnAudioStop_Params
{
};

// Function BendGame.BendMusic.IsPlaying
struct UBendMusic_IsPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.IsOverlayMusic
struct UBendMusic_IsOverlayMusic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.IsInteractiveMusic
struct UBendMusic_IsInteractiveMusic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.IsEventMusic
struct UBendMusic_IsEventMusic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.IsBlueprintMusic
struct UBendMusic_IsBlueprintMusic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.GetPlayerHealth
struct UBendMusic_GetPlayerHealth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.GetNumberOfAI_AwareOfPlayer
struct UBendMusic_GetNumberOfAI_AwareOfPlayer_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.GetLocalRegisterValue
struct UBendMusic_GetLocalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusic.GetGlobalRegisterValue
struct UBendMusic_GetGlobalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.StopAllMusic
struct UBendMusicManager_StopAllMusic_Params
{
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopImmediately;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.Stop
struct UBendMusicManager_Stop_Params
{
	TEnumAsByte<EMusicLayer>                           Layer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.SetOverlayPlayDuringPause
struct UBendMusicManager_SetOverlayPlayDuringPause_Params
{
	bool                                               PlayDuringPause;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.SetLocalRegisterValue
struct UBendMusicManager_SetLocalRegisterValue_Params
{
	TEnumAsByte<EMusicLayer>                           Layer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.SetGlobalRegisterValue
struct UBendMusicManager_SetGlobalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.SetDebugDisplayState
struct UBendMusicManager_SetDebugDisplayState_Params
{
	bool                                               DisplayState;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.PlayOverlay
struct UBendMusicManager_PlayOverlay_Params
{
	class UClass*                                      MusicBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMusicTrack                                 MusicTrack;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               PlayDuringPause;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.PlayBufferedMusic
struct UBendMusicManager_PlayBufferedMusic_Params
{
};

// Function BendGame.BendMusicManager.Play
struct UBendMusicManager_Play_Params
{
	class UClass*                                      MusicBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMusicTrack                                 MusicTrack;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               BufferMusic;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.OnTick
struct UBendMusicManager_OnTick_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TickNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.OnSetAsCurrentMusicManager
struct UBendMusicManager_OnSetAsCurrentMusicManager_Params
{
	struct FName                                       MusicEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.OnSaveGameLoadedFromCheckpoint
struct UBendMusicManager_OnSaveGameLoadedFromCheckpoint_Params
{
};

// Function BendGame.BendMusicManager.OnRemovedAsCurrentMusicManager
struct UBendMusicManager_OnRemovedAsCurrentMusicManager_Params
{
};

// Function BendGame.BendMusicManager.OnPlayerExitedBush
struct UBendMusicManager_OnPlayerExitedBush_Params
{
};

// Function BendGame.BendMusicManager.OnPlayerEnteredBush
struct UBendMusicManager_OnPlayerEnteredBush_Params
{
};

// Function BendGame.BendMusicManager.OnPlayerDied
struct UBendMusicManager_OnPlayerDied_Params
{
	TEnumAsByte<EAIFactionType>                        KilledByFaction;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETypeOfBaseDamage>                     BaseDamageType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETypeOfDamage>                         DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AmountOfDamage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.OnPlayerDamaged
struct UBendMusicManager_OnPlayerDamaged_Params
{
	class UClass*                                      TypeOfDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AmountOfDamage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CurrentHealth;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMusicManager.OnLoadingScreenOpened
struct UBendMusicManager_OnLoadingScreenOpened_Params
{
};

// Function BendGame.BendMusicManager.OnLoadingScreenClosed
struct UBendMusicManager_OnLoadingScreenClosed_Params
{
};

// Function BendGame.BendMusicManager.OnCinematicAudioStarted
struct UBendMusicManager_OnCinematicAudioStarted_Params
{
};

// Function BendGame.BendMusicManager.OnBulletPassedByNearPlayer
struct UBendMusicManager_OnBulletPassedByNearPlayer_Params
{
};

// Function BendGame.BendMusicManager.IsOverlayMusicPlaying
struct UBendMusicManager_IsOverlayMusicPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsOpenWorldManager
struct UBendMusicManager_IsOpenWorldManager_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsMusicPlaying
struct UBendMusicManager_IsMusicPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsInteractiveMusicPlaying
struct UBendMusicManager_IsInteractiveMusicPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsEventMusicPlaying
struct UBendMusicManager_IsEventMusicPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsBaseMusicManager
struct UBendMusicManager_IsBaseMusicManager_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.IsAnyMusicPlaying
struct UBendMusicManager_IsAnyMusicPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetPlayerHealth
struct UBendMusicManager_GetPlayerHealth_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfHumans_WithinRadius
struct UBendMusicManager_GetNumberOfHumans_WithinRadius_Params
{
	float                                              WithinRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfHumans_AwareOfPlayerWithinRadius
struct UBendMusicManager_GetNumberOfHumans_AwareOfPlayerWithinRadius_Params
{
	float                                              WithinRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfAIType_WithinRadius
struct UBendMusicManager_GetNumberOfAIType_WithinRadius_Params
{
	TEnumAsByte<EAIFactionType>                        TypeOfAI;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WithinRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfAIType_AwareOfPlayerWithinRadius
struct UBendMusicManager_GetNumberOfAIType_AwareOfPlayerWithinRadius_Params
{
	TEnumAsByte<EAIFactionType>                        TypeOfAI;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WithinRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfAI_AwareOfPlayer
struct UBendMusicManager_GetNumberOfAI_AwareOfPlayer_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetNumberOfAI_AwareOfBuddy
struct UBendMusicManager_GetNumberOfAI_AwareOfBuddy_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetMusic
struct UBendMusicManager_GetMusic_Params
{
	TEnumAsByte<EMusicLayer>                           Layer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendMusic*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetLocalRegisterValue
struct UBendMusicManager_GetLocalRegisterValue_Params
{
	TEnumAsByte<EMusicLayer>                           Layer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetGlobalRegisterValue
struct UBendMusicManager_GetGlobalRegisterValue_Params
{
	int                                                Register;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMusicManager.GetBufferedMusicAudioComponent
struct UBendMusicManager_GetBufferedMusicAudioComponent_Params
{
	class UAudioComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendLevelSoundManager.SetDebugDisplayState
struct UBendLevelSoundManager_SetDebugDisplayState_Params
{
	bool                                               DisplayState;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelSoundManager.OnTick
struct UBendLevelSoundManager_OnTick_Params
{
};

// Function BendGame.BendLevelSoundManager.OnSetAsCurrentLevelSoundManager
struct UBendLevelSoundManager_OnSetAsCurrentLevelSoundManager_Params
{
	struct FName                                       LevelSoundEventName;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorOpenSoftSound
struct UBendDoorData_GetDoorOpenSoftSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorMesh
struct UBendDoorData_GetDoorMesh_Params
{
	class UStaticMesh*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorLockedSound
struct UBendDoorData_GetDoorLockedSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorKickSound
struct UBendDoorData_GetDoorKickSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorHandleType
struct UBendDoorData_GetDoorHandleType_Params
{
	TEnumAsByte<EDoorHandleType>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorCloseStartSound
struct UBendDoorData_GetDoorCloseStartSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorCloseFinishSound
struct UBendDoorData_GetDoorCloseFinishSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorChargeSound
struct UBendDoorData_GetDoorChargeSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoorData.GetDoorChargeFailSound
struct UBendDoorData_GetDoorChargeFailSound_Params
{
	class USoundBase*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.IsCarryOnlyItem
struct UInventoryItem_IsCarryOnlyItem_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.IconTextureAsset
struct UInventoryItem_IconTextureAsset_Params
{
	TAssetPtr<class UTexture2D>                        OutAsset;                                                 // (Parm, OutParm)
};

// Function BendGame.InventoryItem.IconTexture
struct UInventoryItem_IconTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.GetSoundName
struct UInventoryItem_GetSoundName_Params
{
	TEnumAsByte<EInventoryItemSound>                   SoundID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.GetPickupRespawnTime
struct UInventoryItem_GetPickupRespawnTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.GetItemTexture
struct UInventoryItem_GetItemTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.GetItemName
struct UInventoryItem_GetItemName_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItem.GetItemDescription
struct UInventoryItem_GetItemDescription_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItem.GetInventoryItemActionText
struct UInventoryItem_GetInventoryItemActionText_Params
{
	TEnumAsByte<EInventoryItemAction>                  Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItem.GetCraftComponentType
struct UInventoryItem_GetCraftComponentType_Params
{
	TEnumAsByte<ECraftComponentType>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.GetCraftComponentName
struct UInventoryItem_GetCraftComponentName_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItem.GetCraftComponentDescription
struct UInventoryItem_GetCraftComponentDescription_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItem.GetBackgroundTextureAsset
struct UInventoryItem_GetBackgroundTextureAsset_Params
{
	TAssetPtr<class UTexture2D>                        OutAsset;                                                 // (Parm, OutParm)
};

// Function BendGame.InventoryItem.GetBackgroundTexture
struct UInventoryItem_GetBackgroundTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.ContainsTagEx
struct UInventoryItem_ContainsTagEx_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EGameplayTagMatchType>                 TagMatchType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EGameplayTagMatchType>                 TagToCheckMatchType;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItem.ContainsTag
struct UInventoryItem_ContainsTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.UnlockLadderEdge
struct UBendEdgeTraversal_Manager_UnlockLadderEdge_Params
{
	struct FTraversalEdge                              Edge;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.TryLockLadderEdge
struct UBendEdgeTraversal_Manager_TryLockLadderEdge_Params
{
	struct FTraversalEdge                              Edge;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.SearchForLadderExitEdges
struct UBendEdgeTraversal_Manager_SearchForLadderExitEdges_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     dir;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TArray<struct FTraversalEdge>                      Visible;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendEdgeTraversal_Manager.RemoveClimbLockoutSphere
struct UBendEdgeTraversal_Manager_RemoveClimbLockoutSphere_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.IsLadderEdgeLocked
struct UBendEdgeTraversal_Manager_IsLadderEdgeLocked_Params
{
	struct FTraversalEdge                              Edge;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.IsAnyLadderEdgeLocked
struct UBendEdgeTraversal_Manager_IsAnyLadderEdgeLocked_Params
{
	TArray<struct FTraversalEdge>                      EdgeArray;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.GetCurrentCrowPerchingLocations
struct UBendEdgeTraversal_Manager_GetCurrentCrowPerchingLocations_Params
{
	TArray<struct FReservedPerchLocation>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendEdgeTraversal_Manager.GetBendTraversalManager
struct UBendEdgeTraversal_Manager_GetBendTraversalManager_Params
{
	class UBendEdgeTraversal_Manager*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.FindEdgesNearLocation
struct UBendEdgeTraversal_Manager_FindEdgesNearLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendEdgeTraversal_Manager.FindCrowEdgesNearLocation
struct UBendEdgeTraversal_Manager_FindCrowEdgesNearLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendEdgeTraversal_Manager.FindClosestEdgeToLocation
struct UBendEdgeTraversal_Manager_FindClosestEdgeToLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendEdgeTraversal_Manager.FindClosestCrowEdgeToLocation
struct UBendEdgeTraversal_Manager_FindClosestCrowEdgeToLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendEdgeTraversal_Manager.DebugEnableDrawOnlySectorEdges
struct UBendEdgeTraversal_Manager_DebugEnableDrawOnlySectorEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.DebugEnableDrawEdges
struct UBendEdgeTraversal_Manager_DebugEnableDrawEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.DebugEnableDrawCrowEdges
struct UBendEdgeTraversal_Manager_DebugEnableDrawCrowEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.DebugEnableDrawAllEdges
struct UBendEdgeTraversal_Manager_DebugEnableDrawAllEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.DebugEnableDrawActiveTickingEdges
struct UBendEdgeTraversal_Manager_DebugEnableDrawActiveTickingEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.ClosestPointOnEdge
struct UBendEdgeTraversal_Manager_ClosestPointOnEdge_Params
{
	struct FTraversalEdge                              Edge;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeTraversal_Manager.AggregatedStaticEdgesUnloaded
struct UBendEdgeTraversal_Manager_AggregatedStaticEdgesUnloaded_Params
{
	TArray<struct FTraversalEdge>                      AggregatedEdges;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendEdgeTraversal_Manager.AggregatedStaticEdgesLoaded
struct UBendEdgeTraversal_Manager_AggregatedStaticEdgesLoaded_Params
{
	TArray<struct FTraversalEdge>                      AggregatedEdges;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendEdgeTraversal_Manager.AddClimbLockoutSphere
struct UBendEdgeTraversal_Manager_AddClimbLockoutSphere_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTraversalNavLink.ClimbCompleted
struct ABendTraversalNavLink_ClimbCompleted_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.SetDoorVisibility
struct ABendDoor_SetDoorVisibility_Params
{
	bool                                               Hide;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.SetDoorInteractDetails
struct ABendDoor_SetDoorInteractDetails_Params
{
};

// Function BendGame.BendDoor.QueueTimerFunc
struct ABendDoor_QueueTimerFunc_Params
{
};

// Function BendGame.BendDoor.PlaySound
struct ABendDoor_PlaySound_Params
{
	TEnumAsByte<EDoorSoundType>                        DoorSoundType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.PawnDetectionEndOverlap
struct ABendDoor_PawnDetectionEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.PawnDetectionBeginOverlap
struct ABendDoor_PawnDetectionBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendDoor.OpenOrKickAnimCancelled
struct ABendDoor_OpenOrKickAnimCancelled_Params
{
	TEnumAsByte<EPeformActionFailedReason>             FailedReason;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.OnInteractEnd
struct ABendDoor_OnInteractEnd_Params
{
};

// Function BendGame.BendDoor.OnInteractBegin
struct ABendDoor_OnInteractBegin_Params
{
};

// Function BendGame.BendDoor.OnInputEnd
struct ABendDoor_OnInputEnd_Params
{
	class USlateInputInteract*                         InputInteract;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.OnAnimNotify
struct ABendDoor_OnAnimNotify_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotify*                                 AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.NPCAtDoor
struct ABendDoor_NPCAtDoor_Params
{
	class ABendAIPawn*                                 PawnRef;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SideOfDoor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoor.JimmyFailDelegate
struct ABendDoor_JimmyFailDelegate_Params
{
	TEnumAsByte<EPeformActionFailedReason>             Fail;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.IsOpen
struct ABendDoor_IsOpen_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoor.IsLocationOnFrontSideOfDoor
struct ABendDoor_IsLocationOnFrontSideOfDoor_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoor.InstantDoorState
struct ABendDoor_InstantDoorState_Params
{
	TEnumAsByte<EBendDoorState>                        NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.HumanLockedCompleteDelegate
struct ABendDoor_HumanLockedCompleteDelegate_Params
{
};

// Function BendGame.BendDoor.HordeAtDoor
struct ABendDoor_HordeAtDoor_Params
{
	int                                                BodyIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OverrideLocation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoor.HandleNavLinkState
struct ABendDoor_HandleNavLinkState_Params
{
};

// Function BendGame.BendDoor.HandleButtonPress
struct ABendDoor_HandleButtonPress_Params
{
};

// Function BendGame.BendDoor.ForceOpenDoor
struct ABendDoor_ForceOpenDoor_Params
{
	bool                                               IsCw;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Instant;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.ForceLockOrUnlockDoor
struct ABendDoor_ForceLockOrUnlockDoor_Params
{
	bool                                               NewLockedCW;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NewLockedCCW;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideJimmyable;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NewJimmyableCW;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NewJimmyableCCW;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.ForceCloseDoor
struct ABendDoor_ForceCloseDoor_Params
{
	bool                                               LockDoorCW;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LockDoorCCW;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Instant;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.FigureOutAdvertiseType
struct ABendDoor_FigureOutAdvertiseType_Params
{
	bool                                               OverrideSide;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Side;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EIconTypes>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDoor.DoorFinishedOpening
struct ABendDoor_DoorFinishedOpening_Params
{
};

// Function BendGame.BendDoor.DoorCWOpenAnimation
struct ABendDoor_DoorCWOpenAnimation_Params
{
};

// Function BendGame.BendDoor.DoorCWCloseAnimation
struct ABendDoor_DoorCWCloseAnimation_Params
{
};

// Function BendGame.BendDoor.DoorCCWOpenAnimation
struct ABendDoor_DoorCCWOpenAnimation_Params
{
};

// Function BendGame.BendDoor.DoorCCWCloseAnimation
struct ABendDoor_DoorCCWCloseAnimation_Params
{
};

// Function BendGame.BendDoor.DistanceSphereEndOverlap
struct ABendDoor_DistanceSphereEndOverlap_Params
{
};

// Function BendGame.BendDoor.DistanceSphereBeginOverlapTimerEvent
struct ABendDoor_DistanceSphereBeginOverlapTimerEvent_Params
{
};

// Function BendGame.BendDoor.DistanceSphereBeginOverlap
struct ABendDoor_DistanceSphereBeginOverlap_Params
{
};

// Function BendGame.BendDoor.DisableDoorInteraction
struct ABendDoor_DisableDoorInteraction_Params
{
	bool                                               Reenable;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.CloseAnimationCompleted
struct ABendDoor_CloseAnimationCompleted_Params
{
};

// Function BendGame.BendDoor.ChargePerformActionFailedDelegate
struct ABendDoor_ChargePerformActionFailedDelegate_Params
{
	TEnumAsByte<EPeformActionFailedReason>             Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.ChargePerformActionCompleteDelegate
struct ABendDoor_ChargePerformActionCompleteDelegate_Params
{
};

// Function BendGame.BendDoor.ChargeBoxBeginOverlap
struct ABendDoor_ChargeBoxBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendDoor.BP_ResetDoorInteractDetails
struct ABendDoor_BP_ResetDoorInteractDetails_Params
{
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendDoor.BP_PlayDoorTimeline
struct ABendDoor_BP_PlayDoorTimeline_Params
{
};

// Function BendGame.BendDoor.BP_OnDoorLockedAttempt
struct ABendDoor_BP_OnDoorLockedAttempt_Params
{
};

// Function BendGame.BendDoor.BP_JimmyStartDelegate
struct ABendDoor_BP_JimmyStartDelegate_Params
{
};

// Function BendGame.BendDoor.BP_HandleFocusOutlinesColor
struct ABendDoor_BP_HandleFocusOutlinesColor_Params
{
};

// Function BendGame.BendDoor.BP_ForceBeginPlay
struct ABendDoor_BP_ForceBeginPlay_Params
{
};

// Function BendGame.BendDoor.BP_EnableFocusOutlines
struct ABendDoor_BP_EnableFocusOutlines_Params
{
};

// Function BendGame.BendDoor.BP_DisplayAdvertiseIcon
struct ABendDoor_BP_DisplayAdvertiseIcon_Params
{
	class UBendWidgetComponent*                        Widget;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               UseWideLayout;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              PickupItem;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsAmmoPickup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               lockedIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CurDurability;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDoor.BP_DisableFocusOutlines
struct ABendDoor_BP_DisableFocusOutlines_Params
{
};

// Function BendGame.BendDoor.BP_DisableAdvertiseIcon
struct ABendDoor_BP_DisableAdvertiseIcon_Params
{
	class UBendWidgetComponent*                        Widget;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendDoor.AutoCloseEndOverlap
struct ABendDoor_AutoCloseEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.WeaponWheelOpened
struct ABendAudioManager_WeaponWheelOpened_Params
{
};

// Function BendGame.BendAudioManager.WeaponWheelClosed
struct ABendAudioManager_WeaponWheelClosed_Params
{
};

// Function BendGame.BendAudioManager.UnpauseAllVO
struct ABendAudioManager_UnpauseAllVO_Params
{
};

// Function BendGame.BendAudioManager.UnpauseAllSoundsInGroup
struct ABendAudioManager_UnpauseAllSoundsInGroup_Params
{
	int                                                GroupToUnpause;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.UnpauseAllSounds
struct ABendAudioManager_UnpauseAllSounds_Params
{
};

// Function BendGame.BendAudioManager.UnloadLevelBanks
struct ABendAudioManager_UnloadLevelBanks_Params
{
};

// Function BendGame.BendAudioManager.TutorialOpened
struct ABendAudioManager_TutorialOpened_Params
{
};

// Function BendGame.BendAudioManager.TutorialClosed
struct ABendAudioManager_TutorialClosed_Params
{
};

// Function BendGame.BendAudioManager.StopAndRemoveAllMusicManagers
struct ABendAudioManager_StopAndRemoveAllMusicManagers_Params
{
};

// Function BendGame.BendAudioManager.StopAllMusicImmediately
struct ABendAudioManager_StopAllMusicImmediately_Params
{
};

// Function BendGame.BendAudioManager.StopAllMusic
struct ABendAudioManager_StopAllMusic_Params
{
};

// Function BendGame.BendAudioManager.SnapshotSetPriorityMode
struct ABendAudioManager_SnapshotSetPriorityMode_Params
{
	int                                                PriorityMode;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SnapshotIsMixActive
struct ABendAudioManager_SnapshotIsMixActive_Params
{
	struct FString                                     SnapshotName;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SnapshotDeactivateMix
struct ABendAudioManager_SnapshotDeactivateMix_Params
{
	struct FString                                     SnapshotName;                                             // (Parm, ZeroConstructor)
	float                                              FadeTimeOverride;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SnapshotDeactivateAllMix
struct ABendAudioManager_SnapshotDeactivateAllMix_Params
{
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SnapshotActivateMix
struct ABendAudioManager_SnapshotActivateMix_Params
{
	struct FString                                     SnapshotName;                                             // (Parm, ZeroConstructor)
	float                                              MixScalar;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTimeOverride;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetVolumeOnGroup
struct ABendAudioManager_SetVolumeOnGroup_Params
{
	int                                                Group;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewVolume;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetVoiceAudioVolume
struct ABendAudioManager_SetVoiceAudioVolume_Params
{
	float                                              NewVolumeLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetupSingleActorDataWithAnimationMasterTimeline
struct ABendAudioManager_SetupSingleActorDataWithAnimationMasterTimeline_Params
{
	struct FName                                       PairedName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     PairedObject;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TimeOffset;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             SyncToAudioTime;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetTrackingIntensity
struct ABendAudioManager_SetTrackingIntensity_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetSoundsLocalRegisterValue
struct ABendAudioManager_SetSoundsLocalRegisterValue_Params
{
	class UAudioComponent*                             pAudioComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                RegisterIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RegisterValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetSFXAudioVolume
struct ABendAudioManager_SetSFXAudioVolume_Params
{
	float                                              NewVolumeLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               calledFromSlider;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetPremasterSubmix
struct ABendAudioManager_SetPremasterSubmix_Params
{
	struct FString                                     SubMixName;                                               // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetOnWeaponWheelOpenPauseVO
struct ABendAudioManager_SetOnWeaponWheelOpenPauseVO_Params
{
	bool                                               Pause;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetMusicAudioVolume
struct ABendAudioManager_SetMusicAudioVolume_Params
{
	float                                              NewVolumeLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetMissionEndScreenUp
struct ABendAudioManager_SetMissionEndScreenUp_Params
{
	bool                                               IsUp;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetMaxObstruction
struct ABendAudioManager_SetMaxObstruction_Params
{
	float                                              fMaxObstruction;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetGlobalRegisterValue
struct ABendAudioManager_SetGlobalRegisterValue_Params
{
	int                                                RegisterIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetCurrentMusicManager
struct ABendAudioManager_SetCurrentMusicManager_Params
{
	TAssetPtr<class UClass>                            MusicManagerClass;                                        // (Parm)
	struct FName                                       MusicEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetCurrentLevelSoundManager
struct ABendAudioManager_SetCurrentLevelSoundManager_Params
{
	TAssetPtr<class UClass>                            LevelSoundManagerClass;                                   // (Parm)
	struct FName                                       LevelSoundEventName;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetControllerSpeakerEnabledFromUserSetting
struct ABendAudioManager_SetControllerSpeakerEnabledFromUserSetting_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetCanPlayWildlifeAudio
struct ABendAudioManager_SetCanPlayWildlifeAudio_Params
{
	bool                                               CanPlay;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetCanPlayDynamicListenerAudio
struct ABendAudioManager_SetCanPlayDynamicListenerAudio_Params
{
	bool                                               CanPlay;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetCanPlayDistantNoiseAudio
struct ABendAudioManager_SetCanPlayDistantNoiseAudio_Params
{
	bool                                               CanPlay;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetBankLastUsedTime
struct ABendAudioManager_SetBankLastUsedTime_Params
{
	struct FString                                     BankName;                                                 // (Parm, ZeroConstructor)
};

// Function BendGame.BendAudioManager.SetAllAudioVolumes
struct ABendAudioManager_SetAllAudioVolumes_Params
{
	float                                              NewVolumeLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.SetActorDataWithAnimationMasterTimelineID
struct ABendAudioManager_SetActorDataWithAnimationMasterTimelineID_Params
{
	struct FName                                       PairedName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     PairedObject;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TimeOffset;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                UniqueAnimTimeID;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             SyncToAudioTime;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAudioManager.RemoveCurrentMusicManager
struct ABendAudioManager_RemoveCurrentMusicManager_Params
{
	TAssetPtr<class UClass>                            MusicManagerClass;                                        // (Parm)
};

// Function BendGame.BendAudioManager.RemoveCurrentLevelSoundManager
struct ABendAudioManager_RemoveCurrentLevelSoundManager_Params
{
	TAssetPtr<class UClass>                            LevelSoundManagerClass;                                   // (Parm)
};

// Function BendGame.BendAudioManager.PlayVOPOI
struct ABendAudioManager_PlayVOPOI_Params
{
	TEnumAsByte<EePOIType>                             POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIStateForVO>                       State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.PhotoModeOpened
struct ABendAudioManager_PhotoModeOpened_Params
{
};

// Function BendGame.BendAudioManager.PhotoModeClosed
struct ABendAudioManager_PhotoModeClosed_Params
{
};

// Function BendGame.BendAudioManager.PauseMenuOpened
struct ABendAudioManager_PauseMenuOpened_Params
{
};

// Function BendGame.BendAudioManager.PauseMenuClosed
struct ABendAudioManager_PauseMenuClosed_Params
{
};

// Function BendGame.BendAudioManager.PauseAllVO
struct ABendAudioManager_PauseAllVO_Params
{
};

// Function BendGame.BendAudioManager.PauseAllSoundsInGroup
struct ABendAudioManager_PauseAllSoundsInGroup_Params
{
	int                                                GroupToPause;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.PauseAllSounds
struct ABendAudioManager_PauseAllSounds_Params
{
	bool                                               bPauseMusic;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OptionsMenuOpened
struct ABendAudioManager_OptionsMenuOpened_Params
{
};

// Function BendGame.BendAudioManager.OptionsMenuClosed
struct ABendAudioManager_OptionsMenuClosed_Params
{
	bool                                               ClosedByPhotoMode;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OnTimeDilationChanged
struct ABendAudioManager_OnTimeDilationChanged_Params
{
	float                                              NewTimeDilation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OnConversationUnpaused
struct ABendAudioManager_OnConversationUnpaused_Params
{
	bool                                               ShouldDuckAudio;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OnConversationStarted
struct ABendAudioManager_OnConversationStarted_Params
{
	bool                                               ShouldDuckAudio;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OnConversationPaused
struct ABendAudioManager_OnConversationPaused_Params
{
	bool                                               ShouldUnduckAudio;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.OnConversationEnded
struct ABendAudioManager_OnConversationEnded_Params
{
	bool                                               ShouldUnduckAudio;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.MusicEventWasCalled
struct ABendAudioManager_MusicEventWasCalled_Params
{
	class UBendMusicManager*                           MusicManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       MusicEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.MainMenuOpened
struct ABendAudioManager_MainMenuOpened_Params
{
};

// Function BendGame.BendAudioManager.MainMenuClosed
struct ABendAudioManager_MainMenuClosed_Params
{
};

// Function BendGame.BendAudioManager.LoadSoundClass
struct ABendAudioManager_LoadSoundClass_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.IsVO_Paused
struct ABendAudioManager_IsVO_Paused_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.IsSoundInSoundClass
struct ABendAudioManager_IsSoundInSoundClass_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.IsMusicManagerWaitingToLoad
struct ABendAudioManager_IsMusicManagerWaitingToLoad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.IsAudioPaused
struct ABendAudioManager_IsAudioPaused_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.HaveAllRippersBeenKilledInTheGame
struct ABendAudioManager_HaveAllRippersBeenKilledInTheGame_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GroupMixerSetBaseLevel
struct ABendAudioManager_GroupMixerSetBaseLevel_Params
{
	float                                              DBLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTimeSeconds;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetSoundsLocalRegisterValue
struct ABendAudioManager_GetSoundsLocalRegisterValue_Params
{
	class UAudioComponent*                             pAudioComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                RegisterIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetOuterRadius
struct ABendAudioManager_GetOuterRadius_Params
{
	class USoundBase*                                  SoundBase;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetNumMusicManagers
struct ABendAudioManager_GetNumMusicManagers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetMinTimeDilationValue
struct ABendAudioManager_GetMinTimeDilationValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetListenerPosition
struct ABendAudioManager_GetListenerPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetGlobalRegisterValue
struct ABendAudioManager_GetGlobalRegisterValue_Params
{
	int                                                RegisterIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetDistanceFromListenerSquared
struct ABendAudioManager_GetDistanceFromListenerSquared_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetDistanceFromListener
struct ABendAudioManager_GetDistanceFromListener_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetCurrentMusicManager
struct ABendAudioManager_GetCurrentMusicManager_Params
{
	class UBendMusicManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetCurrentLevelSoundManager
struct ABendAudioManager_GetCurrentLevelSoundManager_Params
{
	class UBendLevelSoundManager*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetConversationPawnIsIn
struct ABendAudioManager_GetConversationPawnIsIn_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckPausedOrInterrupted;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.GetBendAudioManager
struct ABendAudioManager_GetBendAudioManager_Params
{
	class ABendAudioManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.FadingOutToBlackStarted
struct ABendAudioManager_FadingOutToBlackStarted_Params
{
	bool                                               IsForCinematic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.FadingInFromBlackStarted
struct ABendAudioManager_FadingInFromBlackStarted_Params
{
	bool                                               IsForCinematic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.EndTrackingEffect
struct ABendAudioManager_EndTrackingEffect_Params
{
};

// Function BendGame.BendAudioManager.EnableTrackingEffect
struct ABendAudioManager_EnableTrackingEffect_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.EnableRingingEarsEffect
struct ABendAudioManager_EnableRingingEarsEffect_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAudioManager.EnableRenderingSubmix
struct ABendAudioManager_EnableRenderingSubmix_Params
{
	class UAudioComponent*                             AudioComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBendAudioRenderingSubmixData*               RenderingSubmixData;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.DisableRenderingSubmix
struct ABendAudioManager_DisableRenderingSubmix_Params
{
	class UAudioComponent*                             AudioComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAudioManager.CinematicAudioInterrupted
struct ABendAudioManager_CinematicAudioInterrupted_Params
{
};

// Function BendGame.BendAudioManager.BendPlayImpactFX
struct ABendAudioManager_BendPlayImpactFX_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SndCueSurface;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticleSurface;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SndCuePuddle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlePuddle;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SurfaceTypeName;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendAudioManager.ApplyUserSettings
struct ABendAudioManager_ApplyUserSettings_Params
{
	class UGameUserSettings*                           InUserSettings;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAudioManager.AllRippersHaveBeenKilledInTheGame
struct ABendAudioManager_AllRippersHaveBeenKilledInTheGame_Params
{
	bool                                               AllKilled;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.UnbindEventsFromTransitionNotifies
struct UBendAnimBlueprintMessenger_UnbindEventsFromTransitionNotifies_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             StartDelegate;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             EndDelegate;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             InterruptDelegate;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.UnbindEventsFromStateNotifies
struct UBendAnimBlueprintMessenger_UnbindEventsFromStateNotifies_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             EnteredDelegate;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             LeftDelegate;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             FullyBlendedDelegate;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.UnbindEventFromTransitionNotify
struct UBendAnimBlueprintMessenger_UnbindEventFromTransitionNotify_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EBendAnimTransitionEvent>              eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.UnbindEventFromStateNotify
struct UBendAnimBlueprintMessenger_UnbindEventFromStateNotify_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EBendAnimStateEvent>                   eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.UnbindEventFromGeneralNotify
struct UBendAnimBlueprintMessenger_UnbindEventFromGeneralNotify_Params
{
	struct FName                                       NotifyId;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.RequestTransition_WithStartEvent
struct UBendAnimBlueprintMessenger_RequestTransition_WithStartEvent_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             StartDelegate;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.RequestTransition_WithStartAndFailEvents
struct UBendAnimBlueprintMessenger_RequestTransition_WithStartAndFailEvents_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             StartDelegate;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             FailStartDelegate;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.RequestTransition_WithFailEvent
struct UBendAnimBlueprintMessenger_RequestTransition_WithFailEvent_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             FailStartDelegate;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.RequestTransition
struct UBendAnimBlueprintMessenger_RequestTransition_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.BindEventToTransitionNotify
struct UBendAnimBlueprintMessenger_BindEventToTransitionNotify_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EBendAnimTransitionEvent>              eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.BindEventToStateNotify
struct UBendAnimBlueprintMessenger_BindEventToStateNotify_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EBendAnimStateEvent>                   eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessenger.BindEventToGeneralNotify
struct UBendAnimBlueprintMessenger_BindEventToGeneralNotify_Params
{
	struct FName                                       NotifyId;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Delegate;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.BindEventsToTransitionNotifies
struct UBendAnimBlueprintMessenger_BindEventsToTransitionNotifies_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             StartDelegate;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             EndDelegate;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             InterruptDelegate;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendAnimBlueprintMessenger.BindEventsToStateNotifies
struct UBendAnimBlueprintMessenger_BindEventsToStateNotifies_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             EnteredDelegate;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             LeftDelegate;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             FullyBlendedDelegate;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendSpringInterpolator.TickWithTarget
struct UBendSpringInterpolator_TickWithTarget_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.Tick
struct UBendSpringInterpolator_Tick_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.SetTarget
struct UBendSpringInterpolator_SetTarget_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.SetNumIterations
struct UBendSpringInterpolator_SetNumIterations_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              NumIterations;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.SetNaturalFrequency
struct UBendSpringInterpolator_SetNaturalFrequency_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              NaturalFrequency;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.SetDampingRatio
struct UBendSpringInterpolator_SetDampingRatio_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DampingRatio;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.ResetCurrentAndTargetAndVelocity
struct UBendSpringInterpolator_ResetCurrentAndTargetAndVelocity_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolator.OverrideVelocity
struct UBendSpringInterpolator_OverrideVelocity_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolator.OverrideCurrent
struct UBendSpringInterpolator_OverrideCurrent_Params
{
	struct FBendSpringInterpolatedFloat                InInterpolatedFloat;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSpringInterpolatedFloat                OutInterpolatedFloat;                                     // (Parm, OutParm)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.TickWithTarget_NEW
struct UBendSpringInterpolatorFunctionLibrary_TickWithTarget_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.Tick_NEW
struct UBendSpringInterpolatorFunctionLibrary_Tick_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.SetTarget_NEW
struct UBendSpringInterpolatorFunctionLibrary_SetTarget_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.SetNumIterations_NEW
struct UBendSpringInterpolatorFunctionLibrary_SetNumIterations_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              NumIterations;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.SetNaturalFrequency_NEW
struct UBendSpringInterpolatorFunctionLibrary_SetNaturalFrequency_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              NaturalFrequency;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.SetDampingRatio_NEW
struct UBendSpringInterpolatorFunctionLibrary_SetDampingRatio_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              DampingRatio;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.ResetCurrentAndTargetAndVelocity_NEW
struct UBendSpringInterpolatorFunctionLibrary_ResetCurrentAndTargetAndVelocity_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.OverrideVelocity_NEW
struct UBendSpringInterpolatorFunctionLibrary_OverrideVelocity_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.OverrideCurrent_NEW
struct UBendSpringInterpolatorFunctionLibrary_OverrideCurrent_NEW_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpolatorFunctionLibrary.EnableUnwindAngle
struct UBendSpringInterpolatorFunctionLibrary_EnableUnwindAngle_Params
{
	struct FBendSpringInterpolatedFloat                InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	bool                                               bEnableUnwindAngle;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInUseRadians;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.TickWithTarget
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_TickWithTarget_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.Tick
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_Tick_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.SetTarget
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_SetTarget_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.SetNumIterations
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_SetNumIterations_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              NumIterations;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.SetNaturalFrequency
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_SetNaturalFrequency_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              NaturalFrequency;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.SetDampingRatio
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_SetDampingRatio_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              DampingRatio;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.ResetCurrentAndTargetAndVelocity
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_ResetCurrentAndTargetAndVelocity_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.OverrideVelocity
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_OverrideVelocity_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.OverrideCurrent
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_OverrideCurrent_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpringInterpFunctionLibrary_WithAngleHysteresis.EnableUnwindAngle
struct UBendSpringInterpFunctionLibrary_WithAngleHysteresis_EnableUnwindAngle_Params
{
	struct FBendSpringInterp_WithAngleHysteresis       InterpolatedFloat;                                        // (Parm, OutParm, ReferenceParm)
	bool                                               bEnableUnwindAngle;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInUseRadians;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemAmmo.GetAmmoID
struct UInventoryItemAmmo_GetAmmoID_Params
{
	TEnumAsByte<EInventoryAmmoID>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemCollectible.GetShortDescription
struct UInventoryItemCollectible_GetShortDescription_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItemCollectible.GetCollectibleID
struct UInventoryItemCollectible_GetCollectibleID_Params
{
	TEnumAsByte<EInventoryCollectibleID>               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemConsumable.GetEffectDuration
struct UInventoryItemConsumable_GetEffectDuration_Params
{
	class UBendAbilitySystemComponent*                 AbilityComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              EffectLevel;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemRecipe.NumComponentsRequired
struct UInventoryItemRecipe_NumComponentsRequired_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemRecipe.GetRequiredComponentCount
struct UInventoryItemRecipe_GetRequiredComponentCount_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemRecipe.GetRecipeID
struct UInventoryItemRecipe_GetRecipeID_Params
{
	TEnumAsByte<EInventoryRecipeID>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.WeaponID
struct UInventoryWeaponItem_WeaponID_Params
{
	TEnumAsByte<EInventoryWeaponID>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsTrap
struct UInventoryWeaponItem_IsTrap_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsThrown
struct UInventoryWeaponItem_IsThrown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsRock
struct UInventoryWeaponItem_IsRock_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsRifle
struct UInventoryWeaponItem_IsRifle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsProp
struct UInventoryWeaponItem_IsProp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsPistol
struct UInventoryWeaponItem_IsPistol_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsMelee
struct UInventoryWeaponItem_IsMelee_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsGun
struct UInventoryWeaponItem_IsGun_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsExplosive
struct UInventoryWeaponItem_IsExplosive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.IsBait
struct UInventoryWeaponItem_IsBait_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponItem.GetDefaultWeapon
struct UInventoryWeaponItem_GetDefaultWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWeaponPart.GetWeaponPartID
struct UInventoryItemWeaponPart_GetWeaponPartID_Params
{
	TEnumAsByte<EWeaponPartID>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWeaponPart.GetHardPoint
struct UInventoryItemWeaponPart_GetHardPoint_Params
{
	TEnumAsByte<EWeaponHardPoint>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWeaponPart.CanPartGoOnWeapon
struct UInventoryItemWeaponPart_CanPartGoOnWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryDropTable.RandomDropItem
struct UInventoryDropTable_RandomDropItem_Params
{
	struct FBendInventoryItemCount                     outItemCount;                                             // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryDropTableManager.SpawnPickupForCharacterSubClass
struct UInventoryDropTableManager_SpawnPickupForCharacterSubClass_Params
{
	TEnumAsByte<ECharacterClass>                       CharacterClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SubClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  Location;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class AActor*                                      pWorldOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendInventoryPickup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryDropTableManager.GetRandomItemTag
struct UInventoryDropTableManager_GetRandomItemTag_Params
{
	TArray<struct FInventoryDropTagItem>               Entries;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FInventoryItemTag                           ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryDropTableManager.GetDropTableForClass
struct UInventoryDropTableManager_GetDropTableForClass_Params
{
	TEnumAsByte<ECharacterClass>                       dropClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FCharacterClassDropTable                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryDropTableManager.GetDropsEquippedItemForCharacterClass
struct UInventoryDropTableManager_GetDropsEquippedItemForCharacterClass_Params
{
	TEnumAsByte<ECharacterClass>                       CharacterClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryDropTableManager.DropItemForCharacterSubClass
struct UInventoryDropTableManager_DropItemForCharacterSubClass_Params
{
	TEnumAsByte<ECharacterClass>                       CharacterClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SubClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendInventoryItemCount                     outItemCount;                                             // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.UpdateColor
struct UMiniMapLocationComponent_UpdateColor_Params
{
	struct FLinearColor                                NewColor;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.ShouldDisplay
struct UMiniMapLocationComponent_ShouldDisplay_Params
{
	bool                                               IsOnBike;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetVisibility
struct UMiniMapLocationComponent_SetVisibility_Params
{
	bool                                               VisibleOnMiniMap;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               VisibleOnMap;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetObjectiveRegionColor
struct UMiniMapLocationComponent_SetObjectiveRegionColor_Params
{
	struct FLinearColor                                Color;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetMarkerOffset
struct UMiniMapLocationComponent_SetMarkerOffset_Params
{
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetMapObjectiveRegionDetails
struct UMiniMapLocationComponent_SetMapObjectiveRegionDetails_Params
{
	struct FMapObjectiveRegionDetails                  MapObjectiveRegionDetails;                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.MiniMapLocationComponent.SetLocationType
struct UMiniMapLocationComponent_SetLocationType_Params
{
	TEnumAsByte<EMiniMapLocation>                      Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ResetAlphaAndScale;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetLocationImageTexturePath
struct UMiniMapLocationComponent_SetLocationImageTexturePath_Params
{
	struct FString                                     Path;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.MiniMapLocationComponent.SetLocationImageTexture
struct UMiniMapLocationComponent_SetLocationImageTexture_Params
{
	class UTexture2D*                                  Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetHudAndMapVisibility
struct UMiniMapLocationComponent_SetHudAndMapVisibility_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetAlwaysVisible
struct UMiniMapLocationComponent_SetAlwaysVisible_Params
{
	bool                                               NewAlwaysVisible;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.SetAlpha
struct UMiniMapLocationComponent_SetAlpha_Params
{
	float                                              Alpha;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.IsNew
struct UMiniMapLocationComponent_IsNew_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.IsHidden
struct UMiniMapLocationComponent_IsHidden_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.HasLocationImage
struct UMiniMapLocationComponent_HasLocationImage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.GetPosition
struct UMiniMapLocationComponent_GetPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.GetLocationTextureAsset
struct UMiniMapLocationComponent_GetLocationTextureAsset_Params
{
	TAssetPtr<class UTexture2D>                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.MiniMapLocationComponent.GetLocationTexture
struct UMiniMapLocationComponent_GetLocationTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MiniMapLocationComponent.GetLocationName
struct UMiniMapLocationComponent_GetLocationName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.MiniMapLocationComponent.GetLocationDescription
struct UMiniMapLocationComponent_GetLocationDescription_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.MiniMapLocationComponent.CacheLocationTexture
struct UMiniMapLocationComponent_CacheLocationTexture_Params
{
	bool                                               FreeCache;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateWelcomeToThePartyPal
struct UBendTrophyManager_UpdateWelcomeToThePartyPal_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateTrophyCounterTiedToGameplayDatabase
struct UBendTrophyManager_UpdateTrophyCounterTiedToGameplayDatabase_Params
{
	struct FGameplayTag                                TheTrophyTag;                                             // (Parm)
	struct FName                                       DatabaseID;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateSurvivingIsntLiving
struct UBendTrophyManager_UpdateSurvivingIsntLiving_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateStealthKill
struct UBendTrophyManager_UpdateStealthKill_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateOldReliable
struct UBendTrophyManager_UpdateOldReliable_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateLockerWeaponCounts
struct UBendTrophyManager_UpdateLockerWeaponCounts_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateLendMeYourEars
struct UBendTrophyManager_UpdateLendMeYourEars_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateInventorySponge
struct UBendTrophyManager_UpdateInventorySponge_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateGraveRobber
struct UBendTrophyManager_UpdateGraveRobber_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateGoKickRocks
struct UBendTrophyManager_UpdateGoKickRocks_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateEncampmentJobs
struct UBendTrophyManager_UpdateEncampmentJobs_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateDIYOregonian
struct UBendTrophyManager_UpdateDIYOregonian_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateCollectibles
struct UBendTrophyManager_UpdateCollectibles_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateArtOfBikeRepair
struct UBendTrophyManager_UpdateArtOfBikeRepair_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.UpdateAllSkills
struct UBendTrophyManager_UpdateAllSkills_Params
{
	int                                                AddedCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.Unlock
struct UBendTrophyManager_Unlock_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
};

// Function BendGame.BendTrophyManager.TrophyUnlocked
struct UBendTrophyManager_TrophyUnlocked_Params
{
	struct FBendTrophy                                 Trophy;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               DisplayWidget;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.SyncUnlockedTrophies
struct UBendTrophyManager_SyncUnlockedTrophies_Params
{
};

// Function BendGame.BendTrophyManager.SetScreenShotForTrophy
struct UBendTrophyManager_SetScreenShotForTrophy_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.SetCounter
struct UBendTrophyManager_SetCounter_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.ResetTrophyData
struct UBendTrophyManager_ResetTrophyData_Params
{
};

// Function BendGame.BendTrophyManager.RegisterWeaponLockerTag
struct UBendTrophyManager_RegisterWeaponLockerTag_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                                AchievementTag;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendTrophyManager.PostMissionAwardFreakerKills
struct UBendTrophyManager_PostMissionAwardFreakerKills_Params
{
};

// Function BendGame.BendTrophyManager.OnUnlockedTrophiesRead
struct UBendTrophyManager_OnUnlockedTrophiesRead_Params
{
	TArray<int>                                        UnlockedIDs;                                              // (Parm, ZeroConstructor)
};

// Function BendGame.BendTrophyManager.OnTrophyScreenShotEnd
struct UBendTrophyManager_OnTrophyScreenShotEnd_Params
{
};

// Function BendGame.BendTrophyManager.OnTrophyScreenShotBegin
struct UBendTrophyManager_OnTrophyScreenShotBegin_Params
{
};

// Function BendGame.BendTrophyManager.OnTrophyDataChanged
struct UBendTrophyManager_OnTrophyDataChanged_Params
{
};

// Function BendGame.BendTrophyManager.OnRecipeCrafted
struct UBendTrophyManager_OnRecipeCrafted_Params
{
};

// Function BendGame.BendTrophyManager.IsUnlocked
struct UBendTrophyManager_IsUnlocked_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.InitializeBlueprintBinds
struct UBendTrophyManager_InitializeBlueprintBinds_Params
{
};

// Function BendGame.BendTrophyManager.GetTrophyManager
struct UBendTrophyManager_GetTrophyManager_Params
{
	class UBendTrophyManager*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrophyManager.GetTrophy
struct UBendTrophyManager_GetTrophy_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
	struct FBendTrophy                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendTrophyManager.FreakerKilledByPlayerUpdate
struct UBendTrophyManager_FreakerKilledByPlayerUpdate_Params
{
};

// Function BendGame.BendTrophyManager.AdjustCounter
struct UBendTrophyManager_AdjustCounter_Params
{
	struct FGameplayTag                                TrophyTag;                                                // (Parm)
	int                                                Amount;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.GetVector
struct UBendGameplayDatabase_GetVector_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.GetString
struct UBendGameplayDatabase_GetString_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayDatabase.GetInt
struct UBendGameplayDatabase_GetInt_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.GetFloat
struct UBendGameplayDatabase_GetFloat_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.GetBool
struct UBendGameplayDatabase_GetBool_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteString
struct UBendGameplayDatabase_DeleteString_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteInt
struct UBendGameplayDatabase_DeleteInt_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteFVector
struct UBendGameplayDatabase_DeleteFVector_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteFloat
struct UBendGameplayDatabase_DeleteFloat_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteEntry
struct UBendGameplayDatabase_DeleteEntry_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.DeleteBool
struct UBendGameplayDatabase_DeleteBool_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.ContainsVector
struct UBendGameplayDatabase_ContainsVector_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.ContainsString
struct UBendGameplayDatabase_ContainsString_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.ContainsInt
struct UBendGameplayDatabase_ContainsInt_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.ContainsFloat
struct UBendGameplayDatabase_ContainsFloat_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.ContainsBool
struct UBendGameplayDatabase_ContainsBool_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.AddVector
struct UBendGameplayDatabase_AddVector_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.AddString
struct UBendGameplayDatabase_AddString_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayDatabase.AddInt
struct UBendGameplayDatabase_AddInt_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.AddFloat
struct UBendGameplayDatabase_AddFloat_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayDatabase.AddBool
struct UBendGameplayDatabase_AddBool_Params
{
	TEnumAsByte<EGameDatabaseCategory>                 Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSaveGame.Reset
struct UBendSaveGame_Reset_Params
{
};

// Function BendGame.BendSaveGame.GetSaveImage
struct UBendSaveGame_GetSaveImage_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.SetPartStats
struct UBendVehicleMeshAttachmentSpecs_SetPartStats_Params
{
	struct FInventoryItemStats                         Stats;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.OnVehiclePartAttached
struct UBendVehicleMeshAttachmentSpecs_OnVehiclePartAttached_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetWaterDamageResistance
struct UBendVehicleMeshAttachmentSpecs_GetWaterDamageResistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetTireType
struct UBendVehicleMeshAttachmentSpecs_GetTireType_Params
{
	class UTireType*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetPartStats
struct UBendVehicleMeshAttachmentSpecs_GetPartStats_Params
{
	struct FInventoryItemStats                         Stats;                                                    // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetPartHealthIncrease
struct UBendVehicleMeshAttachmentSpecs_GetPartHealthIncrease_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetEngineNoiseReductionPercent
struct UBendVehicleMeshAttachmentSpecs_GetEngineNoiseReductionPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetDamageReductionPercent
struct UBendVehicleMeshAttachmentSpecs_GetDamageReductionPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetAmmoStorageTags
struct UBendVehicleMeshAttachmentSpecs_GetAmmoStorageTags_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.GetAmmoStorageQuantities
struct UBendVehicleMeshAttachmentSpecs_GetAmmoStorageQuantities_Params
{
	TArray<int>                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendVehicleMeshAttachmentSpecs.CreateVehiclePart
struct UBendVehicleMeshAttachmentSpecs_CreateVehiclePart_Params
{
	class UInventoryItemMotorcyclePart*                Part;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               GenerateStats;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryPart                              OutPart;                                                  // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.Wait
struct ABendLevelScriptActor_Wait_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.BendLevelScriptActor.SetupBookKeepingWithVehicles
struct ABendLevelScriptActor_SetupBookKeepingWithVehicles_Params
{
	TArray<class ABendSpawnLocationBase*>              SpawnLocations;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnSpawned;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnKilled;                                                 // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDespawned;                                              // (Parm, ZeroConstructor)
	int                                                BookKeepingID;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.SetupBookKeepingForAreaWithVehicles
struct ABendLevelScriptActor_SetupBookKeepingForAreaWithVehicles_Params
{
	class ABendAmbientSpawnArea*                       SpawnArea;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSpawned;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnKilled;                                                 // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDespawned;                                              // (Parm, ZeroConstructor)
	int                                                BookKeepingID;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.SetupBookKeepingForArea
struct ABendLevelScriptActor_SetupBookKeepingForArea_Params
{
	class ABendAmbientSpawnArea*                       SpawnArea;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSpawned;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnKilled;                                                 // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDespawned;                                              // (Parm, ZeroConstructor)
	int                                                BookKeepingID;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.SetUpBookKeeping
struct ABendLevelScriptActor_SetUpBookKeeping_Params
{
	TArray<class ABendSpawnLocationBase*>              SpawnLocations;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnSpawned;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnKilled;                                                 // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDespawned;                                              // (Parm, ZeroConstructor)
	int                                                BookKeepingID;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.RestoreWaitActionEntries
struct ABendLevelScriptActor_RestoreWaitActionEntries_Params
{
};

// Function BendGame.BendLevelScriptActor.ReadyToCheckpointSaveAfterMidCinematic
struct ABendLevelScriptActor_ReadyToCheckpointSaveAfterMidCinematic_Params
{
	struct FName                                       CinematicLevel;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.ReadyForInitialCheckpoint
struct ABendLevelScriptActor_ReadyForInitialCheckpoint_Params
{
};

// Function BendGame.BendLevelScriptActor.PlayerDiedHandler
struct ABendLevelScriptActor_PlayerDiedHandler_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.OnResumeAfterMidLevelCinematic
struct ABendLevelScriptActor_OnResumeAfterMidLevelCinematic_Params
{
	struct FName                                       CinematicLevel;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.OnRestoreCheckpoint
struct ABendLevelScriptActor_OnRestoreCheckpoint_Params
{
	struct FString                                     SaveGameID;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.BendLevelScriptActor.OnMissionBegin
struct ABendLevelScriptActor_OnMissionBegin_Params
{
};

// Function BendGame.BendLevelScriptActor.OnMidCinematicEnded
struct ABendLevelScriptActor_OnMidCinematicEnded_Params
{
	struct FName                                       CinematicLevel;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.OnCheckpointLoaded
struct ABendLevelScriptActor_OnCheckpointLoaded_Params
{
	struct FString                                     SaveGameID;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.BendLevelScriptActor.HandleOnSpawnWithVehicle
struct ABendLevelScriptActor_HandleOnSpawnWithVehicle_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnSpawn
struct ABendLevelScriptActor_HandleOnSpawn_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnResumeGamplayAfterMidCinematic
struct ABendLevelScriptActor_HandleOnResumeGamplayAfterMidCinematic_Params
{
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendLevelScriptActor.HandleOnMissionCinematicSkipped
struct ABendLevelScriptActor_HandleOnMissionCinematicSkipped_Params
{
	struct FName                                       Message;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnMissionCinematicEnded
struct ABendLevelScriptActor_HandleOnMissionCinematicEnded_Params
{
	struct FName                                       Message;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnMissionCinematicBegan
struct ABendLevelScriptActor_HandleOnMissionCinematicBegan_Params
{
	struct FName                                       Message;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnMissionBegin
struct ABendLevelScriptActor_HandleOnMissionBegin_Params
{
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendLevelScriptActor.HandleOnKilled
struct ABendLevelScriptActor_HandleOnKilled_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnDespawned
struct ABendLevelScriptActor_HandleOnDespawned_Params
{
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleOnCheckpoint
struct ABendLevelScriptActor_HandleOnCheckpoint_Params
{
	struct FString                                     SaveGameID;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.BendLevelScriptActor.HandleOnActiveMissionSet
struct ABendLevelScriptActor_HandleOnActiveMissionSet_Params
{
	class ABendGameScriptBase*                         MissionScriptBase;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.HandleDebugOnTeleportToCheckpoint
struct ABendLevelScriptActor_HandleDebugOnTeleportToCheckpoint_Params
{
	int                                                Checkpoint;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.GetBookKeepingData
struct ABendLevelScriptActor_GetBookKeepingData_Params
{
	int                                                BookKeepingID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBookKeepingData                            ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendLevelScriptActor.DeleteBookKeepingByID
struct ABendLevelScriptActor_DeleteBookKeepingByID_Params
{
	int                                                BookKeepingID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Successful;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.DebugOnTeleportToCheckpoint
struct ABendLevelScriptActor_DebugOnTeleportToCheckpoint_Params
{
	int                                                Checkpoint;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLevelScriptActor.CheckpointWaitActionEntries
struct ABendLevelScriptActor_CheckpointWaitActionEntries_Params
{
};

// Function BendGame.BendLevelScriptActor.CancelAllWaitCalls
struct ABendLevelScriptActor_CancelAllWaitCalls_Params
{
};

// Function BendGame.BendGameMission.UpdateUnlockedMissions
struct ABendGameMission_UpdateUnlockedMissions_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionStates>                        NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.UpdateFailureCounts
struct ABendGameMission_UpdateFailureCounts_Params
{
	bool                                               Reset;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.UpdateCurrentEpisode
struct ABendGameMission_UpdateCurrentEpisode_Params
{
	TEnumAsByte<EMissionCategories>                    NewEpisode;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.UnlockMissionFromID
struct ABendGameMission_UnlockMissionFromID_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.UnloadLevels
struct ABendGameMission_UnloadLevels_Params
{
	TArray<struct FName>                               Levels;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameMission.TurnOnOptionalSkipOnPlayerMultipleFailure
struct ABendGameMission_TurnOnOptionalSkipOnPlayerMultipleFailure_Params
{
	struct FVector                                     PointToCheckAround;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               useDistanceCheck;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFromPoint;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SkipID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DontReactivateIfActive;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.TrackAJobOrMission
struct ABendGameMission_TrackAJobOrMission_Params
{
	class UObject*                                     DataAsset;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideCurrentTracked;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.TemporaryEnableBlackScreenPost
struct ABendGameMission_TemporaryEnableBlackScreenPost_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.TeleportToCheckpoint
struct ABendGameMission_TeleportToCheckpoint_Params
{
	int                                                Checkpoint;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.StoreAllMissionTriggers
struct ABendGameMission_StoreAllMissionTriggers_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.StopFading
struct ABendGameMission_StopFading_Params
{
};

// Function BendGame.BendGameMission.StartRecordAllCinematics
struct ABendGameMission_StartRecordAllCinematics_Params
{
};

// Function BendGame.BendGameMission.StartMissionFromID
struct ABendGameMission_StartMissionFromID_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyLoadIfUnlocked;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.StartFading
struct ABendGameMission_StartFading_Params
{
};

// Function BendGame.BendGameMission.StartEndingMission
struct ABendGameMission_StartEndingMission_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.StartEndingDLCMission
struct ABendGameMission_StartEndingDLCMission_Params
{
};

// Function BendGame.BendGameMission.StartChainedMissionOnDelay
struct ABendGameMission_StartChainedMissionOnDelay_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.SkipCurrentCinematic
struct ABendGameMission_SkipCurrentCinematic_Params
{
};

// Function BendGame.BendGameMission.SetNewEndingCinematicLevel
struct ABendGameMission_SetNewEndingCinematicLevel_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NewEndingCin;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.SetIsInDLCChallengeMission
struct ABendGameMission_SetIsInDLCChallengeMission_Params
{
	bool                                               bValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.SetCustomWorldSettings
struct ABendGameMission_SetCustomWorldSettings_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.SetCurrentMatineeParams
struct ABendGameMission_SetCurrentMatineeParams_Params
{
};

// Function BendGame.BendGameMission.SetCurrentCinematicLevelsToLoad
struct ABendGameMission_SetCurrentCinematicLevelsToLoad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.SetActiveMissionScript
struct ABendGameMission_SetActiveMissionScript_Params
{
	class ABendGameScriptBase*                         Script;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ReturnFormattedListOfCinematics
struct ABendGameMission_ReturnFormattedListOfCinematics_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMission.ResumeAfterPostChallengeMenu
struct ABendGameMission_ResumeAfterPostChallengeMenu_Params
{
	bool                                               ReturningToMenu;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.ResetWorldSettingsToDefault
struct ABendGameMission_ResetWorldSettingsToDefault_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.RequestCinematicToStart
struct ABendGameMission_RequestCinematicToStart_Params
{
	class AMatineeActor*                               TheMatinee;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      SafeTeleportPoint;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.RemoveCinematicSkipButton
struct ABendGameMission_RemoveCinematicSkipButton_Params
{
};

// Function BendGame.BendGameMission.ReloadBecauseOfJobFailure
struct ABendGameMission_ReloadBecauseOfJobFailure_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayFailReason;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.PullAndStoreAllMissionAndJobRewards
struct ABendGameMission_PullAndStoreAllMissionAndJobRewards_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.PreLoadCinematicLevelMatineeActor
struct ABendGameMission_PreLoadCinematicLevelMatineeActor_Params
{
	struct FName                                       CinID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.PreLoadCinematicLevelByID
struct ABendGameMission_PreLoadCinematicLevelByID_Params
{
	struct FName                                       CinID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.PlayNextCinematicInQue
struct ABendGameMission_PlayNextCinematicInQue_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.PlayMissionCinematicByID
struct ABendGameMission_PlayMissionCinematicByID_Params
{
	struct FName                                       CinematicID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendMissionData*                            OverrideMissionData;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.PlayJobCinematicByID
struct ABendGameMission_PlayJobCinematicByID_Params
{
	class UJobClassInfo*                               JobsData;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CinematicID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.OWVOUnlockMission
struct ABendGameMission_OWVOUnlockMission_Params
{
};

// Function BendGame.BendGameMission.OnWaitForPostChallengeWidgets
struct ABendGameMission_OnWaitForPostChallengeWidgets_Params
{
};

// Function BendGame.BendGameMission.OnLiveActorSwapComplete
struct ABendGameMission_OnLiveActorSwapComplete_Params
{
	TArray<struct FSwappedActorInfo>                   LiveSwappedActorInfos;                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendGameMission.ManuallyOverrideFailureCounterActive
struct ABendGameMission_ManuallyOverrideFailureCounterActive_Params
{
	struct FName                                       SkipID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DisableCounter;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.LoadInLevelsAndPlayCinematic
struct ABendGameMission_LoadInLevelsAndPlayCinematic_Params
{
};

// Function BendGame.BendGameMission.JobManagerLoaded
struct ABendGameMission_JobManagerLoaded_Params
{
};

// Function BendGame.BendGameMission.IsInProcessofLoadingSaveOrCheckpoint
struct ABendGameMission_IsInProcessofLoadingSaveOrCheckpoint_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.IsCinematicSkippable
struct ABendGameMission_IsCinematicSkippable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.IsCinematicInQue
struct ABendGameMission_IsCinematicInQue_Params
{
	struct FName                                       CinematicID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.HandlePlayerDeathAndRespawning
struct ABendGameMission_HandlePlayerDeathAndRespawning_Params
{
};

// Function BendGame.BendGameMission.HandleMidCin
struct ABendGameMission_HandleMidCin_Params
{
	bool                                               EndOfCinematic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.HandleIntroCin
struct ABendGameMission_HandleIntroCin_Params
{
	bool                                               EndOfCinematic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.HandleEndingCin
struct ABendGameMission_HandleEndingCin_Params
{
	bool                                               EndOfCinematic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.GoToFirstFrameOfBlackScreen
struct ABendGameMission_GoToFirstFrameOfBlackScreen_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GiveStorylineRewards
struct ABendGameMission_GiveStorylineRewards_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GiveMissionRewards
struct ABendGameMission_GiveMissionRewards_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetStoryLineData
struct ABendGameMission_GetStoryLineData_Params
{
	class UBendStoryLineData*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetMissionTriggerFromMissionData
struct ABendGameMission_GetMissionTriggerFromMissionData_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendGameMissionTrigger*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetMissionDataFromIDNew
struct ABendGameMission_GetMissionDataFromIDNew_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendMissionData*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsMissionCompleteFromID
struct ABendGameMission_GetIsMissionCompleteFromID_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Completed;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionStates>                        CurrentState;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsMissionCompleted
struct ABendGameMission_GetIsMissionCompleted_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsMissionAndJobProgressionBlocked
struct ABendGameMission_GetIsMissionAndJobProgressionBlocked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsMissionActive
struct ABendGameMission_GetIsMissionActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsInDLCChallengeMission
struct ABendGameMission_GetIsInDLCChallengeMission_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsCinematicActive
struct ABendGameMission_GetIsCinematicActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetIsBlackScreenActive
struct ABendGameMission_GetIsBlackScreenActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetFailurePostProcess
struct ABendGameMission_GetFailurePostProcess_Params
{
	class UPostProcessComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetFailureMaxTime
struct ABendGameMission_GetFailureMaxTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetFadingPostProcess
struct ABendGameMission_GetFadingPostProcess_Params
{
	class UPostProcessComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentTrackedMissionOrJob
struct ABendGameMission_GetCurrentTrackedMissionOrJob_Params
{
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentEpisode
struct ABendGameMission_GetCurrentEpisode_Params
{
	TEnumAsByte<EMissionCategories>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentDemoType
struct ABendGameMission_GetCurrentDemoType_Params
{
	TEnumAsByte<EDebugDemoTypes>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentCinematicLevelData
struct ABendGameMission_GetCurrentCinematicLevelData_Params
{
	struct FBendCinematicLevelData                     ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameMission.GetCurrentCinematicLevel
struct ABendGameMission_GetCurrentCinematicLevel_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentActiveMissionTrigger
struct ABendGameMission_GetCurrentActiveMissionTrigger_Params
{
	class ABendGameMissionTrigger*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentActiveMissionScript
struct ABendGameMission_GetCurrentActiveMissionScript_Params
{
	class ABendGameScriptBase*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetCurrentActiveMissionNameText
struct ABendGameMission_GetCurrentActiveMissionNameText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameMission.GetCurrentActiveMission
struct ABendGameMission_GetCurrentActiveMission_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetChapterNameFromEpisode
struct ABendGameMission_GetChapterNameFromEpisode_Params
{
	TEnumAsByte<EMissionCategories>                    Act;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameMission.GetCanQuitMission
struct ABendGameMission_GetCanQuitMission_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.GetAllTheMissionTriggers
struct ABendGameMission_GetAllTheMissionTriggers_Params
{
	TArray<class ABendGameMissionTrigger*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMission.GetAllChainedStoryLineData
struct ABendGameMission_GetAllChainedStoryLineData_Params
{
	TArray<struct FBendStoryLinesBasicDataForUI>       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMission.GetAllAssociatedActiveMissionLevels
struct ABendGameMission_GetAllAssociatedActiveMissionLevels_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMission.GetAllActiveOrUnlockedMissionDatas
struct ABendGameMission_GetAllActiveOrUnlockedMissionDatas_Params
{
	TArray<class UBendMissionData*>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMission.GetActiveMissionData
struct ABendGameMission_GetActiveMissionData_Params
{
	class UBendMissionData*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ForceUpdateToNextMatineeAndPlay
struct ABendGameMission_ForceUpdateToNextMatineeAndPlay_Params
{
	class AMatineeActor*                               TheMatinee;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayMatinee;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HandleSkipping;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.FinishEndingMission
struct ABendGameMission_FinishEndingMission_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FinishEndingDLCChallenge
struct ABendGameMission_FinishEndingDLCChallenge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FindCinematicOfTypeFromList
struct ABendGameMission_FindCinematicOfTypeFromList_Params
{
	TArray<struct FBendCinematicLevelData>             CinematicData;                                            // (Parm, ZeroConstructor)
	TEnumAsByte<ECinematicFadingTypes>                 CinType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FindCinematicByIDFromList
struct ABendGameMission_FindCinematicByIDFromList_Params
{
	TArray<struct FBendCinematicLevelData>             CinematicData;                                            // (Parm, ZeroConstructor)
	struct FName                                       CinID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FigureOutNextJobOrMissionToAutoTrack
struct ABendGameMission_FigureOutNextJobOrMissionToAutoTrack_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FadeInStarted
struct ABendGameMission_FadeInStarted_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FadeInPostProcessToCin
struct ABendGameMission_FadeInPostProcessToCin_Params
{
};

// Function BendGame.BendGameMission.FadeFromBlackStart
struct ABendGameMission_FadeFromBlackStart_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FadeFromBlackDone
struct ABendGameMission_FadeFromBlackDone_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.FadedIn
struct ABendGameMission_FadedIn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DontSynchStreamWhenPlayingNextCinematic
struct ABendGameMission_DontSynchStreamWhenPlayingNextCinematic_Params
{
	bool                                               BlockSynchStream;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.DisplayCinematicSkipButton
struct ABendGameMission_DisplayCinematicSkipButton_Params
{
};

// Function BendGame.BendGameMission.DelayedMainMenuCall
struct ABendGameMission_DelayedMainMenuCall_Params
{
};

// Function BendGame.BendGameMission.DebugUXTestingScreen
struct ABendGameMission_DebugUXTestingScreen_Params
{
	class UDataAsset*                                  AssetRelated;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugStartJobOrMissionFromExecutableString
struct ABendGameMission_DebugStartJobOrMissionFromExecutableString_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugSetupSkillsAndData
struct ABendGameMission_DebugSetupSkillsAndData_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugSetAllMissionPreReqsToComplete
struct ABendGameMission_DebugSetAllMissionPreReqsToComplete_Params
{
	class UBendMissionData*                            TheData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncludeSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugRequestCinematicMovieStart
struct ABendGameMission_DebugRequestCinematicMovieStart_Params
{
	class UMaterial*                                   MovieMaterial;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UMediaPlayer*                                MovieFilea;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   MovieSounda;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugLoadWorldDemo
struct ABendGameMission_DebugLoadWorldDemo_Params
{
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendMissionData*                            OverrideMission;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UJobClassInfo*>                       OverrideJobData;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               DoTeleport;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseOverridenData;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SettingCompletedInsteadOfUnlocked;                        // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionCategories>                    OverrideCategory;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugLoadMissionNow
struct ABendGameMission_DebugLoadMissionNow_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.DebugEndMovieFile
struct ABendGameMission_DebugEndMovieFile_Params
{
};

// Function BendGame.BendGameMission.DebugCompleteAllObjectives
struct ABendGameMission_DebugCompleteAllObjectives_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CollectAndAggregateStoryLines
struct ABendGameMission_CollectAndAggregateStoryLines_Params
{
};

// Function BendGame.BendGameMission.ClearChainedStoryLineData
struct ABendGameMission_ClearChainedStoryLineData_Params
{
};

// Function BendGame.BendGameMission.CinematicUnloaded
struct ABendGameMission_CinematicUnloaded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CinematicHasEnded
struct ABendGameMission_CinematicHasEnded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckTimeWaitToUnlockPreReq
struct ABendGameMission_CheckTimeWaitToUnlockPreReq_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckReLockReUnlockPreReqs
struct ABendGameMission_CheckReLockReUnlockPreReqs_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckMissionDataPreReqs
struct ABendGameMission_CheckMissionDataPreReqs_Params
{
	TArray<class UBendMissionData*>                    MissionData;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckIfPlayerCinematicPositionValid
struct ABendGameMission_CheckIfPlayerCinematicPositionValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckIfInGoodStateToSave
struct ABendGameMission_CheckIfInGoodStateToSave_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckIfAutoFailMission
struct ABendGameMission_CheckIfAutoFailMission_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckForMissionsOnHourChange
struct ABendGameMission_CheckForMissionsOnHourChange_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckForAnyNewActiveMissions
struct ABendGameMission_CheckForAnyNewActiveMissions_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckConditionObjectPreReqs
struct ABendGameMission_CheckConditionObjectPreReqs_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CheckAllPreReqs
struct ABendGameMission_CheckAllPreReqs_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionPreReqFailureReasons>          FailureReason;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChangeMissionTimeAndWeatherByID
struct ABendGameMission_ChangeMissionTimeAndWeatherByID_Params
{
	struct FName                                       TimeAndWeatherID;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChangeMissionTimeAndWeather
struct ABendGameMission_ChangeMissionTimeAndWeather_Params
{
	int                                                TimeAndWeatherIndex;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChangeCinematicFadingColor
struct ABendGameMission_ChangeCinematicFadingColor_Params
{
	TEnumAsByte<ECinematicFadingColors>                FadeType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ChangeWhenFadingDone;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChangeBlackScreenFadeSpeed
struct ABendGameMission_ChangeBlackScreenFadeSpeed_Params
{
	float                                              NewSpeed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChallengeMissionRestarting
struct ABendGameMission_ChallengeMissionRestarting_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMission.ChainingSetupStartOfMissionSettings
struct ABendGameMission_ChainingSetupStartOfMissionSettings_Params
{
};

// Function BendGame.BendGameMission.CallFadeOutOfBlack
struct ABendGameMission_CallFadeOutOfBlack_Params
{
	bool                                               UnhideHudAtEnd;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.CallFadeIntoBlack
struct ABendGameMission_CallFadeIntoBlack_Params
{
	bool                                               PauseInBlack;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
	bool                                               UnhideHudAtEnd;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.BlackScreenTickChecks
struct ABendGameMission_BlackScreenTickChecks_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.BeginMission
struct ABendGameMission_BeginMission_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.AnyGamepadInputKeysDown
struct ABendGameMission_AnyGamepadInputKeysDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMission.ActivateCinematicMode_Code
struct ABendGameMission_ActivateCinematicMode_Code_Params
{
	bool                                               MarkCinematicActive;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AffectsHUD;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECinematicHidingTypes>                 HideActors;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMissionData.UpdateWeatherMapSettings
struct UBendMissionData_UpdateWeatherMapSettings_Params
{
};

// Function BendGame.BendMissionData.GetIdentifierInStringForm
struct UBendMissionData_GetIdentifierInStringForm_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendMissionData.GetAllStartConditionsRequirements
struct UBendMissionData_GetAllStartConditionsRequirements_Params
{
	TArray<struct FText>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendMissionData.GetAllLevelsThatPreLoadWithIntroCin
struct UBendMissionData_GetAllLevelsThatPreLoadWithIntroCin_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendMissionData.GetActiveMissionObjectiveText
struct UBendMissionData_GetActiveMissionObjectiveText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMissionData.CheckIfPassConditions
struct UBendMissionData_CheckIfPassConditions_Params
{
	struct FText                                       FailureText;                                              // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkipGamePlaySectionComponent.UpdatePercent
struct UBendSkipGamePlaySectionComponent_UpdatePercent_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkipGamePlaySectionComponent.StopAllowingGameplaySectionSkip
struct UBendSkipGamePlaySectionComponent_StopAllowingGameplaySectionSkip_Params
{
};

// Function BendGame.BendSkipGamePlaySectionComponent.StartAllowingGameplaySectionSkip
struct UBendSkipGamePlaySectionComponent_StartAllowingGameplaySectionSkip_Params
{
	struct FName                                       SkipIdentifier;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkipGamePlaySectionComponent.RemoveMissionSkipButton
struct UBendSkipGamePlaySectionComponent_RemoveMissionSkipButton_Params
{
	bool                                               Hide;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkipGamePlaySectionComponent.DisplayMissionSkipButton
struct UBendSkipGamePlaySectionComponent_DisplayMissionSkipButton_Params
{
};

// Function BendGame.BendInventoryPickup.UpdatePlantMaterial
struct ABendInventoryPickup_UpdatePlantMaterial_Params
{
};

// Function BendGame.BendInventoryPickup.UpdateInventoryItem
struct ABendInventoryPickup_UpdateInventoryItem_Params
{
};

// Function BendGame.BendInventoryPickup.UnBlockInventoryModifiedUpdatesOnList
struct ABendInventoryPickup_UnBlockInventoryModifiedUpdatesOnList_Params
{
	TArray<class ABendInventoryPickup*>                Items;                                                    // (Parm, ZeroConstructor)
};

// Function BendGame.BendInventoryPickup.UnbindOnPlayerReloadFinished
struct ABendInventoryPickup_UnbindOnPlayerReloadFinished_Params
{
};

// Function BendGame.BendInventoryPickup.UnBindOnInventoryModified
struct ABendInventoryPickup_UnBindOnInventoryModified_Params
{
};

// Function BendGame.BendInventoryPickup.UnbindMoveComplete
struct ABendInventoryPickup_UnbindMoveComplete_Params
{
};

// Function BendGame.BendInventoryPickup.Tutorials
struct ABendInventoryPickup_Tutorials_Params
{
};

// Function BendGame.BendInventoryPickup.TryMeleeTutorial
struct ABendInventoryPickup_TryMeleeTutorial_Params
{
};

// Function BendGame.BendInventoryPickup.Tick_UpdateBlendspacePosition
struct ABendInventoryPickup_Tick_UpdateBlendspacePosition_Params
{
};

// Function BendGame.BendInventoryPickup.Tick_UpdateAdvertiseLocation
struct ABendInventoryPickup_Tick_UpdateAdvertiseLocation_Params
{
};

// Function BendGame.BendInventoryPickup.SyncIsNPCWeaponFlag
struct ABendInventoryPickup_SyncIsNPCWeaponFlag_Params
{
	bool                                               IsNPCWeapon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.StartOverlaps
struct ABendInventoryPickup_StartOverlaps_Params
{
};

// Function BendGame.BendInventoryPickup.SpawnPickupFromInventoryItem
struct ABendInventoryPickup_SpawnPickupFromInventoryItem_Params
{
	struct FBendInventoryItemCount                     InventoryItemCount;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SpawnCharacterSubClassDrop
struct ABendInventoryPickup_SpawnCharacterSubClassDrop_Params
{
	TEnumAsByte<ECharacterClass>                       CharacterClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SubClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SnapToGround
struct ABendInventoryPickup_SnapToGround_Params
{
	class AActor*                                      ActorToIgnore;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.ShouldLootAmmo
struct ABendInventoryPickup_ShouldLootAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetWeaponPickupAmmoCountExtra
struct ABendInventoryPickup_SetWeaponPickupAmmoCountExtra_Params
{
	int                                                AmmoCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetWeaponPickupAmmoCount
struct ABendInventoryPickup_SetWeaponPickupAmmoCount_Params
{
	int                                                AmmoCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetTypeFromItem
struct ABendInventoryPickup_SetTypeFromItem_Params
{
	struct FInventoryIDDetails                         ItemDetails;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendInventoryPickup.SetTypeAndItemID
struct ABendInventoryPickup_SetTypeAndItemID_Params
{
	TEnumAsByte<EInventoryBaseType>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumItems;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetPickupAnimState
struct ABendInventoryPickup_SetPickupAnimState_Params
{
	TEnumAsByte<EInventoryPickupAnimState>             Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetNotificationDetails
struct ABendInventoryPickup_SetNotificationDetails_Params
{
	bool                                               IsGunAmmoPickup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetMeleeWeaponType
struct ABendInventoryPickup_SetMeleeWeaponType_Params
{
};

// Function BendGame.BendInventoryPickup.SetIconColor
struct ABendInventoryPickup_SetIconColor_Params
{
	bool                                               RedIcon;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetGlint
struct ABendInventoryPickup_SetGlint_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetColorToFriendly
struct ABendInventoryPickup_SetColorToFriendly_Params
{
	bool                                               Friendly;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.SetAdvertisePosition
struct ABendInventoryPickup_SetAdvertisePosition_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.ResetObject
struct ABendInventoryPickup_ResetObject_Params
{
};

// Function BendGame.BendInventoryPickup.ResetItemInteract
struct ABendInventoryPickup_ResetItemInteract_Params
{
};

// Function BendGame.BendInventoryPickup.ResetItemAdvertise
struct ABendInventoryPickup_ResetItemAdvertise_Params
{
};

// Function BendGame.BendInventoryPickup.RequestNotificationTexture
struct ABendInventoryPickup_RequestNotificationTexture_Params
{
};

// Function BendGame.BendInventoryPickup.renameActor
struct ABendInventoryPickup_renameActor_Params
{
};

// Function BendGame.BendInventoryPickup.RemovePickupFromNearbyPlayerList
struct ABendInventoryPickup_RemovePickupFromNearbyPlayerList_Params
{
};

// Function BendGame.BendInventoryPickup.ReleaseCachedItemAssets
struct ABendInventoryPickup_ReleaseCachedItemAssets_Params
{
};

// Function BendGame.BendInventoryPickup.RecheckBindEventsForDisables
struct ABendInventoryPickup_RecheckBindEventsForDisables_Params
{
};

// Function BendGame.BendInventoryPickup.PlayPlantEffects
struct ABendInventoryPickup_PlayPlantEffects_Params
{
};

// Function BendGame.BendInventoryPickup.PlayPickupVO
struct ABendInventoryPickup_PlayPickupVO_Params
{
};

// Function BendGame.BendInventoryPickup.PlayPickupEffects
struct ABendInventoryPickup_PlayPickupEffects_Params
{
};

// Function BendGame.BendInventoryPickup.PlayPickupAnimation
struct ABendInventoryPickup_PlayPickupAnimation_Params
{
};

// Function BendGame.BendInventoryPickup.PlayInventoryFullVO
struct ABendInventoryPickup_PlayInventoryFullVO_Params
{
};

// Function BendGame.BendInventoryPickup.PlayInventoryAlmostFullVO
struct ABendInventoryPickup_PlayInventoryAlmostFullVO_Params
{
};

// Function BendGame.BendInventoryPickup.PlayAnimation
struct ABendInventoryPickup_PlayAnimation_Params
{
};

// Function BendGame.BendInventoryPickup.OverridePickupRangeCallNew
struct ABendInventoryPickup_OverridePickupRangeCallNew_Params
{
	bool                                               Enter;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OverrideAdvertiseRangeCallNew
struct ABendInventoryPickup_OverrideAdvertiseRangeCallNew_Params
{
	bool                                               Enter;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnPlayerReloadFinished
struct ABendInventoryPickup_OnPlayerReloadFinished_Params
{
};

// Function BendGame.BendInventoryPickup.OnPlayerDiscoverRecipe
struct ABendInventoryPickup_OnPlayerDiscoverRecipe_Params
{
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnPickupAccepted
struct ABendInventoryPickup_OnPickupAccepted_Params
{
};

// Function BendGame.BendInventoryPickup.OnPerformActionMid
struct ABendInventoryPickup_OnPerformActionMid_Params
{
	bool                                               FromAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AlreadyDidPickup;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnPerformActionEnd
struct ABendInventoryPickup_OnPerformActionEnd_Params
{
};

// Function BendGame.BendInventoryPickup.OnPerformActionBegin
struct ABendInventoryPickup_OnPerformActionBegin_Params
{
};

// Function BendGame.BendInventoryPickup.OnNotificationTextureLoaded
struct ABendInventoryPickup_OnNotificationTextureLoaded_Params
{
	class UTexture2D*                                  Icon;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnMissionComplete
struct ABendInventoryPickup_OnMissionComplete_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnMissionBegin
struct ABendInventoryPickup_OnMissionBegin_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.OnMeshHit
struct ABendInventoryPickup_OnMeshHit_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendInventoryPickup.OnInventoryModifiedDelegate
struct ABendInventoryPickup_OnInventoryModifiedDelegate_Params
{
	struct FInventoryOperation                         Operation;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendInventoryPickup.OnEndInteract
struct ABendInventoryPickup_OnEndInteract_Params
{
};

// Function BendGame.BendInventoryPickup.OnBeginInteract
struct ABendInventoryPickup_OnBeginInteract_Params
{
};

// Function BendGame.BendInventoryPickup.NotificationTextureLoadedCallback
struct ABendInventoryPickup_NotificationTextureLoadedCallback_Params
{
};

// Function BendGame.BendInventoryPickup.LastCheckWasFullOnObject
struct ABendInventoryPickup_LastCheckWasFullOnObject_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsWeaponWeAlreadyHave
struct ABendInventoryPickup_IsWeaponWeAlreadyHave_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsPlayerFullOnAmmo
struct ABendInventoryPickup_IsPlayerFullOnAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsPlant
struct ABendInventoryPickup_IsPlant_Params
{
};

// Function BendGame.BendInventoryPickup.IsMelee
struct ABendInventoryPickup_IsMelee_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsItemInEncampment
struct ABendInventoryPickup_IsItemInEncampment_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsInventoryFull
struct ABendInventoryPickup_IsInventoryFull_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsGun
struct ABendInventoryPickup_IsGun_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.IsDroppedByPlayer
struct ABendInventoryPickup_IsDroppedByPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.InventoryItemValid
struct ABendInventoryPickup_InventoryItemValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.InteractOnEnd
struct ABendInventoryPickup_InteractOnEnd_Params
{
};

// Function BendGame.BendInventoryPickup.InteractOnBegin
struct ABendInventoryPickup_InteractOnBegin_Params
{
};

// Function BendGame.BendInventoryPickup.InputPressStarted
struct ABendInventoryPickup_InputPressStarted_Params
{
};

// Function BendGame.BendInventoryPickup.InputPressReleased
struct ABendInventoryPickup_InputPressReleased_Params
{
};

// Function BendGame.BendInventoryPickup.InitPickupInteract
struct ABendInventoryPickup_InitPickupInteract_Params
{
};

// Function BendGame.BendInventoryPickup.HasTag
struct ABendInventoryPickup_HasTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	bool                                               VerboseOutput;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.HasMatchingAmmoType
struct ABendInventoryPickup_HasMatchingAmmoType_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.HandleVisibility
struct ABendInventoryPickup_HandleVisibility_Params
{
	bool                                               aHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.HandlePlantMapIconSkill
struct ABendInventoryPickup_HandlePlantMapIconSkill_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.HandleMiniMapLocationVisibility
struct ABendInventoryPickup_HandleMiniMapLocationVisibility_Params
{
	bool                                               TurnOn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  NewIcon;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GREENTHUMBSModifier
struct ABendInventoryPickup_GREENTHUMBSModifier_Params
{
};

// Function BendGame.BendInventoryPickup.GivePickupTo
struct ABendInventoryPickup_GivePickupTo_Params
{
	class ABendPlayerPawn*                             pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               attemptToUse;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetWidgetAdvertizeLocation
struct ABendInventoryPickup_GetWidgetAdvertizeLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetWeaponWithMatchingAmmo
struct ABendInventoryPickup_GetWeaponWithMatchingAmmo_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetPickupSoundName
struct ABendInventoryPickup_GetPickupSoundName_Params
{
	TEnumAsByte<EInventoryItemSound>                   Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetPickupSoundByType
struct ABendInventoryPickup_GetPickupSoundByType_Params
{
	TEnumAsByte<EInventoryItemSound>                   Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetPickupSound
struct ABendInventoryPickup_GetPickupSound_Params
{
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetPickupAdvertisingWidget
struct ABendInventoryPickup_GetPickupAdvertisingWidget_Params
{
	class UBendWidgetComponent*                        ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetInventoryItemType
struct ABendInventoryPickup_GetInventoryItemType_Params
{
	TEnumAsByte<EInventoryBaseType>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetInventoryItemTexture
struct ABendInventoryPickup_GetInventoryItemTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetInventoryItemName
struct ABendInventoryPickup_GetInventoryItemName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendInventoryPickup.GetInventoryItem
struct ABendInventoryPickup_GetInventoryItem_Params
{
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetHoldInteractTime
struct ABendInventoryPickup_GetHoldInteractTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetDurability
struct ABendInventoryPickup_GetDurability_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetDropSound
struct ABendInventoryPickup_GetDropSound_Params
{
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetAmmoCount
struct ABendInventoryPickup_GetAmmoCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.GetAllPickupsFromNearbyPlayerList
struct ABendInventoryPickup_GetAllPickupsFromNearbyPlayerList_Params
{
	TArray<class ABendInventoryPickup*>                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendInventoryPickup.GenerateWeaponStats
struct ABendInventoryPickup_GenerateWeaponStats_Params
{
	class ABendPlayerPawn*                             Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.ForceUpdateInventoryModification
struct ABendInventoryPickup_ForceUpdateInventoryModification_Params
{
};

// Function BendGame.BendInventoryPickup.EventPlayerUnlocksSkill
struct ABendInventoryPickup_EventPlayerUnlocksSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemSkill*                         SkillItem;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.EvaulatePlantStatus
struct ABendInventoryPickup_EvaulatePlantStatus_Params
{
};

// Function BendGame.BendInventoryPickup.EndOverlapWithInteractRange
struct ABendInventoryPickup_EndOverlapWithInteractRange_Params
{
};

// Function BendGame.BendInventoryPickup.EndOverlapWithAdvertiseRange
struct ABendInventoryPickup_EndOverlapWithAdvertiseRange_Params
{
};

// Function BendGame.BendInventoryPickup.EndInteract
struct ABendInventoryPickup_EndInteract_Params
{
};

// Function BendGame.BendInventoryPickup.EnableInputInteract
struct ABendInventoryPickup_EnableInputInteract_Params
{
};

// Function BendGame.BendInventoryPickup.EnableFocusHighlight
struct ABendInventoryPickup_EnableFocusHighlight_Params
{
};

// Function BendGame.BendInventoryPickup.EnableDisableInteract
struct ABendInventoryPickup_EnableDisableInteract_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HideItem;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.EnableAnimOverride
struct ABendInventoryPickup_EnableAnimOverride_Params
{
};

// Function BendGame.BendInventoryPickup.DoAutoPickup
struct ABendInventoryPickup_DoAutoPickup_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.DisplayPickupNotification
struct ABendInventoryPickup_DisplayPickupNotification_Params
{
};

// Function BendGame.BendInventoryPickup.DisplayHudNotificationInternal
struct ABendInventoryPickup_DisplayHudNotificationInternal_Params
{
	class UTexture2D*                                  NotifyTexture;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.DisableOverlaps
struct ABendInventoryPickup_DisableOverlaps_Params
{
};

// Function BendGame.BendInventoryPickup.DisableFocusHighlight
struct ABendInventoryPickup_DisableFocusHighlight_Params
{
};

// Function BendGame.BendInventoryPickup.CreateInteract
struct ABendInventoryPickup_CreateInteract_Params
{
};

// Function BendGame.BendInventoryPickup.ConfigureInteractFlags
struct ABendInventoryPickup_ConfigureInteractFlags_Params
{
};

// Function BendGame.BendInventoryPickup.Complain
struct ABendInventoryPickup_Complain_Params
{
};

// Function BendGame.BendInventoryPickup.CollectAllItemsPassedThroughInArea
struct ABendInventoryPickup_CollectAllItemsPassedThroughInArea_Params
{
	TArray<class ABendInventoryPickup*>                Items;                                                    // (Parm, ZeroConstructor)
	float                                              DistanceToCheck;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.CollectAllItemsInArea
struct ABendInventoryPickup_CollectAllItemsInArea_Params
{
	float                                              DistanceToCheck;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.CheckTimeSincePickup
struct ABendInventoryPickup_CheckTimeSincePickup_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.CheckHerbHighlightSkill
struct ABendInventoryPickup_CheckHerbHighlightSkill_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.CheckFreakerEar
struct ABendInventoryPickup_CheckFreakerEar_Params
{
};

// Function BendGame.BendInventoryPickup.CanPickupItem
struct ABendInventoryPickup_CanPickupItem_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.CallNotifyForInteractStart
struct ABendInventoryPickup_CallNotifyForInteractStart_Params
{
};

// Function BendGame.BendInventoryPickup.CallNotifyForInteractEnd
struct ABendInventoryPickup_CallNotifyForInteractEnd_Params
{
};

// Function BendGame.BendInventoryPickup.CallNotifyForExactMomentOfPickup
struct ABendInventoryPickup_CallNotifyForExactMomentOfPickup_Params
{
};

// Function BendGame.BendInventoryPickup.BlueprintMissionComplete
struct ABendInventoryPickup_BlueprintMissionComplete_Params
{
};

// Function BendGame.BendInventoryPickup.BlockInventoryModifiedUpdatesOnList
struct ABendInventoryPickup_BlockInventoryModifiedUpdatesOnList_Params
{
	TArray<class ABendInventoryPickup*>                Items;                                                    // (Parm, ZeroConstructor)
};

// Function BendGame.BendInventoryPickup.BindOnPlayerReloadFinished
struct ABendInventoryPickup_BindOnPlayerReloadFinished_Params
{
};

// Function BendGame.BendInventoryPickup.BindOnInventoryModified
struct ABendInventoryPickup_BindOnInventoryModified_Params
{
};

// Function BendGame.BendInventoryPickup.BeginTheInteract
struct ABendInventoryPickup_BeginTheInteract_Params
{
};

// Function BendGame.BendInventoryPickup.BeginOverlapWithInteractRange
struct ABendInventoryPickup_BeginOverlapWithInteractRange_Params
{
};

// Function BendGame.BendInventoryPickup.BeginOverlapWithAdvertiseRange
struct ABendInventoryPickup_BeginOverlapWithAdvertiseRange_Params
{
};

// Function BendGame.BendInventoryPickup.BeginInteract
struct ABendInventoryPickup_BeginInteract_Params
{
};

// Function BendGame.BendInventoryPickup.BeginAsyncItemAssetCache
struct ABendInventoryPickup_BeginAsyncItemAssetCache_Params
{
};

// Function BendGame.BendInventoryPickup.AttemptToPickup
struct ABendInventoryPickup_AttemptToPickup_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.AttemptTakeItemFromAreaPickup
struct ABendInventoryPickup_AttemptTakeItemFromAreaPickup_Params
{
	struct FVector                                     PlayerLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.AmmoToPickUp
struct ABendInventoryPickup_AmmoToPickUp_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInventoryPickup.AddPickupToNearbyPlayerList
struct ABendInventoryPickup_AddPickupToNearbyPlayerList_Params
{
};

// Function BendGame.BendAttackManager.WaitingForPairedDodgeInput
struct UBendAttackManager_WaitingForPairedDodgeInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.StealthKillFinished
struct UBendAttackManager_StealthKillFinished_Params
{
};

// Function BendGame.BendAttackManager.StartBeingStealthKilled
struct UBendAttackManager_StartBeingStealthKilled_Params
{
	class ABendPawn*                                   Attacker;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             StealthKillAnim;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rAttackRotation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorTransform;                                          // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.RemoveRangedAttacker
struct UBendAttackManager_RemoveRangedAttacker_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.RemoveAttackerFromList
struct UBendAttackManager_RemoveAttackerFromList_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.OnAttackerReachedSlot
struct UBendAttackManager_OnAttackerReachedSlot_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttackManager.IsRangedAttacker
struct UBendAttackManager_IsRangedAttacker_Params
{
	class ABendPawn*                                   pAttacker;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.IsBeingGrappled
struct UBendAttackManager_IsBeingGrappled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.IsAttackerInList
struct UBendAttackManager_IsAttackerInList_Params
{
	class ABendPawn*                                   pAttacker;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetStealthKillAnims
struct UBendAttackManager_GetStealthKillAnims_Params
{
	class ABendPawn*                                   Attacker;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AttackerProp;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FPairedKillAnims                            ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAttackManager.GetPotentialMeleeTargetVictim
struct UBendAttackManager_GetPotentialMeleeTargetVictim_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetMeleeRingList
struct UBendAttackManager_GetMeleeRingList_Params
{
	TArray<struct FMeleeRingData>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAttackManager.GetGrappleTiers
struct UBendAttackManager_GetGrappleTiers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetGrappleStartAnchorTransform
struct UBendAttackManager_GetGrappleStartAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetGrappleLandingAnchorTransform
struct UBendAttackManager_GetGrappleLandingAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetGrappleAttacker
struct UBendAttackManager_GetGrappleAttacker_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetCurrentGrapplePriority
struct UBendAttackManager_GetCurrentGrapplePriority_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetCurrentGrapplePercent
struct UBendAttackManager_GetCurrentGrapplePercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetCombatDistanceForRing
struct UBendAttackManager_GetCombatDistanceForRing_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.GetAttackerCount
struct UBendAttackManager_GetAttackerCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.ForceSimultaneousGrapple
struct UBendAttackManager_ForceSimultaneousGrapple_Params
{
	class ABendPawn*                                   pGrappleTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SecondaryGrappler;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       GrappleCategory;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.ForceExitGrapple
struct UBendAttackManager_ForceExitGrapple_Params
{
};

// Function BendGame.BendAttackManager.ForceDirectGrapple
struct UBendAttackManager_ForceDirectGrapple_Params
{
	class ABendPawn*                                   pGrappleTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bGrappleFront;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWithEnter;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       GrappleCategory;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.FinishedGrappleFail
struct UBendAttackManager_FinishedGrappleFail_Params
{
};

// Function BendGame.BendAttackManager.FindStealthKillTarget
struct UBendAttackManager_FindStealthKillTarget_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.FindMeleeVictim
struct UBendAttackManager_FindMeleeVictim_Params
{
	bool                                               bIsFromPrimaryAngle;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseSavedJoystickAngle;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCalledFromTick;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.FailedToBreakOutOfGrapple
struct UBendAttackManager_FailedToBreakOutOfGrapple_Params
{
};

// Function BendGame.BendAttackManager.DonePlayingBreakOutOfGrappleAnim
struct UBendAttackManager_DonePlayingBreakOutOfGrappleAnim_Params
{
};

// Function BendGame.BendAttackManager.DiedHandler
struct UBendAttackManager_DiedHandler_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttackManager.CanStealthKill
struct UBendAttackManager_CanStealthKill_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.CanBeStealthKilled
struct UBendAttackManager_CanBeStealthKilled_Params
{
	class ABendPawn*                                   Attacker;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.CanBeMeleeAttacked
struct UBendAttackManager_CanBeMeleeAttacked_Params
{
	bool                                               AllowInterruptingAttacker;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AttemptToMeleeFindTarget
struct UBendAttackManager_AttemptToMeleeFindTarget_Params
{
	TEnumAsByte<EMeleeAttackBasedOnHeight>             MeleeSwingType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CalledFromCode;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AttemptToBreakOutOfGrapple
struct UBendAttackManager_AttemptToBreakOutOfGrapple_Params
{
	float                                              defaultCompletionPercent;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AttemptStealthKill
struct UBendAttackManager_AttemptStealthKill_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AttemptGrappleAnimDone
struct UBendAttackManager_AttemptGrappleAnimDone_Params
{
};

// Function BendGame.BendAttackManager.AttemptDirectGrapple
struct UBendAttackManager_AttemptDirectGrapple_Params
{
	class ABendPawn*                                   pGrappleTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WithEnter;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       GrappleCategory;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FromAttack;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDistanceCheck;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AllowGrappleExit
struct UBendAttackManager_AllowGrappleExit_Params
{
};

// Function BendGame.BendAttackManager.AddRangedAttacker
struct UBendAttackManager_AddRangedAttacker_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttackManager.AddAttackerToList
struct UBendAttackManager_AddAttackerToList_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStateMachine.WhileOutOfControl
struct ABendStateMachine_WhileOutOfControl_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStateMachine.SetInitState
struct ABendStateMachine_SetInitState_Params
{
	struct FString                                     initStateName;                                            // (Parm, ZeroConstructor)
};

// Function BendGame.BendStateMachine.ReturnToLastState
struct ABendStateMachine_ReturnToLastState_Params
{
};

// Function BendGame.BendStateMachine.ReenterState
struct ABendStateMachine_ReenterState_Params
{
};

// Function BendGame.BendStateMachine.OnRegainControl
struct ABendStateMachine_OnRegainControl_Params
{
};

// Function BendGame.BendStateMachine.OnPathComplete
struct ABendStateMachine_OnPathComplete_Params
{
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStateMachine.OnLossOfControl
struct ABendStateMachine_OnLossOfControl_Params
{
};

// Function BendGame.BendStateMachine.OnInitState
struct ABendStateMachine_OnInitState_Params
{
};

// Function BendGame.BendStateMachine.IsOutOfControl
struct ABendStateMachine_IsOutOfControl_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.IsInStateName
struct ABendStateMachine_IsInStateName_Params
{
	struct FString                                     StateName;                                                // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.IsInStateFName
struct ABendStateMachine_IsInStateFName_Params
{
	struct FName                                       StateName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.IsInState
struct ABendStateMachine_IsInState_Params
{
	class UBendState*                                  State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.GetStateMachineOwner
struct ABendStateMachine_GetStateMachineOwner_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.GetNextState
struct ABendStateMachine_GetNextState_Params
{
	class UBendState*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.GetMachineStates
struct ABendStateMachine_GetMachineStates_Params
{
	TArray<class UBendState*>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStateMachine.GetLastState
struct ABendStateMachine_GetLastState_Params
{
	class UBendState*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.GetCurrentStateName
struct ABendStateMachine_GetCurrentStateName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStateMachine.GetCurrentStateFName
struct ABendStateMachine_GetCurrentStateFName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.GetCurrentState
struct ABendStateMachine_GetCurrentState_Params
{
	class UBendState*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.FindStateByName
struct ABendStateMachine_FindStateByName_Params
{
	struct FString                                     StateName;                                                // (Parm, ZeroConstructor)
	class UBendState*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.FindStateByFName
struct ABendStateMachine_FindStateByFName_Params
{
	struct FName                                       StateName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UBendState*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStateMachine.ChangeState
struct ABendStateMachine_ChangeState_Params
{
	struct FString                                     newStateName;                                             // (Parm, ZeroConstructor)
	bool                                               ForceReenter;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimStateMachine.RequestStateChange
struct ABendAnimStateMachine_RequestStateChange_Params
{
	TEnumAsByte<EBendAnimStates>                       State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceReenter;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateMachine.IsInStateEnum
struct ABendAnimStateMachine_IsInStateEnum_Params
{
	TEnumAsByte<EBendAnimStates>                       State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateMachine.IsInAnyState
struct ABendAnimStateMachine_IsInAnyState_Params
{
	TArray<TEnumAsByte<EBendAnimStates>>               States;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateMachine.EnterSwimming
struct ABendAnimStateMachine_EnterSwimming_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterSprintSliding
struct ABendAnimStateMachine_EnterSprintSliding_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterSliding
struct ABendAnimStateMachine_EnterSliding_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterRagdoll
struct ABendAnimStateMachine_EnterRagdoll_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterPerformAction
struct ABendAnimStateMachine_EnterPerformAction_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterPairedKill
struct ABendAnimStateMachine_EnterPairedKill_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterMeleeAttack
struct ABendAnimStateMachine_EnterMeleeAttack_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterLadder
struct ABendAnimStateMachine_EnterLadder_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterJumping
struct ABendAnimStateMachine_EnterJumping_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterGroundMovement
struct ABendAnimStateMachine_EnterGroundMovement_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterGrapple
struct ABendAnimStateMachine_EnterGrapple_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterFalling
struct ABendAnimStateMachine_EnterFalling_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterEdgeTraversal
struct ABendAnimStateMachine_EnterEdgeTraversal_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterDodge
struct ABendAnimStateMachine_EnterDodge_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterDamage
struct ABendAnimStateMachine_EnterDamage_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterCover
struct ABendAnimStateMachine_EnterCover_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterBodyCarry
struct ABendAnimStateMachine_EnterBodyCarry_Params
{
};

// Function BendGame.BendAnimStateMachine.EnterBike
struct ABendAnimStateMachine_EnterBike_Params
{
};

// Function BendGame.BaseUserWidget.UIVisibilityEnabled
struct UBaseUserWidget_UIVisibilityEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BaseUserWidget.SetVisibilityOverride
struct UBaseUserWidget_SetVisibilityOverride_Params
{
	TEnumAsByte<ESlateVisibility>                      VisibilityType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNPCCalloutWidget.UpdateHealthOnCallout
struct UBendNPCCalloutWidget_UpdateHealthOnCallout_Params
{
	float                                              Percentage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNPCCalloutWidget.SetIndicatorProgress
struct UBendNPCCalloutWidget_SetIndicatorProgress_Params
{
	float                                              NormalizedProgress;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNPCCalloutWidget.DeactivateMarkedCallout
struct UBendNPCCalloutWidget_DeactivateMarkedCallout_Params
{
};

// Function BendGame.BendNPCCalloutWidget.DeactivateAwarenessCallout
struct UBendNPCCalloutWidget_DeactivateAwarenessCallout_Params
{
	bool                                               DeactivateDueToAware;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNPCCalloutWidget.ActivateSuspiciousIndicator
struct UBendNPCCalloutWidget_ActivateSuspiciousIndicator_Params
{
};

// Function BendGame.BendNPCCalloutWidget.ActivateMarkedCallout
struct UBendNPCCalloutWidget_ActivateMarkedCallout_Params
{
	TEnumAsByte<ECalloutWidgetType>                    CalloutType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNPCCalloutWidget.ActivateAlertIndicator
struct UBendNPCCalloutWidget_ActivateAlertIndicator_Params
{
};

// Function BendGame.BendPawn.WillHearThrownNoise
struct ABendPawn_WillHearThrownNoise_Params
{
	class ABendWeapon_Projectile*                      ThrownWeapon;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WillHear;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.WeaponStolen
struct ABendPawn_WeaponStolen_Params
{
	class ABendWeapon*                                 StolenWeapon;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.WasLastHitOnArmor
struct ABendPawn_WasLastHitOnArmor_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.WasDamageCriticalHit
struct ABendPawn_WasDamageCriticalHit_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.WaitingForInput_End
struct ABendPawn_WaitingForInput_End_Params
{
	TEnumAsByte<EWaitForInputType>                     eInputWaitType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.WaitingForInput_Begin
struct ABendPawn_WaitingForInput_Begin_Params
{
	TEnumAsByte<EWaitForInputType>                     eInputWaitType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreAnimState;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.VictimStabInputSuccessful
struct ABendPawn_VictimStabInputSuccessful_Params
{
};

// Function BendGame.BendPawn.VictimBrutalKillInputSuccessful
struct ABendPawn_VictimBrutalKillInputSuccessful_Params
{
	class ABendPawn*                                   pVictim;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.UsePreviousWeapon
struct ABendPawn_UsePreviousWeapon_Params
{
};

// Function BendGame.BendPawn.UpdateNPCCalloutLocation
struct ABendPawn_UpdateNPCCalloutLocation_Params
{
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.UpdateConditionalLookNow
struct ABendPawn_UpdateConditionalLookNow_Params
{
};

// Function BendGame.BendPawn.UpdateAwarenessIndicatorProgress
struct ABendPawn_UpdateAwarenessIndicatorProgress_Params
{
	float                                              NormalizedProgress;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.UnsuppressWeaponEquip
struct ABendPawn_UnsuppressWeaponEquip_Params
{
};

// Function BendGame.BendPawn.UnsuppressWeaponDrawn
struct ABendPawn_UnsuppressWeaponDrawn_Params
{
	bool                                               InstantWeaponEquip;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.UnsuppressManualAim
struct ABendPawn_UnsuppressManualAim_Params
{
};

// Function BendGame.BendPawn.UnhideGunClip
struct ABendPawn_UnhideGunClip_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.Unhide
struct ABendPawn_Unhide_Params
{
};

// Function BendGame.BendPawn.UnequipBinoculars
struct ABendPawn_UnequipBinoculars_Params
{
	bool                                               bForceHolster;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.TurnRagdollOnDelay
struct ABendPawn_TurnRagdollOnDelay_Params
{
};

// Function BendGame.BendPawn.TryStumble
struct ABendPawn_TryStumble_Params
{
	float                                              MustStumbleTime;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.TryExitVehicle
struct ABendPawn_TryExitVehicle_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFallOff;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bQueueRequest;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              QueueRequestTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.TryExitScopeMode
struct ABendPawn_TryExitScopeMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.TryEnterVehicle
struct ABendPawn_TryEnterVehicle_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bQueueRequest;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              QueueRequestTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseAutoNav;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UsingOveriddenAnimation;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.TryEnterScopeMode
struct ABendPawn_TryEnterScopeMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ToggleHiding
struct ABendPawn_ToggleHiding_Params
{
};

// Function BendGame.BendPawn.ThrowWeapon
struct ABendPawn_ThrowWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ThrowExtraClip
struct ABendPawn_ThrowExtraClip_Params
{
	struct FVector                                     DirectionalImpulse;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RotationalImpulse;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MirroredDirectionalImpulse;                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MirroredRotationalImpulse;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseWeaponSocket;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketLocationName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ThrowClip
struct ABendPawn_ThrowClip_Params
{
	struct FVector                                     DirectionalImpulse;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RotationalImpulse;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MirroredDirectionalImpulse;                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MirroredRotationalImpulse;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseClipTimer;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ClipTimer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SwitchToLoadedConditionalLook
struct ABendPawn_SwitchToLoadedConditionalLook_Params
{
};

// Function BendGame.BendPawn.SuppressWeaponDrawn
struct ABendPawn_SuppressWeaponDrawn_Params
{
	bool                                               InstantWeaponUnequip;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CanDrawDuringSuppression;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UnequipCurrentWeapon;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SuppressManualAim
struct ABendPawn_SuppressManualAim_Params
{
};

// Function BendGame.BendPawn.Suicide
struct ABendPawn_Suicide_Params
{
};

// Function BendGame.BendPawn.StopStatusEffectsOfType
struct ABendPawn_StopStatusEffectsOfType_Params
{
	TEnumAsByte<EStatusEffects>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.StopAllStatusEffects
struct ABendPawn_StopAllStatusEffects_Params
{
};

// Function BendGame.BendPawn.StopAllAnimMontages
struct ABendPawn_StopAllAnimMontages_Params
{
};

// Function BendGame.BendPawn.StartMeleeMissBranch
struct ABendPawn_StartMeleeMissBranch_Params
{
};

// Function BendGame.BendPawn.StartMeleeAttack
struct ABendPawn_StartMeleeAttack_Params
{
	class AActor*                                      AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAttackData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPawn.StartedProvokeAttack
struct ABendPawn_StartedProvokeAttack_Params
{
};

// Function BendGame.BendPawn.StartedBlockingAttackersAttack
struct ABendPawn_StartedBlockingAttackersAttack_Params
{
};

// Function BendGame.BendPawn.StartBulletByFlinchReaction
struct ABendPawn_StartBulletByFlinchReaction_Params
{
};

// Function BendGame.BendPawn.StartBerserkAttack
struct ABendPawn_StartBerserkAttack_Params
{
	class AActor*                                      AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAttackData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPawn.Spawned
struct ABendPawn_Spawned_Params
{
};

// Function BendGame.BendPawn.SpawnClipMesh
struct ABendPawn_SpawnClipMesh_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SpawnAssignedVehicle
struct ABendPawn_SpawnAssignedVehicle_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               SpawnEvenIfColliding;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.SpawnActorPOIGoreBody
struct ABendPawn_SpawnActorPOIGoreBody_Params
{
};

// Function BendGame.BendPawn.ShouldTakeHalfDamage
struct ABendPawn_ShouldTakeHalfDamage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ShellLoaded
struct ABendPawn_ShellLoaded_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetVocalSoundClass
struct ABendPawn_SetVocalSoundClass_Params
{
	class USoundClass*                                 pBnkSndClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetVocalFaceAnimationSequence
struct ABendPawn_SetVocalFaceAnimationSequence_Params
{
	class UAnimSequenceBase*                           VocalFaceAnimSeq;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetVehicleRiderShouldDodge
struct ABendPawn_SetVehicleRiderShouldDodge_Params
{
	bool                                               bShouldDodge;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetTakeHalfDamage
struct ABendPawn_SetTakeHalfDamage_Params
{
	bool                                               HalfDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetSprinting
struct ABendPawn_SetSprinting_Params
{
	bool                                               inside;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetSaggyMeshEnabled
struct ABendPawn_SetSaggyMeshEnabled_Params
{
	bool                                               bSet;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetReloadSpeedScalar
struct ABendPawn_SetReloadSpeedScalar_Params
{
	float                                              fScalar;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetReactionState
struct ABendPawn_SetReactionState_Params
{
	TEnumAsByte<ECurrentStateForHitReaction>           NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetRagdoll
struct ABendPawn_SetRagdoll_Params
{
	bool                                               bSet;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.SetPlayHitReactions_CalledFromAnimations
struct ABendPawn_SetPlayHitReactions_CalledFromAnimations_Params
{
	bool                                               PlayThem;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetPlayHitReactions
struct ABendPawn_SetPlayHitReactions_Params
{
	bool                                               bPlayThem;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetPairedKillData
struct ABendPawn_SetPairedKillData_Params
{
	class UBendPairedKillData*                         NewData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetOutOfBreath
struct ABendPawn_SetOutOfBreath_Params
{
	bool                                               bOutOfBreath;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetNonTableDrops
struct ABendPawn_SetNonTableDrops_Params
{
	TArray<struct FInventoryIDDetails>                 newArray;                                                 // (Parm, ZeroConstructor)
	bool                                               addToExisting;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMovementParameters
struct ABendPawn_SetMovementParameters_Params
{
	int                                                Token;                                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MaxSpeed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canSprint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverrideSprintSpeed;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canCrouch;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canFreeDodge;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CanSprintSlide;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMountedToTurret
struct ABendPawn_SetMountedToTurret_Params
{
	bool                                               Mounted;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMinNumProvokesBeforeProvokeAttack
struct ABendPawn_SetMinNumProvokesBeforeProvokeAttack_Params
{
	int                                                MinNumHits;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMinNumMeleeHitVictimDoProvoke
struct ABendPawn_SetMinNumMeleeHitVictimDoProvoke_Params
{
	int                                                MinNumHits;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMaxNumProvokesBeforeProvokeAttack
struct ABendPawn_SetMaxNumProvokesBeforeProvokeAttack_Params
{
	int                                                MaxNumHits;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMaxNumMeleeHitVictimDoProvoke
struct ABendPawn_SetMaxNumMeleeHitVictimDoProvoke_Params
{
	int                                                MaxNumHits;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetMaxHealth
struct ABendPawn_SetMaxHealth_Params
{
	float                                              NewMaxHealth;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               MaintainHealthPercent;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetLyingDown
struct ABendPawn_SetLyingDown_Params
{
	bool                                               bLyingDown;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetLiveSwappedVehicle
struct ABendPawn_SetLiveSwappedVehicle_Params
{
	class AVehiclePawn*                                InVehicle;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetLastProjectileWeapon
struct ABendPawn_SetLastProjectileWeapon_Params
{
	class ABendWeapon*                                 theWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetLastMeleeWeapon
struct ABendPawn_SetLastMeleeWeapon_Params
{
	class ABendWeapon*                                 theWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetIsBeingStealthKilled
struct ABendPawn_SetIsBeingStealthKilled_Params
{
	bool                                               bBeingStealthKilled;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetInteracting
struct ABendPawn_SetInteracting_Params
{
	bool                                               NewInteracting;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetInside
struct ABendPawn_SetInside_Params
{
	bool                                               inside;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetGender
struct ABendPawn_SetGender_Params
{
	TEnumAsByte<EePawnGender>                          eGender;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForceInjuredWalk
struct ABendPawn_SetForceInjuredWalk_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForceIdle
struct ABendPawn_SetForceIdle_Params
{
	struct FBendReconcilerToken                        Handle;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForce;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FBendReconcilerToken                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPawn.SetForcedWalk_New
struct ABendPawn_SetForcedWalk_New_Params
{
	int                                                Token;                                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               forceWalk;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canSprint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              sprintSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canCrouch;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canFreeDodge;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               useSlowerWalk;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CanSprintSlide;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForcedWalk
struct ABendPawn_SetForcedWalk_Params
{
	bool                                               forceWalk;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canSprint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              sprintSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canCrouch;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               canFreeDodge;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               useSlowerWalk;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForcedStrafeFacingTarget
struct ABendPawn_SetForcedStrafeFacingTarget_Params
{
	class AActor*                                      FacingTarget;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForcedStrafe
struct ABendPawn_SetForcedStrafe_Params
{
	bool                                               bForceStrafe;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetForceDirectionalThrowAtLocation
struct ABendPawn_SetForceDirectionalThrowAtLocation_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetFlowAttractorIntensityAndRadiusScale
struct ABendPawn_SetFlowAttractorIntensityAndRadiusScale_Params
{
	float                                              Scale;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetFadeOffBloodValues
struct ABendPawn_SetFadeOffBloodValues_Params
{
	TArray<TEnumAsByte<EeDamageLocations>>             DamageLocations;                                          // (Parm, ZeroConstructor)
	TArray<float>                                      FadeMultipliers;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendPawn.SetFadeOffBloodOnHeadValue
struct ABendPawn_SetFadeOffBloodOnHeadValue_Params
{
	float                                              MultipleFadeTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetFactionType
struct ABendPawn_SetFactionType_Params
{
	TEnumAsByte<EAIFactionType>                        newFaction;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetEventVOWaitTimeData
struct ABendPawn_SetEventVOWaitTimeData_Params
{
	class UBendAudioEventVOWaitTimeData*               EventVOWaitTime;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetEnableAnchorCollisionFixup
struct ABendPawn_SetEnableAnchorCollisionFixup_Params
{
	bool                                               bEnable;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVerticalDirectionOnly;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetDrugged
struct ABendPawn_SetDrugged_Params
{
	bool                                               NewDrugged;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceStrafe;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetDesiredWeapon
struct ABendPawn_SetDesiredWeapon_Params
{
	class ABendWeapon*                                 NewWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCriticalHitDamageAmount
struct ABendPawn_SetCriticalHitDamageAmount_Params
{
	float                                              fCriticalHit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanUseWeapons
struct ABendPawn_SetCanUseWeapons_Params
{
	bool                                               AllowWeaponUse;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanUseTraps
struct ABendPawn_SetCanUseTraps_Params
{
	bool                                               AllowTrapEquip;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanUseRangedWeapons
struct ABendPawn_SetCanUseRangedWeapons_Params
{
	bool                                               AllowRangedUse;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanUseMeleeWeapons
struct ABendPawn_SetCanUseMeleeWeapons_Params
{
	bool                                               AllowMeleeUse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanPlayVO
struct ABendPawn_SetCanPlayVO_Params
{
	bool                                               CanPlayVO;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanPlayResponseVO
struct ABendPawn_SetCanPlayResponseVO_Params
{
	bool                                               CanPlayResponseVO;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanMeleeAttack
struct ABendPawn_SetCanMeleeAttack_Params
{
	bool                                               CanMeleeAttack;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanJoinCrowd
struct ABendPawn_SetCanJoinCrowd_Params
{
	bool                                               bCanJoin;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipWeapons
struct ABendPawn_SetCanEquipWeapons_Params
{
	bool                                               AllowWeaponEquip;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipTraps
struct ABendPawn_SetCanEquipTraps_Params
{
	bool                                               AllowTrapEquip;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipRangedWeapons
struct ABendPawn_SetCanEquipRangedWeapons_Params
{
	bool                                               AllowRangedEquip;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipMeleeWeapons
struct ABendPawn_SetCanEquipMeleeWeapons_Params
{
	bool                                               AllowMeleeEquip;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipItems
struct ABendPawn_SetCanEquipItems_Params
{
	bool                                               AllowItemEquip;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanEquipDamageTypes
struct ABendPawn_SetCanEquipDamageTypes_Params
{
	TArray<TEnumAsByte<ETypeOfBaseDamage>>             UsableWeaponsBasedOnDamageTypes;                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendPawn.SetCanEquipBasedOnDamageTypes
struct ABendPawn_SetCanEquipBasedOnDamageTypes_Params
{
	TArray<TEnumAsByte<ETypeOfBaseDamage>>             UsableWeaponsBasedOnDamageTypes;                          // (Parm, ZeroConstructor)
	TArray<TEnumAsByte<ETypeOfDamage>>                 UsableWeaponsBasedOnSpecificDamageTypes;                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendPawn.SetCanDoWheelie
struct ABendPawn_SetCanDoWheelie_Params
{
	bool                                               bCanDo;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetCanBeMarkedByBinoculars
struct ABendPawn_SetCanBeMarkedByBinoculars_Params
{
	bool                                               CanBeMarked;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetAssignedVehicle
struct ABendPawn_SetAssignedVehicle_Params
{
	class AVehiclePawn*                                InAssignedVehicle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetAmountOfTimeToDisableProvoke
struct ABendPawn_SetAmountOfTimeToDisableProvoke_Params
{
	float                                              NumberOfSeconds;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetAmbushMode
struct ABendPawn_SetAmbushMode_Params
{
	bool                                               bYesOrNo;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInEnclosedSpace;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowAimAssist;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetAiming
struct ABendPawn_SetAiming_Params
{
	TEnumAsByte<EAimStance>                            NewAimStance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.SetAdrenalineMeter
struct ABendPawn_SetAdrenalineMeter_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ServerHolsterWeapon
struct ABendPawn_ServerHolsterWeapon_Params
{
};

// Function BendGame.BendPawn.ServerEquipWeapon
struct ABendPawn_ServerEquipWeapon_Params
{
	class ABendWeapon*                                 NewWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ScriptedNavWalking
struct ABendPawn_ScriptedNavWalking_Params
{
	bool                                               enable;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ResetFinishedCounterAttack
struct ABendPawn_ResetFinishedCounterAttack_Params
{
};

// Function BendGame.BendPawn.ResetDoPairedDodgeFlag
struct ABendPawn_ResetDoPairedDodgeFlag_Params
{
};

// Function BendGame.BendPawn.ResetDoFlinchReactionFlag
struct ABendPawn_ResetDoFlinchReactionFlag_Params
{
};

// Function BendGame.BendPawn.ResetDoDodgeFlag
struct ABendPawn_ResetDoDodgeFlag_Params
{
};

// Function BendGame.BendPawn.ResetDoCounterAttackReadyFlag
struct ABendPawn_ResetDoCounterAttackReadyFlag_Params
{
};

// Function BendGame.BendPawn.ResetCanArmMeleeFlag
struct ABendPawn_ResetCanArmMeleeFlag_Params
{
};

// Function BendGame.BendPawn.RemoveWeapon
struct ABendPawn_RemoveWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RemoveForceIdleInfluence
struct ABendPawn_RemoveForceIdleInfluence_Params
{
	struct FBendReconcilerToken                        InHandle;                                                 // (Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendPawn.RemoveEquippedMeleeWeapon
struct ABendPawn_RemoveEquippedMeleeWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RemoveDestroyedTrap
struct ABendPawn_RemoveDestroyedTrap_Params
{
	class ABendTrap*                                   Trap;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RemoveBloodFromLowerArms
struct ABendPawn_RemoveBloodFromLowerArms_Params
{
};

// Function BendGame.BendPawn.RemoveBloodFromHead
struct ABendPawn_RemoveBloodFromHead_Params
{
};

// Function BendGame.BendPawn.RemoveAnimVariationData
struct ABendPawn_RemoveAnimVariationData_Params
{
	class UBendAnimVariationData*                      OldData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RemoveAllWeapons
struct ABendPawn_RemoveAllWeapons_Params
{
	bool                                               IncludeDefaults;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RemoveAllBloodAndBurns
struct ABendPawn_RemoveAllBloodAndBurns_Params
{
};

// Function BendGame.BendPawn.ReloadComplete
struct ABendPawn_ReloadComplete_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.RefreshWeaponBarrels
struct ABendPawn_RefreshWeaponBarrels_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ReEnableAllCollision
struct ABendPawn_ReEnableAllCollision_Params
{
};

// Function BendGame.BendPawn.PreUnEquipComplete
struct ABendPawn_PreUnEquipComplete_Params
{
};

// Function BendGame.BendPawn.PlayDropThrowableAnim
struct ABendPawn_PlayDropThrowableAnim_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.PlayAnimMontage
struct ABendPawn_PlayAnimMontage_Params
{
	class UAnimMontage*                                anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartSectionName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.PickUpCarriedObject
struct ABendPawn_PickUpCarriedObject_Params
{
	class AActor*                                      ObjectToCarry;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.PerformActionWithLooping
struct ABendPawn_PerformActionWithLooping_Params
{
	struct FBendActionData                             TheActionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      PropActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorWorldTransform;                                     // (Parm, IsPlainOldData)
	struct FScriptDelegate                             OnCompleteDelegate;                                       // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailDelegate;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnLoopDelegate;                                           // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.PerformActionNoDelegates
struct ABendPawn_PerformActionNoDelegates_Params
{
	struct FBendActionData                             TheActionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      PropActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorWorldTransform;                                     // (Parm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.PerformAction_NEW
struct ABendPawn_PerformAction_NEW_Params
{
	struct FBendActionData                             TheActionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      PropActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorWorldTransform;                                     // (Parm, IsPlainOldData)
	struct FScriptDelegate                             OnCompleteDelegate;                                       // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailDelegate;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnLoopDelegate;                                           // (Parm, ZeroConstructor)
	class UPerformActionContext*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.PerformAction
struct ABendPawn_PerformAction_Params
{
	struct FBendActionData                             TheActionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      PropActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorWorldTransform;                                     // (Parm, IsPlainOldData)
	struct FScriptDelegate                             OnCompleteDelegate;                                       // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailDelegate;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnLoopDelegate;                                           // (Parm, ZeroConstructor)
	struct FName                                       MasterTimelineName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.PawnIsDead
struct ABendPawn_PawnIsDead_Params
{
};

// Function BendGame.BendPawn.PairDodgeStarted
struct ABendPawn_PairDodgeStarted_Params
{
};

// Function BendGame.BendPawn.PairDodgeEnded
struct ABendPawn_PairDodgeEnded_Params
{
};

// Function BendGame.BendPawn.OverrideShootingAccuracyNPC
struct ABendPawn_OverrideShootingAccuracyNPC_Params
{
	float                                              Accuracy;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnStopSprinting
struct ABendPawn_OnStopSprinting_Params
{
};

// Function BendGame.BendPawn.OnStartSprinting
struct ABendPawn_OnStartSprinting_Params
{
};

// Function BendGame.BendPawn.OnStartedExitingVehicleSeat_NoParams_WithForce
struct ABendPawn_OnStartedExitingVehicleSeat_NoParams_WithForce_Params
{
};

// Function BendGame.BendPawn.OnStartedExitingVehicleSeat_NoParams
struct ABendPawn_OnStartedExitingVehicleSeat_NoParams_Params
{
};

// Function BendGame.BendPawn.OnStartedEnteringVehicleSeat_NoParams_WithForce
struct ABendPawn_OnStartedEnteringVehicleSeat_NoParams_WithForce_Params
{
};

// Function BendGame.BendPawn.OnStartedEnteringVehicleSeat_NoParams
struct ABendPawn_OnStartedEnteringVehicleSeat_NoParams_Params
{
};

// Function BendGame.BendPawn.OnSlomoEnd
struct ABendPawn_OnSlomoEnd_Params
{
	class UAnimNotifyState*                            AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnSlomoBegin
struct ABendPawn_OnSlomoBegin_Params
{
	class UAnimNotifyState*                            AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnRightLegBlownOff
struct ABendPawn_OnRightLegBlownOff_Params
{
	class USkeletalMeshComponent*                      pLimbMesh;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASkeletalMeshActor*                          pSeveredLimb;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnRightArmBlownOff
struct ABendPawn_OnRightArmBlownOff_Params
{
	class USkeletalMeshComponent*                      pLimbMesh;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASkeletalMeshActor*                          pSeveredLimb;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnRep_LastTakeHitInfo
struct ABendPawn_OnRep_LastTakeHitInfo_Params
{
};

// Function BendGame.BendPawn.OnRep_Health
struct ABendPawn_OnRep_Health_Params
{
};

// Function BendGame.BendPawn.OnRep_CurrentWeapon
struct ABendPawn_OnRep_CurrentWeapon_Params
{
};

// Function BendGame.BendPawn.OnReloadStarted
struct ABendPawn_OnReloadStarted_Params
{
};

// Function BendGame.BendPawn.OnReloadFinished
struct ABendPawn_OnReloadFinished_Params
{
};

// Function BendGame.BendPawn.OnPostSetLook
struct ABendPawn_OnPostSetLook_Params
{
};

// Function BendGame.BendPawn.OnPlayDying
struct ABendPawn_OnPlayDying_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class APawn*                                       InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  HitInfo;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnMissionEnding
struct ABendPawn_OnMissionEnding_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnMeleeCriticalHitSuccessful
struct ABendPawn_OnMeleeCriticalHitSuccessful_Params
{
};

// Function BendGame.BendPawn.OnLeftLegBlownOff
struct ABendPawn_OnLeftLegBlownOff_Params
{
	class USkeletalMeshComponent*                      pLimbMesh;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASkeletalMeshActor*                          pSeveredLimb;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnLeftArmBlownOff
struct ABendPawn_OnLeftArmBlownOff_Params
{
	class USkeletalMeshComponent*                      pLimbMesh;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASkeletalMeshActor*                          pSeveredLimb;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnHeadBlownOff
struct ABendPawn_OnHeadBlownOff_Params
{
	class USkeletalMeshComponent*                      pLimbMesh;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASkeletalMeshActor*                          pSeveredLimb;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnFinishedExitingVehicleSeat
struct ABendPawn_OnFinishedExitingVehicleSeat_Params
{
};

// Function BendGame.BendPawn.OnFinishedEnteringVehicleSeat
struct ABendPawn_OnFinishedEnteringVehicleSeat_Params
{
};

// Function BendGame.BendPawn.OnFailedEnteringVehicleSeat
struct ABendPawn_OnFailedEnteringVehicleSeat_Params
{
};

// Function BendGame.BendPawn.OnExitStunState
struct ABendPawn_OnExitStunState_Params
{
};

// Function BendGame.BendPawn.OnEquipCompleted
struct ABendPawn_OnEquipCompleted_Params
{
	class ABendWeapon*                                 EquippedItem;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnEnemyBulletFlyBy
struct ABendPawn_OnEnemyBulletFlyBy_Params
{
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnEndAllowCancelActionWithMoveInput
struct ABendPawn_OnEndAllowCancelActionWithMoveInput_Params
{
};

// Function BendGame.BendPawn.OnClimbFailed
struct ABendPawn_OnClimbFailed_Params
{
	TEnumAsByte<EPeformActionFailedReason>             ReasonForFailure;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnClimbCompleted
struct ABendPawn_OnClimbCompleted_Params
{
};

// Function BendGame.BendPawn.OnChargeDodgeBegin
struct ABendPawn_OnChargeDodgeBegin_Params
{
	class ABendPawn*                                   Rager;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.OnBeginAllowCancelActionWithMoveInput
struct ABendPawn_OnBeginAllowCancelActionWithMoveInput_Params
{
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendAnimNotifyEarlyExitType>          CancelCondition;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NotifyOnWeaponHitStaticMesh
struct ABendPawn_NotifyOnWeaponHitStaticMesh_Params
{
};

// Function BendGame.BendPawn.NotifyOnWeaponHitEnemy
struct ABendPawn_NotifyOnWeaponHitEnemy_Params
{
};

// Function BendGame.BendPawn.NotifyNewGrappler
struct ABendPawn_NotifyNewGrappler_Params
{
	class ABendPawn*                                   NewGrappler;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                GrapplerCount;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NotifyGrappleEnded
struct ABendPawn_NotifyGrappleEnded_Params
{
	class ABendPawn*                                   PreviousGrappler;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NotifyGrappleBegan
struct ABendPawn_NotifyGrappleBegan_Params
{
	bool                                               SkipButtonEvent;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NotifyEnemyLeftMelee
struct ABendPawn_NotifyEnemyLeftMelee_Params
{
	class ABendPawn*                                   OldEnemy;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NotifyEnemyJoinedMelee
struct ABendPawn_NotifyEnemyJoinedMelee_Params
{
	class ABendPawn*                                   NewEnemy;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.NewMeleeAttackStarted
struct ABendPawn_NewMeleeAttackStarted_Params
{
};

// Function BendGame.BendPawn.MoveItemSlots
struct ABendPawn_MoveItemSlots_Params
{
	TEnumAsByte<EEquippableSlot>                       FromSlot;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       ToSlot;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ModifyDamage
struct ABendPawn_ModifyDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.MeleeWeaponAttackCompleted
struct ABendPawn_MeleeWeaponAttackCompleted_Params
{
};

// Function BendGame.BendPawn.MeleeMissStarted
struct ABendPawn_MeleeMissStarted_Params
{
};

// Function BendGame.BendPawn.MeleeKillMoveStarted
struct ABendPawn_MeleeKillMoveStarted_Params
{
};

// Function BendGame.BendPawn.MeleeButtonReleased
struct ABendPawn_MeleeButtonReleased_Params
{
};

// Function BendGame.BendPawn.MeleeButtonPressed
struct ABendPawn_MeleeButtonPressed_Params
{
};

// Function BendGame.BendPawn.MeleeAttackHitSwingEnded
struct ABendPawn_MeleeAttackHitSwingEnded_Params
{
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.MeleeAttackFullyBlendedIn
struct ABendPawn_MeleeAttackFullyBlendedIn_Params
{
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.LoadConditionalLook
struct ABendPawn_LoadConditionalLook_Params
{
	bool                                               SwitchAfterLoad;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.IsWeaponDefault
struct ABendPawn_IsWeaponDefault_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsUsingFlashlight
struct ABendPawn_IsUsingFlashlight_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsTryingToEnterVehicle
struct ABendPawn_IsTryingToEnterVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsSwimming
struct ABendPawn_IsSwimming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsSprinting
struct ABendPawn_IsSprinting_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsRestingInPeace
struct ABendPawn_IsRestingInPeace_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsReloading
struct ABendPawn_IsReloading_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsProtectedByFullBodyArmor
struct ABendPawn_IsProtectedByFullBodyArmor_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsPlayingVO
struct ABendPawn_IsPlayingVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsPawnJumping
struct ABendPawn_IsPawnJumping_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsPawnFallingForTime
struct ABendPawn_IsPawnFallingForTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsPawnFalling
struct ABendPawn_IsPawnFalling_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsOutOfBreath
struct ABendPawn_IsOutOfBreath_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsOnFloor
struct ABendPawn_IsOnFloor_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsMountedToTurret
struct ABendPawn_IsMountedToTurret_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsMeleeWeaponDefault
struct ABendPawn_IsMeleeWeaponDefault_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsMeleeAttackCriticalHit
struct ABendPawn_IsMeleeAttackCriticalHit_Params
{
	float                                              weaponCriticalHitChance;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsManualAimSuppressed
struct ABendPawn_IsManualAimSuppressed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsLyingDown
struct ABendPawn_IsLyingDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInWater
struct ABendPawn_IsInWater_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInVehicle
struct ABendPawn_IsInVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInteracting
struct ABendPawn_IsInteracting_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInside
struct ABendPawn_IsInside_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInScopeMode
struct ABendPawn_IsInScopeMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInRockStunState
struct ABendPawn_IsInRockStunState_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInRagdoll
struct ABendPawn_IsInRagdoll_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInPairedQuickKillAnim
struct ABendPawn_IsInPairedQuickKillAnim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInPairedKillAnim
struct ABendPawn_IsInPairedKillAnim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInPairedAnimation
struct ABendPawn_IsInPairedAnimation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInMelee
struct ABendPawn_IsInMelee_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInLowCover
struct ABendPawn_IsInLowCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInHitReaction
struct ABendPawn_IsInHitReaction_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInHighCover
struct ABendPawn_IsInHighCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInDodge
struct ABendPawn_IsInDodge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInCoverFacingRight
struct ABendPawn_IsInCoverFacingRight_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInCoverFacingLeft
struct ABendPawn_IsInCoverFacingLeft_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInCornerCoverRight
struct ABendPawn_IsInCornerCoverRight_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInCornerCoverLeft
struct ABendPawn_IsInCornerCoverLeft_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInBlindfire
struct ABendPawn_IsInBlindfire_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInAmbushMode
struct ABendPawn_IsInAmbushMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsInAGrapple
struct ABendPawn_IsInAGrapple_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsHoldingTwoHandedWeapon
struct ABendPawn_IsHoldingTwoHandedWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsHidingInEnclosedSpace
struct ABendPawn_IsHidingInEnclosedSpace_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsHiding
struct ABendPawn_IsHiding_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsHeavyBreathingDisabled
struct ABendPawn_IsHeavyBreathingDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsFrozenOutsideOfPhysicsActivationBounds
struct ABendPawn_IsFrozenOutsideOfPhysicsActivationBounds_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsFirstPerson
struct ABendPawn_IsFirstPerson_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsFiring
struct ABendPawn_IsFiring_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsFireFocusMeleeAttackingMe
struct ABendPawn_IsFireFocusMeleeAttackingMe_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsEquippedWeaponThrown
struct ABendPawn_IsEquippedWeaponThrown_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsEquippedWeaponMelee
struct ABendPawn_IsEquippedWeaponMelee_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsEquippedWeaponGunNotCrossbow
struct ABendPawn_IsEquippedWeaponGunNotCrossbow_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsEquippedWeaponGun
struct ABendPawn_IsEquippedWeaponGun_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsEquippedWeaponFists
struct ABendPawn_IsEquippedWeaponFists_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsDefaultWeaponEquipped
struct ABendPawn_IsDefaultWeaponEquipped_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsCurrentlyInAMeleeAttack
struct ABendPawn_IsCurrentlyInAMeleeAttack_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsCrowdAwareOf
struct ABendPawn_IsCrowdAwareOf_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsCarryingObject
struct ABendPawn_IsCarryingObject_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsBinocularMarkCalloutActive
struct ABendPawn_IsBinocularMarkCalloutActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsBeingStealthKilled
struct ABendPawn_IsBeingStealthKilled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAwarenessCalloutActive
struct ABendPawn_IsAwarenessCalloutActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAutoHolsterDisabled
struct ABendPawn_IsAutoHolsterDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAttackBeingBlocked
struct ABendPawn_IsAttackBeingBlocked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAlive
struct ABendPawn_IsAlive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAimingThrowable
struct ABendPawn_IsAimingThrowable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAimingGun
struct ABendPawn_IsAimingGun_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAimingBehindLowCover
struct ABendPawn_IsAimingBehindLowCover_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAiming
struct ABendPawn_IsAiming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.IsAimed
struct ABendPawn_IsAimed_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.InterpSmoothedMoveSpeedForAnimationSelectionAndScaling
struct ABendPawn_InterpSmoothedMoveSpeedForAnimationSelectionAndScaling_Params
{
	float                                              OldSmoothedSpeed;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpRateRampingUp;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpRateRampingDown;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewSmoothedSpeed;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              NewSpeed;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreVerticalSpeedWhenNotUsingRootMotion;               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.IncreaseAdrenalineMeter
struct ABendPawn_IncreaseAdrenalineMeter_Params
{
	float                                              IncAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.IgnoreDamage_AnimNotifyExit
struct ABendPawn_IgnoreDamage_AnimNotifyExit_Params
{
};

// Function BendGame.BendPawn.IgnoreDamage_AnimNotifyEnter
struct ABendPawn_IgnoreDamage_AnimNotifyEnter_Params
{
	TArray<TEnumAsByte<ETypeOfBaseDamage>>             exceptions;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.BendPawn.HolsterWeapon
struct ABendPawn_HolsterWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HolsterComplete
struct ABendPawn_HolsterComplete_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HitPawnArmor
struct ABendPawn_HitPawnArmor_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HideWeapon
struct ABendPawn_HideWeapon_Params
{
	bool                                               bHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponType>                           WeaponType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HideGunClip
struct ABendPawn_HideGunClip_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HideAllWeapons
struct ABendPawn_HideAllWeapons_Params
{
	bool                                               bHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HideAllPawnInventory
struct ABendPawn_HideAllPawnInventory_Params
{
	bool                                               bHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.Hide
struct ABendPawn_Hide_Params
{
	bool                                               CanControl;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInEnclosedSpace;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HasWeaponEquipedOrIsEquiping
struct ABendPawn_HasWeaponEquipedOrIsEquiping_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasWeaponEquiped
struct ABendPawn_HasWeaponEquiped_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasValidAttackAnim
struct ABendPawn_HasValidAttackAnim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasTrapDetonatorEquiped
struct ABendPawn_HasTrapDetonatorEquiped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasStatusEffect
struct ABendPawn_HasStatusEffect_Params
{
	TEnumAsByte<EStatusEffects>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasScaryStatusEffect
struct ABendPawn_HasScaryStatusEffect_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasRightLeg
struct ABendPawn_HasRightLeg_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasRightArm
struct ABendPawn_HasRightArm_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasLeftLeg
struct ABendPawn_HasLeftLeg_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasLeftArm
struct ABendPawn_HasLeftArm_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasHeadBlownOff
struct ABendPawn_HasHeadBlownOff_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasHead
struct ABendPawn_HasHead_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasFullBodyArmorEquipped
struct ABendPawn_HasFullBodyArmorEquipped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasFinishedStatusEffect
struct ABendPawn_HasFinishedStatusEffect_Params
{
	TEnumAsByte<EStatusEffects>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasBodyPart
struct ABendPawn_HasBodyPart_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasBinocularsEquipedInHand
struct ABendPawn_HasBinocularsEquipedInHand_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasBinocularsEquiped
struct ABendPawn_HasBinocularsEquiped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasAThrowingWeapon
struct ABendPawn_HasAThrowingWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasArmorEquipped
struct ABendPawn_HasArmorEquipped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasARetreatThrowingWeapon
struct ABendPawn_HasARetreatThrowingWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasARangedWeapon
struct ABendPawn_HasARangedWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HasAMeleeWeapon
struct ABendPawn_HasAMeleeWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.HandleFocusModeStateChange
struct ABendPawn_HandleFocusModeStateChange_Params
{
	bool                                               EnteredFocusMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.HandleFocusModeDeactivation
struct ABendPawn_HandleFocusModeDeactivation_Params
{
};

// Function BendGame.BendPawn.GetWeaponToSwapToPrimaryOrPistol
struct ABendPawn_GetWeaponToSwapToPrimaryOrPistol_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWeaponScarinessAtSocketLocation
struct ABendPawn_GetWeaponScarinessAtSocketLocation_Params
{
	TEnumAsByte<EWeaponSocketLocation>                 socketLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponScariness>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWeaponForAiming
struct ABendPawn_GetWeaponForAiming_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWeaponAtSocketLocation
struct ABendPawn_GetWeaponAtSocketLocation_Params
{
	TEnumAsByte<EWeaponSocketLocation>                 socketLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWeapon
struct ABendPawn_GetWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWantsToFreeDodge
struct ABendPawn_GetWantsToFreeDodge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetWantsToAim
struct ABendPawn_GetWantsToAim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetVocalAudioComponent
struct ABendPawn_GetVocalAudioComponent_Params
{
	class UAudioComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetVehicleSteeringNeg1To1
struct ABendPawn_GetVehicleSteeringNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetVehicleRiderState
struct ABendPawn_GetVehicleRiderState_Params
{
	TEnumAsByte<EVehicleRiderState>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetVehicleRiderShouldDodge
struct ABendPawn_GetVehicleRiderShouldDodge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetVehicle
struct ABendPawn_GetVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetUnaimedMoveStyle
struct ABendPawn_GetUnaimedMoveStyle_Params
{
	TEnumAsByte<EUnaimedAnimMoveStyle>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetTrapDetonatorWeapon
struct ABendPawn_GetTrapDetonatorWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetTensePose
struct ABendPawn_GetTensePose_Params
{
	TEnumAsByte<ETensePose>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetTaserWeapon
struct ABendPawn_GetTaserWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetTargetTransformFlattened
struct ABendPawn_GetTargetTransformFlattened_Params
{
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetStatusEffectsOfType
struct ABendPawn_GetStatusEffectsOfType_Params
{
	TEnumAsByte<EStatusEffects>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UStatusEffect*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPawn.GetStateMachine
struct ABendPawn_GetStateMachine_Params
{
	class ABendAnimStateMachine*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetSquad
struct ABendPawn_GetSquad_Params
{
	class UBendAISquad*                                ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetSecondAlternativePrimaryWeapon
struct ABendPawn_GetSecondAlternativePrimaryWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetScariestWeapon
struct ABendPawn_GetScariestWeapon_Params
{
	bool                                               NeedAmmo;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponScariness>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRideVehicleComponent
struct ABendPawn_GetRideVehicleComponent_Params
{
	class UBendRideVehicleComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomThrownWeapon
struct ABendPawn_GetRandomThrownWeapon_Params
{
	bool                                               IncludingFromInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomShootingWeapon
struct ABendPawn_GetRandomShootingWeapon_Params
{
	bool                                               IncludingFromInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomSequence
struct ABendPawn_GetRandomSequence_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomRetreatThrownWeapon
struct ABendPawn_GetRandomRetreatThrownWeapon_Params
{
	bool                                               IncludingFromInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomMeleeWeapon
struct ABendPawn_GetRandomMeleeWeapon_Params
{
	bool                                               IncludingFromInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomBurstNum
struct ABendPawn_GetRandomBurstNum_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomBlendSpace
struct ABendPawn_GetRandomBlendSpace_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomAnyWeapon
struct ABendPawn_GetRandomAnyWeapon_Params
{
	bool                                               IncludingFromInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetRandomAnimation
struct ABendPawn_GetRandomAnimation_Params
{
	TArray<struct FBendAnimSequenceData>               pAnimList;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FBendAnimSequenceData                       pAnimToIgnore;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FBendAnimSequenceData                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPawn.GetRandomAction
struct ABendPawn_GetRandomAction_Params
{
	TArray<struct FBendActionData>                     pActionList;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FBendActionData                             pActionToIgnore;                                          // (Parm, OutParm, ReferenceParm)
	struct FBendActionData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPawn.GetPropGripStyle
struct ABendPawn_GetPropGripStyle_Params
{
	TEnumAsByte<EBendPropGripStyle>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPrimaryEquippedItem
struct ABendPawn_GetPrimaryEquippedItem_Params
{
	class ABendEquippableItem*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPreviousWeapon
struct ABendPawn_GetPreviousWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPotentialMeleeVictim
struct ABendPawn_GetPotentialMeleeVictim_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPercentageOfBodyProtectedByArmor
struct ABendPawn_GetPercentageOfBodyProtectedByArmor_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPawnNoiseEmitterComponent
struct ABendPawn_GetPawnNoiseEmitterComponent_Params
{
	class UPawnNoiseEmitterComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPawnMesh
struct ABendPawn_GetPawnMesh_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPawnBodyType
struct ABendPawn_GetPawnBodyType_Params
{
	TEnumAsByte<EBendPawnBodyType>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPairedDodgeFaceAttackerAnchorTransform
struct ABendPawn_GetPairedDodgeFaceAttackerAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetPairedDodgeAttacker
struct ABendPawn_GetPairedDodgeAttacker_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNumWeapons
struct ABendPawn_GetNumWeapons_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNumCrowdMembersAwareOf
struct ABendPawn_GetNumCrowdMembersAwareOf_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNPCCalloutWidget
struct ABendPawn_GetNPCCalloutWidget_Params
{
	class UBendNPCCalloutWidget*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNoiseEmitter
struct ABendPawn_GetNoiseEmitter_Params
{
	class UPawnNoiseEmitterComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNextProjectileWeapon
struct ABendPawn_GetNextProjectileWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNextForwardLimb_New
struct ABendPawn_GetNextForwardLimb_New_Params
{
	struct FVector                                     ForwardDirectionNormalized;                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StrideLength;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PredictionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSlowLimbMovement;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetNextForwardLimb
struct ABendPawn_GetNextForwardLimb_Params
{
	struct FVector                                     ForwardDirectionNormalized;                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StrideLength;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PredictionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSlowLimbMovement;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMyKiller
struct ABendPawn_GetMyKiller_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMoveToTarget_UpdatedStartAnchorTransform
struct ABendPawn_GetMoveToTarget_UpdatedStartAnchorTransform_Params
{
	class AActor*                                      TargetToFace;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMoveToTarget_StartAnchorTransform
struct ABendPawn_GetMoveToTarget_StartAnchorTransform_Params
{
	class AActor*                                      TargetToFace;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMoveToTarget_EndAnchorTransform
struct ABendPawn_GetMoveToTarget_EndAnchorTransform_Params
{
	class AActor*                                      TargetMoveTo;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReverseAngle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AdjustAttackToTargetCapsuleSize;                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetToPawnAnchorOffset;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMoveSpeedForAnimationSelectionAndScaling
struct ABendPawn_GetMoveSpeedForAnimationSelectionAndScaling_Params
{
	bool                                               bIgnoreVerticalSpeedWhenNotUsingRootMotion;               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMountedVehicleOrVehicleBeingDismounted
struct ABendPawn_GetMountedVehicleOrVehicleBeingDismounted_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMeleeWeaponDoneDisarming
struct ABendPawn_GetMeleeWeaponDoneDisarming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMeleeTarget
struct ABendPawn_GetMeleeTarget_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMeleeStartAnchorTransform
struct ABendPawn_GetMeleeStartAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetMeleeEndAnchorTransform
struct ABendPawn_GetMeleeEndAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetLiveSwappedVehicle
struct ABendPawn_GetLiveSwappedVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetLipSyncComponent
struct ABendPawn_GetLipSyncComponent_Params
{
	class UBendLipSyncComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetHeadLocation
struct ABendPawn_GetHeadLocation_Params
{
	bool                                               bUseHeadBone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetHeadForward
struct ABendPawn_GetHeadForward_Params
{
	bool                                               bUseHeadBone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetGender
struct ABendPawn_GetGender_Params
{
	TEnumAsByte<EePawnGender>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFullBodyArmorHealth
struct ABendPawn_GetFullBodyArmorHealth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetForceInjuredWalk
struct ABendPawn_GetForceInjuredWalk_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFloorWaterLocation
struct ABendPawn_GetFloorWaterLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFloorWaterDepth
struct ABendPawn_GetFloorWaterDepth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFloorSurfaceTypeOfCharacter
struct ABendPawn_GetFloorSurfaceTypeOfCharacter_Params
{
	class ABendPawn*                                   Character;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFloorSurfaceType
struct ABendPawn_GetFloorSurfaceType_Params
{
	TEnumAsByte<EPhysicalSurface>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFloorPhysicalMaterial
struct ABendPawn_GetFloorPhysicalMaterial_Params
{
	class UPhysicalMaterial*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFirstWeapon
struct ABendPawn_GetFirstWeapon_Params
{
	bool                                               bCheckAmmo;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckCanDrawWeapon;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFirstThrowingWeapon
struct ABendPawn_GetFirstThrowingWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFactionType
struct ABendPawn_GetFactionType_Params
{
	TEnumAsByte<EAIFactionType>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFactionForMelee
struct ABendPawn_GetFactionForMelee_Params
{
	TEnumAsByte<EAIFactionType>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetFaceTarget_EndAnchorTransform
struct ABendPawn_GetFaceTarget_EndAnchorTransform_Params
{
	class AActor*                                      TargetToFace;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReverseAngle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetEquippedOrEquippingItem
struct ABendPawn_GetEquippedOrEquippingItem_Params
{
	class ABendEquippableItem*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetEquippedItemCurrentlyInHand
struct ABendPawn_GetEquippedItemCurrentlyInHand_Params
{
	class ABendEquippableItem*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetEquipingWeapon
struct ABendPawn_GetEquipingWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetEnemyWhoBlockedAttack
struct ABendPawn_GetEnemyWhoBlockedAttack_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetDruggedSprintStumble
struct ABendPawn_GetDruggedSprintStumble_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetDrugged
struct ABendPawn_GetDrugged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetDesiredWeapon
struct ABendPawn_GetDesiredWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetDamageLocation
struct ABendPawn_GetDamageLocation_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EeDamageLocations>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCurrentGunsScariness
struct ABendPawn_GetCurrentGunsScariness_Params
{
	TEnumAsByte<EWeaponScariness>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCurrentAttackAnimIndex
struct ABendPawn_GetCurrentAttackAnimIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCurPosition_StartAnchorTransform
struct ABendPawn_GetCurPosition_StartAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCriticalHitDamageAmount
struct ABendPawn_GetCriticalHitDamageAmount_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCompanionPawnActorSpaceAngle
struct ABendPawn_GetCompanionPawnActorSpaceAngle_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCharacterMovementComponent
struct ABendPawn_GetCharacterMovementComponent_Params
{
	class UCharacterMovementComponent*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetCanJoinCrowd
struct ABendPawn_GetCanJoinCrowd_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBrightness
struct ABendPawn_GetBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBootKnifeWeapon
struct ABendPawn_GetBootKnifeWeapon_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBlindFireMoveStyle
struct ABendPawn_GetBlindFireMoveStyle_Params
{
	TEnumAsByte<EBlindFireAnimMoveStyle>               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBendAIController
struct ABendPawn_GetBendAIController_Params
{
	class ABendAIController*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBeingMeleedDeathBlowStartAnchorTransform
struct ABendPawn_GetBeingMeleedDeathBlowStartAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetBeingMeleedDeathBlowEndAnchorTransform
struct ABendPawn_GetBeingMeleedDeathBlowEndAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAttackManager
struct ABendPawn_GetAttackManager_Params
{
	class UBendAttackManager*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAssignedVehicle
struct ABendPawn_GetAssignedVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAreWeaponsThisScary
struct ABendPawn_GetAreWeaponsThisScary_Params
{
	TEnumAsByte<EWeaponScariness>                      WeaponScarinessEnum;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NeedAmmo;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAnimVariationData
struct ABendPawn_GetAnimVariationData_Params
{
	struct FName                                       AnimGroupName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAnimVariationData*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAnimMessenger
struct ABendPawn_GetAnimMessenger_Params
{
	class UBendAnimBlueprintMessenger*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAnchorTransformCapsule
struct ABendPawn_GetAnchorTransformCapsule_Params
{
	class UCapsuleComponent*                           ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAlternativePrimaryWeapon
struct ABendPawn_GetAlternativePrimaryWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAITeam
struct ABendPawn_GetAITeam_Params
{
	class UBendAITeam*                                 ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAimType
struct ABendPawn_GetAimType_Params
{
	TEnumAsByte<EAimStance>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAimOffsets
struct ABendPawn_GetAimOffsets_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAimedMoveStyle
struct ABendPawn_GetAimedMoveStyle_Params
{
	TEnumAsByte<EAimedAnimMoveStyle>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetAdrenalineMeter
struct ABendPawn_GetAdrenalineMeter_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.GetActiveStatusEffects
struct ABendPawn_GetActiveStatusEffects_Params
{
	TArray<class UStatusEffect*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPawn.FreeDodgeStarted
struct ABendPawn_FreeDodgeStarted_Params
{
};

// Function BendGame.BendPawn.FreeDodgeEnded
struct ABendPawn_FreeDodgeEnded_Params
{
};

// Function BendGame.BendPawn.ForceKillWithDamageType
struct ABendPawn_ForceKillWithDamageType_Params
{
	struct FDamageEvent                                DamageEvent;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceRagdoll;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceKillByDamageType
struct ABendPawn_ForceKillByDamageType_Params
{
	class UClass*                                      DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceRagdoll;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceKill
struct ABendPawn_ForceKill_Params
{
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceRagdoll;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceHiddenFromCrowd
struct ABendPawn_ForceHiddenFromCrowd_Params
{
	bool                                               bHiddenFromCrowd;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceExitVehicleSeat
struct ABendPawn_ForceExitVehicleSeat_Params
{
	TEnumAsByte<EBendVehicleExitReason>                ExitReason;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceExitHitReaction
struct ABendPawn_ForceExitHitReaction_Params
{
	bool                                               ExitHitReaction;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceDrawMeleeWeapon
struct ABendPawn_ForceDrawMeleeWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ForceDrawBootKnifeWeapon
struct ABendPawn_ForceDrawBootKnifeWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.FinishPlacingTrap
struct ABendPawn_FinishPlacingTrap_Params
{
};

// Function BendGame.BendPawn.FinishedStreamingLook
struct ABendPawn_FinishedStreamingLook_Params
{
	bool                                               SwitchAfterLoad;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.FindWeaponByID
struct ABendPawn_FindWeaponByID_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.FindAVehicleToEnter
struct ABendPawn_FindAVehicleToEnter_Params
{
	float                                              MaxDistance;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.FinalEquipComplete
struct ABendPawn_FinalEquipComplete_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ExitVehicleWithAnim_Deprecated
struct ABendPawn_ExitVehicleWithAnim_Deprecated_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ExitLadderClimb
struct ABendPawn_ExitLadderClimb_Params
{
	struct FVector                                     EdgePos;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     EdgeNormal;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ExitingLoopingAnim
struct ABendPawn_ExitingLoopingAnim_Params
{
};

// Function BendGame.BendPawn.EquipBinoculars
struct ABendPawn_EquipBinoculars_Params
{
};

// Function BendGame.BendPawn.EnterVehicleWithAnim_Deprecated
struct ABendPawn_EnterVehicleWithAnim_Deprecated_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.EnableProceduralRotation
struct ABendPawn_EnableProceduralRotation_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.EnableCrowdAttractionAndAwarenessTrigger
struct ABendPawn_EnableCrowdAttractionAndAwarenessTrigger_Params
{
	bool                                               bEnable;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.EnableAutoHolster
struct ABendPawn_EnableAutoHolster_Params
{
};

// Function BendGame.BendPawn.EarlyExitHitReacationInputSuccessful
struct ABendPawn_EarlyExitHitReacationInputSuccessful_Params
{
};

// Function BendGame.BendPawn.DruggedSprintStumbled
struct ABendPawn_DruggedSprintStumbled_Params
{
};

// Function BendGame.BendPawn.DropWeapon
struct ABendPawn_DropWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               BrokenWeaponOnly;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DropThrownWeapon
struct ABendPawn_DropThrownWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DropCarriedObjectComplete
struct ABendPawn_DropCarriedObjectComplete_Params
{
};

// Function BendGame.BendPawn.DropCarriedObject
struct ABendPawn_DropCarriedObject_Params
{
};

// Function BendGame.BendPawn.DrawWeapon
struct ABendPawn_DrawWeapon_Params
{
	class ABendWeapon*                                 theWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldStopAiming;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawTrapWeapon
struct ABendPawn_DrawTrapWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawTrapDetonatorWeapon
struct ABendPawn_DrawTrapDetonatorWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawThrownWeaponByID
struct ABendPawn_DrawThrownWeaponByID_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawThrownWeapon
struct ABendPawn_DrawThrownWeapon_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawTaserWeapon
struct ABendPawn_DrawTaserWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawRifle
struct ABendPawn_DrawRifle_Params
{
	TEnumAsByte<EWeaponSocketLocation>                 socketLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawRetreatThrownWeapon
struct ABendPawn_DrawRetreatThrownWeapon_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawPistol
struct ABendPawn_DrawPistol_Params
{
	TEnumAsByte<EWeaponSocketLocation>                 socketLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawOrSelectWeaponFromWheel
struct ABendPawn_DrawOrSelectWeaponFromWheel_Params
{
	class ABendWeapon*                                 theWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawMeleeWeapon
struct ABendPawn_DrawMeleeWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawLastWeapon
struct ABendPawn_DrawLastWeapon_Params
{
	bool                                               ForceEquip;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawGun
struct ABendPawn_DrawGun_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DrawComplete
struct ABendPawn_DrawComplete_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFinalize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DodgeInputSuccessful
struct ABendPawn_DodgeInputSuccessful_Params
{
};

// Function BendGame.BendPawn.DodgeInputButtonPressed
struct ABendPawn_DodgeInputButtonPressed_Params
{
};

// Function BendGame.BendPawn.DisarmMeleeWeapon
struct ABendPawn_DisarmMeleeWeapon_Params
{
	bool                                               IsHeavyHit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsFromAnimNotify;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisarmAllMeleeWeapons
struct ABendPawn_DisarmAllMeleeWeapons_Params
{
	bool                                               bSetMeleeArmLockoutFlag;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableStatusEffects
struct ABendPawn_DisableStatusEffects_Params
{
	bool                                               Disabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableInput
struct ABendPawn_DisableInput_Params
{
	class APlayerController*                           PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableHeavyBreathing
struct ABendPawn_DisableHeavyBreathing_Params
{
	bool                                               bDisable;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableEquippingByWeaponSocket
struct ABendPawn_DisableEquippingByWeaponSocket_Params
{
	bool                                               DisableEquip;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponSocketLocation>                 HolsterSocketName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableCanDodge
struct ABendPawn_DisableCanDodge_Params
{
	bool                                               Disable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ActivateDodgeInput;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableAutoHolsterForCinematics
struct ABendPawn_DisableAutoHolsterForCinematics_Params
{
	bool                                               bDisable;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableAutoHolster
struct ABendPawn_DisableAutoHolster_Params
{
	bool                                               bAutoEquip;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DisableAllCollision
struct ABendPawn_DisableAllCollision_Params
{
};

// Function BendGame.BendPawn.Die
struct ABendPawn_Die_Params
{
	float                                              KillingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FDamageEvent                                DamageEvent;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.DetonateTrapTriggered
struct ABendPawn_DetonateTrapTriggered_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DetonateTrap
struct ABendPawn_DetonateTrap_Params
{
};

// Function BendGame.BendPawn.DetonateThrowable
struct ABendPawn_DetonateThrowable_Params
{
	class UClass*                                      DetonationStatusEffect;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DecreaseAdrenalineMeter
struct ABendPawn_DecreaseAdrenalineMeter_Params
{
	float                                              DecAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DeactivateMarkedCallout
struct ABendPawn_DeactivateMarkedCallout_Params
{
};

// Function BendGame.BendPawn.DeactivateAwarenessCallout
struct ABendPawn_DeactivateAwarenessCallout_Params
{
	bool                                               DeactivateDueToAware;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.DeactivateAdrenalineMode
struct ABendPawn_DeactivateAdrenalineMode_Params
{
};

// Function BendGame.BendPawn.CurrentWeaponHasScope
struct ABendPawn_CurrentWeaponHasScope_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.Crouch
struct ABendPawn_Crouch_Params
{
	bool                                               bClientSimulation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.CrossbowCocked
struct ABendPawn_CrossbowCocked_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ClipRemoved
struct ABendPawn_ClipRemoved_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ClipLoaded
struct ABendPawn_ClipLoaded_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ClearOverrideShootingAccuracyNPC
struct ABendPawn_ClearOverrideShootingAccuracyNPC_Params
{
};

// Function BendGame.BendPawn.ClearMovementParameters
struct ABendPawn_ClearMovementParameters_Params
{
	int                                                Token;                                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ClearCanEquipDamageTypes
struct ABendPawn_ClearCanEquipDamageTypes_Params
{
};

// Function BendGame.BendPawn.ClearCanEquipBasedOnDamageTypes
struct ABendPawn_ClearCanEquipBasedOnDamageTypes_Params
{
};

// Function BendGame.BendPawn.ClearAttackTarget
struct ABendPawn_ClearAttackTarget_Params
{
};

// Function BendGame.BendPawn.CleanupLastClimbLockout
struct ABendPawn_CleanupLastClimbLockout_Params
{
};

// Function BendGame.BendPawn.ClampGrappleResult
struct ABendPawn_ClampGrappleResult_Params
{
	float                                              InResult;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CheckIfCanDoCoolMeleeAttack_WindowStarted_AnimNotify
struct ABendPawn_CheckIfCanDoCoolMeleeAttack_WindowStarted_AnimNotify_Params
{
	bool                                               DisplayIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             EmitterTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FailedDisplayIcon;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             FailedEmitterTemplate;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FailedAttachPointName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FailedLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FailedRotation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       FiledLocationType;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FailedAutoDestroy;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.CheckIfCanDoCoolMeleeAttack_WindowEnded_AnimNotify
struct ABendPawn_CheckIfCanDoCoolMeleeAttack_WindowEnded_AnimNotify_Params
{
};

// Function BendGame.BendPawn.CanPlayCombatAudio
struct ABendPawn_CanPlayCombatAudio_Params
{
	float                                              MaxDistance;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CanPawnBeForceKilledInAdrenalineMode
struct ABendPawn_CanPawnBeForceKilledInAdrenalineMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CanDetonateTrap
struct ABendPawn_CanDetonateTrap_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CanCounterAttack_Started
struct ABendPawn_CanCounterAttack_Started_Params
{
};

// Function BendGame.BendPawn.CanCounterAttack_Ended
struct ABendPawn_CanCounterAttack_Ended_Params
{
	class ABendPawn*                                   pAttacker;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.CancelReload
struct ABendPawn_CancelReload_Params
{
};

// Function BendGame.BendPawn.CancelProvokeAttack
struct ABendPawn_CancelProvokeAttack_Params
{
};

// Function BendGame.BendPawn.CancelItemEquip
struct ABendPawn_CancelItemEquip_Params
{
};

// Function BendGame.BendPawn.CancelActionWithBlendOutTime
struct ABendPawn_CancelActionWithBlendOutTime_Params
{
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CancelActionWithActionData
struct ABendPawn_CancelActionWithActionData_Params
{
	struct FBendActionData                             ActionToCancel;                                           // (Parm)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CancelAction
struct ABendPawn_CancelAction_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CanCancelActionWithMoveInput
struct ABendPawn_CanCancelActionWithMoveInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CanBeMarkedByBinoculars
struct ABendPawn_CanBeMarkedByBinoculars_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CalculateXPValue
struct ABendPawn_CalculateXPValue_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CalculateMeleeCriticalHit
struct ABendPawn_CalculateMeleeCriticalHit_Params
{
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.CalculateCriticalHit_NEW
struct ABendPawn_CalculateCriticalHit_NEW_Params
{
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.CalculateCriticalHit
struct ABendPawn_CalculateCriticalHit_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.BendPawnMakeNoise
struct ABendPawn_BendPawnMakeNoise_Params
{
	float                                              Loudness;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class APawn*                                       NoiseInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendSoundEventType>                   SoundEvent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.BeingMeleedDeathBlowStarted
struct ABendPawn_BeingMeleedDeathBlowStarted_Params
{
};

// Function BendGame.BendPawn.BeingMeleedDeathBlowEnded
struct ABendPawn_BeingMeleedDeathBlowEnded_Params
{
};

// Function BendGame.BendPawn.AttemptDodge
struct ABendPawn_AttemptDodge_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.AttackTargetFreeDodgeStarted
struct ABendPawn_AttackTargetFreeDodgeStarted_Params
{
};

// Function BendGame.BendPawn.AttackersCounterWindowStarted_AnimNotify
struct ABendPawn_AttackersCounterWindowStarted_AnimNotify_Params
{
	bool                                               DisplayIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             EmitterTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AttackersCounterWindowEnded_AnimNotify
struct ABendPawn_AttackersCounterWindowEnded_AnimNotify_Params
{
};

// Function BendGame.BendPawn.AttackersCounterFlagTriggerd_AnimNotify
struct ABendPawn_AttackersCounterFlagTriggerd_AnimNotify_Params
{
};

// Function BendGame.BendPawn.ArmMeleeWeapon
struct ABendPawn_ArmMeleeWeapon_Params
{
	bool                                               IsHeavyHit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamagePercentage;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               disableTargetsHitReactions;                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OverrideDamageType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeleeSwingDirection>                  SwingDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RenderImpactParticle;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeleeUpDownSwingDirection>            UpDownSwingDirection;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDamageAnimationTypes>                 ForceHitReactionType;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForceStrength;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ApplyDestruction
struct ABendPawn_ApplyDestruction_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlaySound;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RenderParticles;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RenderBloodStain;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SimulatePhysics;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ForceDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForceAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotifySlomoEnd
struct ABendPawn_AnimNotifySlomoEnd_Params
{
	class UAnimNotifyState*                            AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotifySlomoBegin
struct ABendPawn_AnimNotifySlomoBegin_Params
{
	class UAnimNotifyState*                            AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              TimeDilationValue;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_VictimStabbed
struct ABendPawn_AnimNotify_VictimStabbed_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_StunState
struct ABendPawn_AnimNotify_StunState_Params
{
	bool                                               IsStunned;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_StartVictimPairedAnim
struct ABendPawn_AnimNotify_StartVictimPairedAnim_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_StartVictimDeathAnim
struct ABendPawn_AnimNotify_StartVictimDeathAnim_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_SetVocalFaceState
struct ABendPawn_AnimNotify_SetVocalFaceState_Params
{
	TEnumAsByte<EVocalEventFaceState>                  FaceStateIn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_SetDyingAndRespawnParameters
struct ABendPawn_AnimNotify_SetDyingAndRespawnParameters_Params
{
	float                                              FadeToBlackTimer;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_Release
struct ABendPawn_AnimNotify_Release_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_NavWalking
struct ABendPawn_AnimNotify_NavWalking_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EeNavWalkingTypes>                     NavWalkingType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_MeleeKill
struct ABendPawn_AnimNotify_MeleeKill_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_MeleeHeavyHitWindowEnd
struct ABendPawn_AnimNotify_MeleeHeavyHitWindowEnd_Params
{
};

// Function BendGame.BendPawn.AnimNotify_MeleeHeavyHitWindowBegin
struct ABendPawn_AnimNotify_MeleeHeavyHitWindowBegin_Params
{
};

// Function BendGame.BendPawn.AnimNotify_MeleeDeathBlow
struct ABendPawn_AnimNotify_MeleeDeathBlow_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_HolsterComplete
struct ABendPawn_AnimNotify_HolsterComplete_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_DrawComplete
struct ABendPawn_AnimNotify_DrawComplete_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_CriticalHitWindowEnd
struct ABendPawn_AnimNotify_CriticalHitWindowEnd_Params
{
};

// Function BendGame.BendPawn.AnimNotify_CriticalHitWindowBegin
struct ABendPawn_AnimNotify_CriticalHitWindowBegin_Params
{
};

// Function BendGame.BendPawn.AnimNotify_CanSwitchMeleeTarget
struct ABendPawn_AnimNotify_CanSwitchMeleeTarget_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_CanBeThrown
struct ABendPawn_AnimNotify_CanBeThrown_Params
{
	bool                                               bBegin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_BreakWeapon
struct ABendPawn_AnimNotify_BreakWeapon_Params
{
	class UAnimNotify*                                 Notify;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AnimNotify_AttackCanBeDodged
struct ABendPawn_AnimNotify_AttackCanBeDodged_Params
{
	bool                                               bBegin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AllowFreeDodge
struct ABendPawn_AllowFreeDodge_Params
{
	bool                                               bAllow;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AllowCrouch
struct ABendPawn_AllowCrouch_Params
{
	bool                                               bAllow;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AddWeapon_NEW
struct ABendPawn_AddWeapon_NEW_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEquip;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AddToNonTableDrops
struct ABendPawn_AddToNonTableDrops_Params
{
	struct FInventoryIDDetails                         newItem;                                                  // (Parm)
};

// Function BendGame.BendPawn.AddStatusEffect
struct ABendPawn_AddStatusEffect_Params
{
	class UClass*                                      Effect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      EffectOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 EffectInstigator;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UStatusEffect*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.AddDetonatableTrap
struct ABendPawn_AddDetonatableTrap_Params
{
	class ABendTrap*                                   Trap;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AddBloodToBodyPart
struct ABendPawn_AddBloodToBodyPart_Params
{
	TEnumAsByte<EeBloodOnBodyParts>                    BodyPart;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AddBloodFXHit
struct ABendPawn_AddBloodFXHit_Params
{
	class USceneComponent*                             HitComponent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RadiusInitial;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RadiusFinal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RadiusTransitionTime;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Randomization;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseHeadValues;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.AddBloodFadingMultiplierToBones
struct ABendPawn_AddBloodFadingMultiplierToBones_Params
{
	float                                              Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               BoneNames;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendPawn.AddAnimVariationData
struct ABendPawn_AddAnimVariationData_Params
{
	class UBendAnimVariationData*                      NewData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawn.ActivateUnawareCallout
struct ABendPawn_ActivateUnawareCallout_Params
{
};

// Function BendGame.BendPawn.ActivateSemiAwareCallout
struct ABendPawn_ActivateSemiAwareCallout_Params
{
};

// Function BendGame.BendPawn.ActivateMarkedCallout
struct ABendPawn_ActivateMarkedCallout_Params
{
	TEnumAsByte<ECalloutWidgetType>                    WidgetType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawn.ActivateFirstDetectionCallout
struct ABendPawn_ActivateFirstDetectionCallout_Params
{
};

// Function BendGame.BendPawn.ActivateAdrenalineMode
struct ABendPawn_ActivateAdrenalineMode_Params
{
};

// Function BendGame.BendSensingComponent.SetFactionValueOfPawn
struct UBendSensingComponent_SetFactionValueOfPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.SawPawnHide
struct UBendSensingComponent_SawPawnHide_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.PreviouslyAwareAndTimeSinceLastSeen
struct UBendSensingComponent_PreviouslyAwareAndTimeSinceLastSeen_Params
{
	class ABendPawn*                                   SearchPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PreviouslyAware;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              TimeSinceSeen;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.OnBonesFinalized
struct UBendSensingComponent_OnBonesFinalized_Params
{
};

// Function BendGame.BendSensingComponent.HaveLOS
struct UBendSensingComponent_HaveLOS_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetNumFriendlyBodies
struct UBendSensingComponent_GetNumFriendlyBodies_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetNumDetectedByFaction
struct UBendSensingComponent_GetNumDetectedByFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetDistToPawn
struct UBendSensingComponent_GetDistToPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetClosestThreatPawn
struct UBendSensingComponent_GetClosestThreatPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetClosestTargetPawn
struct UBendSensingComponent_GetClosestTargetPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetClosestPawnByFaction
struct UBendSensingComponent_GetClosestPawnByFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetClosestFriendPawn
struct UBendSensingComponent_GetClosestFriendPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetAwarenessOfPawn
struct UBendSensingComponent_GetAwarenessOfPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSensingComponent.GetAwarenessLevelOfPawn
struct UBendSensingComponent_GetAwarenessLevelOfPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.ShouldUpdateAwarenessCallout
struct UBendCalloutWidgetComponent_ShouldUpdateAwarenessCallout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.SetHidePawnMiniMap
struct UBendCalloutWidgetComponent_SetHidePawnMiniMap_Params
{
	bool                                               bHide;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.IsEnemy
struct UBendCalloutWidgetComponent_IsEnemy_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.IsCalloutActive
struct UBendCalloutWidgetComponent_IsCalloutActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.GetPawnBodyType
struct UBendCalloutWidgetComponent_GetPawnBodyType_Params
{
	TEnumAsByte<EBendPawnBodyType>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.GetFactionType
struct UBendCalloutWidgetComponent_GetFactionType_Params
{
	TEnumAsByte<EAIFactionType>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.GetAwarenessValue
struct UBendCalloutWidgetComponent_GetAwarenessValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.GetAwarenessOfPawn
struct UBendCalloutWidgetComponent_GetAwarenessOfPawn_Params
{
	class ABendPawn*                                   PawnInQuestion;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.GetActorLocation
struct UBendCalloutWidgetComponent_GetActorLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCalloutWidgetComponent.ActivateUnawareCallout
struct UBendCalloutWidgetComponent_ActivateUnawareCallout_Params
{
};

// Function BendGame.BendCalloutWidgetComponent.ActivateSemiAwareCallout
struct UBendCalloutWidgetComponent_ActivateSemiAwareCallout_Params
{
};

// Function BendGame.BendCalloutWidgetComponent.ActivateMarkedCallout
struct UBendCalloutWidgetComponent_ActivateMarkedCallout_Params
{
	TEnumAsByte<ECalloutWidgetType>                    WidgetType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.TimeSinceStealthBroken
struct ABendAIManager_TimeSinceStealthBroken_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.SetStealthRecoverable
struct ABendAIManager_SetStealthRecoverable_Params
{
	bool                                               recoverable;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.SetCrowdSimulationEnabled
struct ABendAIManager_SetCrowdSimulationEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.SetAwarenessCalloutsEnabled
struct ABendAIManager_SetAwarenessCalloutsEnabled_Params
{
	bool                                               AreEnabled;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.SelectDebugNPC
struct ABendAIManager_SelectDebugNPC_Params
{
	class ABendAIController*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.ResetStealthMode
struct ABendAIManager_ResetStealthMode_Params
{
};

// Function BendGame.BendAIManager.OverrideTargetEvaluatorByFactions
struct ABendAIManager_OverrideTargetEvaluatorByFactions_Params
{
	TAssetPtr<class UClass>                            NewEvaluator;                                             // (Parm)
	TArray<TEnumAsByte<EAIFactionType>>                FactionsToOverride;                                       // (Parm, ZeroConstructor)
};

// Function BendGame.BendAIManager.NotifyOfExplosiveDevice
struct ABendAIManager_NotifyOfExplosiveDevice_Params
{
	class AActor*                                      device;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              explosionRadius;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EExplosiveType>                        ExplosiveType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.NotifyDeviceExploded
struct ABendAIManager_NotifyDeviceExploded_Params
{
	class AActor*                                      device;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.MidMissionCinematicHandler
struct ABendAIManager_MidMissionCinematicHandler_Params
{
	struct FName                                       CinematicLevel;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.IsStealthMode
struct ABendAIManager_IsStealthMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.IsHostileEnemy
struct ABendAIManager_IsHostileEnemy_Params
{
	class ABendPawn*                                   DoesThisGuy;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   HateThisGuy;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.IsEnemy
struct ABendAIManager_IsEnemy_Params
{
	class ABendPawn*                                   DoesThisGuy;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   HateThisGuy;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.IsCrowdSimulationEnabled
struct ABendAIManager_IsCrowdSimulationEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetUseCondition
struct ABendAIManager_GetUseCondition_Params
{
	TAssetPtr<class UClass>                            UseConditionClass;                                        // (Parm)
	class UBendUseCondition*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetRockVolumeBySurface
struct ABendAIManager_GetRockVolumeBySurface_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetRockHearingRadiusBySurface
struct ABendAIManager_GetRockHearingRadiusBySurface_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetRockHearingRadius
struct ABendAIManager_GetRockHearingRadius_Params
{
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetPlayerVisibleLevel
struct ABendAIManager_GetPlayerVisibleLevel_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetPlayerSoundLevel
struct ABendAIManager_GetPlayerSoundLevel_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNumThreatsToPlayer
struct ABendAIManager_GetNumThreatsToPlayer_Params
{
	float                                              NearDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AwareDistance;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetingDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               includeHorde;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNumThreatsToPawn
struct ABendAIManager_GetNumThreatsToPawn_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NearDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AwareDistance;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetingDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               includeHorde;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNumNearPlayer
struct ABendAIManager_GetNumNearPlayer_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNumAwareOfPlayerWithinRadius
struct ABendAIManager_GetNumAwareOfPlayerWithinRadius_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AndTargeting;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNextDebugNpc
struct ABendAIManager_GetNextDebugNpc_Params
{
	class ABendAIController*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetNextByDirection
struct ABendAIManager_GetNextByDirection_Params
{
	class ABendPawn*                                   pPawnTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RightOfTarget;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDist;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetFurthestBikeThreatToPlayer
struct ABendAIManager_GetFurthestBikeThreatToPlayer_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetFurthestAwareOfPlayer
struct ABendAIManager_GetFurthestAwareOfPlayer_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetFactionValue
struct ABendAIManager_GetFactionValue_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        TheirFaction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetFactionLevel
struct ABendAIManager_GetFactionLevel_Params
{
	class ABendPawn*                                   DoesThisGuy;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   TrustThisGuy;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFactionLevel>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetEnemiesWithinRadius
struct ABendAIManager_GetEnemiesWithinRadius_Params
{
	float                                              Dist;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAIManager.GetDebugNpc
struct ABendAIManager_GetDebugNpc_Params
{
	class ABendAIController*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetDebugAwarenessCalloutsEnabled
struct ABendAIManager_GetDebugAwarenessCalloutsEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetConflictTracker
struct ABendAIManager_GetConflictTracker_Params
{
	class UBendConflictTracker*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestToPlayerOfFaction
struct ABendAIManager_GetClosestToPlayerOfFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDist;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestToPlayer
struct ABendAIManager_GetClosestToPlayer_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestToLocation
struct ABendAIManager_GetClosestToLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDist;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestOnScreen
struct ABendAIManager_GetClosestOnScreen_Params
{
	float                                              MaxDist;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestHumanToPlayer
struct ABendAIManager_GetClosestHumanToPlayer_Params
{
	float                                              MaxDist;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetClosestDistToPlayer
struct ABendAIManager_GetClosestDistToPlayer_Params
{
	bool                                               includeHorde;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetBaseConfidence
struct ABendAIManager_GetBaseConfidence_Params
{
	TEnumAsByte<EAIFactionType>                        MyFaction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   TheirPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.GetAIManager
struct ABendAIManager_GetAIManager_Params
{
	class ABendAIManager*                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.EvaluateUseConditions
struct ABendAIManager_EvaluateUseConditions_Params
{
	TArray<TAssetPtr<class UClass>>                    UseConditions;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                     CondOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bResetConditions;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.EvaluateUseCondition
struct ABendAIManager_EvaluateUseCondition_Params
{
	TAssetPtr<class UClass>                            UseConditionClass;                                        // (Parm)
	class UObject*                                     CondOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bResetConditions;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.DistSinceStealthBroken
struct ABendAIManager_DistSinceStealthBroken_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.DebugEndScripting
struct ABendAIManager_DebugEndScripting_Params
{
};

// Function BendGame.BendAIManager.ClearTargetOverridesByFactions
struct ABendAIManager_ClearTargetOverridesByFactions_Params
{
	TArray<TEnumAsByte<EAIFactionType>>                FactionsToOverride;                                       // (Parm, ZeroConstructor)
};

// Function BendGame.BendAIManager.ClearDebugNpc
struct ABendAIManager_ClearDebugNpc_Params
{
};

// Function BendGame.BendAIManager.CheckDebugNPCs
struct ABendAIManager_CheckDebugNPCs_Params
{
	struct FVector                                     pos;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AimDir;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIManager.CanScreamAtLocation
struct ABendAIManager_CanScreamAtLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.BreakStealthMode
struct ABendAIManager_BreakStealthMode_Params
{
};

// Function BendGame.BendAIManager.AreAwarenessCalloutsEnabled
struct ABendAIManager_AreAwarenessCalloutsEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyNearPlayer
struct ABendAIManager_AreAnyNearPlayer_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyMotorcycleRidersAwareOfPlayer
struct ABendAIManager_AreAnyMotorcycleRidersAwareOfPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyLOSToPlayer
struct ABendAIManager_AreAnyLOSToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyHumansRecentLOSToPlayer
struct ABendAIManager_AreAnyHumansRecentLOSToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyHumansLOSToPlayer
struct ABendAIManager_AreAnyHumansLOSToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyBikeThreatsAwareOfPlayer
struct ABendAIManager_AreAnyBikeThreatsAwareOfPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyAwareOfPlayer
struct ABendAIManager_AreAnyAwareOfPlayer_Params
{
	bool                                               AndTargeting;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIManager.AreAnyAwareLOSToPlayer
struct ABendAIManager_AreAnyAwareLOSToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIConfidenceComponent.SetConfidenceLevel
struct UBendAIConfidenceComponent_SetConfidenceLevel_Params
{
	TEnumAsByte<EConfidenceType>                       NewConfidenceLevel;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIConfidenceComponent.OnPawnDamageCallback
struct UBendAIConfidenceComponent_OnPawnDamageCallback_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIConfidenceComponent.GetConfidenceLevel
struct UBendAIConfidenceComponent_GetConfidenceLevel_Params
{
	TEnumAsByte<EConfidenceType>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.UsingTreeCover
struct ABendAIController_UsingTreeCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.UseSecondaryDefendZone
struct ABendAIController_UseSecondaryDefendZone_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.UseNavRotation
struct ABendAIController_UseNavRotation_Params
{
	struct FBendNavRotationParams                      Params;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendAIController.UseCombatCenterLocation
struct ABendAIController_UseCombatCenterLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.UpdateStrafing
struct ABendAIController_UpdateStrafing_Params
{
};

// Function BendGame.BendAIController.UpdateDefendZoneCenter
struct ABendAIController_UpdateDefendZoneCenter_Params
{
	struct FVector                                     newCenter;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.UpdateBrightness
struct ABendAIController_UpdateBrightness_Params
{
	float                                              Brightness;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.UnregisterWithTarget
struct ABendAIController_UnregisterWithTarget_Params
{
	bool                                               IsRanged;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.TurnInPlaceToPoint
struct ABendAIController_TurnInPlaceToPoint_Params
{
	struct FVector                                     TargetPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.TurnInPlaceToDirection
struct ABendAIController_TurnInPlaceToDirection_Params
{
	struct FVector                                     newDir;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.TurnInPlaceToAngle
struct ABendAIController_TurnInPlaceToAngle_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.TurnInPlaceByAngle
struct ABendAIController_TurnInPlaceByAngle_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ThrowThrowableAtPoint
struct ABendAIController_ThrowThrowableAtPoint_Params
{
	struct FVector                                     TargetPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetArcHeight;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ThrowThrowableAtFireFocus
struct ABendAIController_ThrowThrowableAtFireFocus_Params
{
};

// Function BendGame.BendAIController.TargetedByWeapon
struct ABendAIController_TargetedByWeapon_Params
{
	class ABendPawn*                                   pWeaponOwner;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.StopNavRotation
struct ABendAIController_StopNavRotation_Params
{
};

// Function BendGame.BendAIController.StopMoveFromBP
struct ABendAIController_StopMoveFromBP_Params
{
	struct FString                                     Reason;                                                   // (Parm, ZeroConstructor)
	bool                                               skipped;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.StopFire
struct ABendAIController_StopFire_Params
{
};

// Function BendGame.BendAIController.StopBehaviorTree
struct ABendAIController_StopBehaviorTree_Params
{
};

// Function BendGame.BendAIController.StopAiming
struct ABendAIController_StopAiming_Params
{
};

// Function BendGame.BendAIController.StartNewBT
struct ABendAIController_StartNewBT_Params
{
	class UBehaviorTree*                               newTree;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.Spawned
struct ABendAIController_Spawned_Params
{
};

// Function BendGame.BendAIController.ShouldUpdateAwarenessCallout
struct ABendAIController_ShouldUpdateAwarenessCallout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.SetThreatLocation
struct ABendAIController_SetThreatLocation_Params
{
	struct FVector                                     InThreatLocation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAIController.SetScriptingMode
struct ABendAIController_SetScriptingMode_Params
{
	TEnumAsByte<EBendAIScriptingMode>                  ScriptingMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetScriptedPose
struct ABendAIController_SetScriptedPose_Params
{
	TEnumAsByte<ETensePose>                            poseType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetPawn
struct ABendAIController_SetPawn_Params
{
	class APawn*                                       InPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetNextPOI
struct ABendAIController_SetNextPOI_Params
{
	class ABendPOI*                                    POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetMoveSpeed
struct ABendAIController_SetMoveSpeed_Params
{
	TEnumAsByte<EAIMoveSpeed>                          moveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.SetMoveFocusToLastSeen
struct ABendAIController_SetMoveFocusToLastSeen_Params
{
};

// Function BendGame.BendAIController.SetMoveFocusPos
struct ABendAIController_SetMoveFocusPos_Params
{
	struct FVector                                     pos;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetMoveFocus
struct ABendAIController_SetMoveFocus_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetLevel
struct ABendAIController_SetLevel_Params
{
	int                                                MinLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Variance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Brightness;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetFleeing
struct ABendAIController_SetFleeing_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetFireFocus
struct ABendAIController_SetFireFocus_Params
{
	class AActor*                                      FireFocus;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetFemaleAIVoiceType
struct ABendAIController_SetFemaleAIVoiceType_Params
{
	TEnumAsByte<EeNPCVoiceTypes>                       eAIType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetFactionValueOfPawn
struct ABendAIController_SetFactionValueOfPawn_Params
{
	class ABendPawn*                                   targetPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetDocileMode
struct ABendAIController_SetDocileMode_Params
{
	bool                                               Docile;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               stopMove;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               stopMontage;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetDefendZoneVolume
struct ABendAIController_SetDefendZoneVolume_Params
{
	class AVolume*                                     NewVolume;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetDefendZone
struct ABendAIController_SetDefendZone_Params
{
	struct FDefendZoneInfo                             newDefendZoneInfo;                                        // (Parm)
};

// Function BendGame.BendAIController.SetCrowdSimulationEnabled
struct ABendAIController_SetCrowdSimulationEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetCombatCenterLocation
struct ABendAIController_SetCombatCenterLocation_Params
{
	struct FVector                                     vCombatCenterLocation;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetCanBeMarkedInBinoculars
struct ABendAIController_SetCanBeMarkedInBinoculars_Params
{
	bool                                               CanBeMarked;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetAwarenessOfTarget
struct ABendAIController_SetAwarenessOfTarget_Params
{
	float                                              AwarenessLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetAwarenessOfPawn
struct ABendAIController_SetAwarenessOfPawn_Params
{
	class ABendPawn*                                   awarePawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AwarenessLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetAttackWhileScripted
struct ABendAIController_SetAttackWhileScripted_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetArchetype
struct ABendAIController_SetArchetype_Params
{
	class UBendArchetypeDataBase*                      Archetype;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetAIVoiceType
struct ABendAIController_SetAIVoiceType_Params
{
	TEnumAsByte<EeNPCVoiceTypes>                       eAIType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SetAIFactionType
struct ABendAIController_SetAIFactionType_Params
{
	TEnumAsByte<EAIFactionType>                        eAIType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.SelectPOI
struct ABendAIController_SelectPOI_Params
{
	TArray<class ABendPOI*>                            AvailablePOIs;                                            // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     POIType;                                                  // (Parm, ZeroConstructor)
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.ScriptedMoveToGrapple
struct ABendAIController_ScriptedMoveToGrapple_Params
{
	class ABendPawn*                                   GrappleTarget;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnGrappleStarted;                                         // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.ScriptedMeleeAttack
struct ABendAIController_ScriptedMeleeAttack_Params
{
	class ABendPawn*                                   AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSuccess;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.SawPawnHide
struct ABendAIController_SawPawnHide_Params
{
	class ABendPawn*                                   P;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RunOverrideBehaviorTree
struct ABendAIController_RunOverrideBehaviorTree_Params
{
	class UBehaviorTree*                               behavior;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ResetScriptedPose
struct ABendAIController_ResetScriptedPose_Params
{
};

// Function BendGame.BendAIController.ResetForcedAwareness
struct ABendAIController_ResetForcedAwareness_Params
{
};

// Function BendGame.BendAIController.ResetDetection
struct ABendAIController_ResetDetection_Params
{
	class ABendPawn*                                   dude;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ResetAllDetectedPawns
struct ABendAIController_ResetAllDetectedPawns_Params
{
	bool                                               sight;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               memory;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestUnawareVO
struct ABendAIController_RequestUnawareVO_Params
{
	TEnumAsByte<EUnawareAnim>                          animType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOToPlay;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestSemiAwareVO
struct ABendAIController_RequestSemiAwareVO_Params
{
	TEnumAsByte<ESemiAwareAnim>                        animType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOToPlay;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestSemiAwareAnim
struct ABendAIController_RequestSemiAwareAnim_Params
{
	TEnumAsByte<ESemiAwareAnim>                        animType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isBlendspace;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestNavToMoveFocus
struct ABendAIController_RequestNavToMoveFocus_Params
{
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              approachOuterRadius;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPartialPath;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPathFollowingRequestResult>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestNavToFireFocus
struct ABendAIController_RequestNavToFireFocus_Params
{
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              approachOuterRadius;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPartialPath;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPathFollowingRequestResult>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestNavToActor
struct ABendAIController_RequestNavToActor_Params
{
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              approachOuterRadius;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPartialPath;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPathFollowingRequestResult>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestInvestigateMoveFocus
struct ABendAIController_RequestInvestigateMoveFocus_Params
{
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPartialPath;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPathFollowingRequestResult>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestGrappleOnPawn
struct ABendAIController_RequestGrappleOnPawn_Params
{
	class ABendPawn*                                   targetPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Direct;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RequestGrappleOnFireFocus
struct ABendAIController_RequestGrappleOnFireFocus_Params
{
	bool                                               Direct;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.RepathToLastNav
struct ABendAIController_RepathToLastNav_Params
{
	bool                                               bEvenIfScripted;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.RegisterWithTarget
struct ABendAIController_RegisterWithTarget_Params
{
	bool                                               IsRanged;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OverrideSpawnImportance
struct ABendAIController_OverrideSpawnImportance_Params
{
	TEnumAsByte<ESpawnImportance>                      newImportance;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OverrideFlashlight
struct ABendAIController_OverrideFlashlight_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnWeaponAdded
struct ABendAIController_OnWeaponAdded_Params
{
	class ABendWeapon*                                 pWeapon;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnTrapSpawned
struct ABendAIController_OnTrapSpawned_Params
{
	class ABendTrap*                                   Trap;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnTrapRemoved
struct ABendAIController_OnTrapRemoved_Params
{
	class ABendTrap*                                   Trap;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnMeleeAttackEnded
struct ABendAIController_OnMeleeAttackEnded_Params
{
};

// Function BendGame.BendAIController.OnLeavePOIScripted
struct ABendAIController_OnLeavePOIScripted_Params
{
	class ABendPOI*                                    CompletedPOI;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           BendAIController;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnHitByFlashlight
struct ABendAIController_OnHitByFlashlight_Params
{
	class ABendPawn*                                   pLightOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.OnEnterCoverStarted
struct ABendAIController_OnEnterCoverStarted_Params
{
};

// Function BendGame.BendAIController.OnEnterCoverFinished
struct ABendAIController_OnEnterCoverFinished_Params
{
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.NotifyUsePOI
struct ABendAIController_NotifyUsePOI_Params
{
};

// Function BendGame.BendAIController.NotifyLeftPOI
struct ABendAIController_NotifyLeftPOI_Params
{
};

// Function BendGame.BendAIController.NavToMoveFocus
struct ABendAIController_NavToMoveFocus_Params
{
	float                                              Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              approachOuterRadius;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.MoveToScripted
struct ABendAIController_MoveToScripted_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSuccess;                                                // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.LeaveCover
struct ABendAIController_LeaveCover_Params
{
	bool                                               hasPath;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableCoverSlot;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.LeaveAmbush
struct ABendAIController_LeaveAmbush_Params
{
};

// Function BendGame.BendAIController.IsUsingNavRotation
struct ABendAIController_IsUsingNavRotation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsStrafing
struct ABendAIController_IsStrafing_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsShooting
struct ABendAIController_IsShooting_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsScripted
struct ABendAIController_IsScripted_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsRegisteredWithTarget
struct ABendAIController_IsRegisteredWithTarget_Params
{
	bool                                               IsRanged;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsPrimaryAttacker
struct ABendAIController_IsPrimaryAttacker_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsPointInDefendZone
struct ABendAIController_IsPointInDefendZone_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckOnlyPrimary;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsPassive
struct ABendAIController_IsPassive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsOverrideFlashlight
struct ABendAIController_IsOverrideFlashlight_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsMovingTowardLocation
struct ABendAIController_IsMovingTowardLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              MinDot;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsMoveCommand
struct ABendAIController_IsMoveCommand_Params
{
	TEnumAsByte<EBendAIScriptingCommand>               CommandType;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsInDefendZone
struct ABendAIController_IsInDefendZone_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsInCover
struct ABendAIController_IsInCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsInAGrapple
struct ABendAIController_IsInAGrapple_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsFrustrated
struct ABendAIController_IsFrustrated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsEnemy
struct ABendAIController_IsEnemy_Params
{
	class ABendPawn*                                   BendPawn;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsDocile
struct ABendAIController_IsDocile_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsDark
struct ABendAIController_IsDark_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsCurrentTargetEnemy
struct ABendAIController_IsCurrentTargetEnemy_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsCrowdSimulationEnabled
struct ABendAIController_IsCrowdSimulationEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsAnAnimal
struct ABendAIController_IsAnAnimal_Params
{
	class AController*                                 Controller;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsAlone
struct ABendAIController_IsAlone_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsAHuman
struct ABendAIController_IsAHuman_Params
{
	class AController*                                 Controller;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.IsAFreaker
struct ABendAIController_IsAFreaker_Params
{
	class AController*                                 Controller;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.InitializeAttributes
struct ABendAIController_InitializeAttributes_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HitByHighBeam
struct ABendAIController_HitByHighBeam_Params
{
	class ABendPawn*                                   pLightOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               blinding;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              lightAngle;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.HeardSoundBehind
struct ABendAIController_HeardSoundBehind_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HaveLosToPawn
struct ABendAIController_HaveLosToPawn_Params
{
	class ABendPawn*                                   P;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HaveLosToHorde
struct ABendAIController_HaveLosToHorde_Params
{
	float                                              timeSinceLos;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDist;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HaveLosToFireFocus
struct ABendAIController_HaveLosToFireFocus_Params
{
	bool                                               bUseWeaponInfo;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HasTeamRole
struct ABendAIController_HasTeamRole_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HasDetectedHorde
struct ABendAIController_HasDetectedHorde_Params
{
	bool                                               AllowFriendlyHorde;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HasDetectedBody
struct ABendAIController_HasDetectedBody_Params
{
	class ABendPawn*                                   Body;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.HandleCalloutOnZeroAwareness
struct ABendAIController_HandleCalloutOnZeroAwareness_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.HandleCalloutOnUnAware
struct ABendAIController_HandleCalloutOnUnAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ControllerPreviousAwareness;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.HandleCalloutOnSemiAware
struct ABendAIController_HandleCalloutOnSemiAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ControllerPreviousAwareness;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.HandleCalloutOnFirstDetection
struct ABendAIController_HandleCalloutOnFirstDetection_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.HandleCalloutOnAware
struct ABendAIController_HandleCalloutOnAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ControllerPreviousAwareness;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.GetXPAwarded
struct ABendAIController_GetXPAwarded_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetUnawarePercent
struct ABendAIController_GetUnawarePercent_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetThreatLocation
struct ABendAIController_GetThreatLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetTeamRoleName
struct ABendAIController_GetTeamRoleName_Params
{
	struct FName                                       ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetTargetAimAngle
struct ABendAIController_GetTargetAimAngle_Params
{
	bool                                               prediction;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetSpawnImportance
struct ABendAIController_GetSpawnImportance_Params
{
	TEnumAsByte<ESpawnImportance>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetSpawnBox
struct ABendAIController_GetSpawnBox_Params
{
	class ABendSpawnLocationBase*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetSensingComponent
struct ABendAIController_GetSensingComponent_Params
{
	class UBendSensingComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAIController.GetSemiAwarePercent
struct ABendAIController_GetSemiAwarePercent_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetRandomSequence
struct ABendAIController_GetRandomSequence_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetRandomMontage
struct ABendAIController_GetRandomMontage_Params
{
	TArray<class UAnimMontage*>                        pMontageList;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UAnimMontage*                                pMontageToIgnore;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetRandomBlendSpace
struct ABendAIController_GetRandomBlendSpace_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetRandomAction
struct ABendAIController_GetRandomAction_Params
{
	TArray<struct FBendActionData>                     pActionList;                                              // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FBendActionData                             pActionToIgnore;                                          // (Parm, OutParm, ReferenceParm)
	struct FBendActionData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAIController.GetPreviousPOI
struct ABendAIController_GetPreviousPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetPawnBodyType
struct ABendAIController_GetPawnBodyType_Params
{
	TEnumAsByte<EBendPawnBodyType>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetOverrideFlashlightValue
struct ABendAIController_GetOverrideFlashlightValue_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetNumDetectedByFaction
struct ABendAIController_GetNumDetectedByFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetNextPOI
struct ABendAIController_GetNextPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetMoveFocusPos
struct ABendAIController_GetMoveFocusPos_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetMoveFocusDist2
struct ABendAIController_GetMoveFocusDist2_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetMoveFocusDist
struct ABendAIController_GetMoveFocusDist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetLevel
struct ABendAIController_GetLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetLeanDirection
struct ABendAIController_GetLeanDirection_Params
{
	TEnumAsByte<ECoverLeanDirection>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetLastSeenPos
struct ABendAIController_GetLastSeenPos_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetLastFireFocusFaction
struct ABendAIController_GetLastFireFocusFaction_Params
{
	TEnumAsByte<EAIFactionType>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetHighestThreat
struct ABendAIController_GetHighestThreat_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetGoalVelocity
struct ABendAIController_GetGoalVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetGoalDistance
struct ABendAIController_GetGoalDistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetFireFocusForwardVectorDotProd
struct ABendAIController_GetFireFocusForwardVectorDotProd_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetFireFocusDist2
struct ABendAIController_GetFireFocusDist2_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetFireFocusDist
struct ABendAIController_GetFireFocusDist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetFireFocusConst
struct ABendAIController_GetFireFocusConst_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetFireFocus
struct ABendAIController_GetFireFocus_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDistToPawn
struct ABendAIController_GetDistToPawn_Params
{
	class ABendPawn*                                   P;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDistanceToClosestThreat
struct ABendAIController_GetDistanceToClosestThreat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDistanceToClosestTarget
struct ABendAIController_GetDistanceToClosestTarget_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDistanceToClosestOfFaction
struct ABendAIController_GetDistanceToClosestOfFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDistanceToClosestFriend
struct ABendAIController_GetDistanceToClosestFriend_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDetectedPawn
struct ABendAIController_GetDetectedPawn_Params
{
	struct FDetectedPawn                               ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAIController.GetDefendZoneVolume
struct ABendAIController_GetDefendZoneVolume_Params
{
	class AVolume*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDefendZoneCenter
struct ABendAIController_GetDefendZoneCenter_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDefendZoneBinding
struct ABendAIController_GetDefendZoneBinding_Params
{
	bool                                               CheckOnlyPrimary;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDefendZoneBindingStrength>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetDefendZone
struct ABendAIController_GetDefendZone_Params
{
	struct FDefendZoneInfo                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAIController.GetDamage
struct ABendAIController_GetDamage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCurrentTargetPawn
struct ABendAIController_GetCurrentTargetPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCurrentTargetLocation
struct ABendAIController_GetCurrentTargetLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCurrentTargetDist
struct ABendAIController_GetCurrentTargetDist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCurrentPOI
struct ABendAIController_GetCurrentPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCurrentArchetype
struct ABendAIController_GetCurrentArchetype_Params
{
	class UBendArchetypeDataBase*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetConfidenceComponent
struct ABendAIController_GetConfidenceComponent_Params
{
	class UBendAIConfidenceComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCombatSlotDist2
struct ABendAIController_GetCombatSlotDist2_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCombatSlotDist
struct ABendAIController_GetCombatSlotDist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCombatRing
struct ABendAIController_GetCombatRing_Params
{
	struct FMeleeRingData                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAIController.GetCombatLocationForTarget
struct ABendAIController_GetCombatLocationForTarget_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCombatDistance
struct ABendAIController_GetCombatDistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetCombatCenterLocation
struct ABendAIController_GetCombatCenterLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetClosestPointWithinDefendZone
struct ABendAIController_GetClosestPointWithinDefendZone_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckOnlyPrimary;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetClosestPointToPawnWithinDefendZone
struct ABendAIController_GetClosestPointToPawnWithinDefendZone_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBrightness
struct ABendAIController_GetBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBlindedTime
struct ABendAIController_GetBlindedTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBikeChaseLocationForTarget
struct ABendAIController_GetBikeChaseLocationForTarget_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBendPawn
struct ABendAIController_GetBendPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBendAIPawn
struct ABendAIController_GetBendAIPawn_Params
{
	class ABendAIPawn*                                 ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetBaseLevel
struct ABendAIController_GetBaseLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAwarenessValue
struct ABendAIController_GetAwarenessValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAwarenessOfPawn
struct ABendAIController_GetAwarenessOfPawn_Params
{
	class ABendPawn*                                   PawnInQuestion;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAwareness
struct ABendAIController_GetAwareness_Params
{
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAnimVariationData
struct ABendAIController_GetAnimVariationData_Params
{
	struct FName                                       AnimGroupName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAnimVariationData*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAnimMessenger
struct ABendAIController_GetAnimMessenger_Params
{
	class UBendAnimBlueprintMessenger*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.GetAIFactionType
struct ABendAIController_GetAIFactionType_Params
{
	TEnumAsByte<EAIFactionType>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceUsePOI
struct ABendAIController_ForceUsePOI_Params
{
	class ABendPOI*                                    POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               skipTests;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceUnawareForTime
struct ABendAIController_ForceUnawareForTime_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceUnaware
struct ABendAIController_ForceUnaware_Params
{
};

// Function BendGame.BendAIController.ForceStaySemiAware
struct ABendAIController_ForceStaySemiAware_Params
{
};

// Function BendGame.BendAIController.ForceStayAware
struct ABendAIController_ForceStayAware_Params
{
};

// Function BendGame.BendAIController.ForceSemiAwareForTime
struct ABendAIController_ForceSemiAwareForTime_Params
{
	struct FVector                                     semiAwarePos;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceSemiAware
struct ABendAIController_ForceSemiAware_Params
{
	struct FVector                                     semiAwarePos;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceReleasePOI
struct ABendAIController_ForceReleasePOI_Params
{
};

// Function BendGame.BendAIController.ForceOrientToMovement
struct ABendAIController_ForceOrientToMovement_Params
{
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceAwareUntilLos
struct ABendAIController_ForceAwareUntilLos_Params
{
	class AActor*                                      forceFocus;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceAwareForTime
struct ABendAIController_ForceAwareForTime_Params
{
	class AActor*                                      forceFocus;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ForceAware
struct ABendAIController_ForceAware_Params
{
	class AActor*                                      forceFocus;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.FireNumRounds
struct ABendAIController_FireNumRounds_Params
{
	int                                                numRounds;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.FireForTime
struct ABendAIController_FireForTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.FinishOverrideBehavior
struct ABendAIController_FinishOverrideBehavior_Params
{
};

// Function BendGame.BendAIController.FinishedLoadingBT
struct ABendAIController_FinishedLoadingBT_Params
{
};

// Function BendGame.BendAIController.FinishedLoadingArchetypeData
struct ABendAIController_FinishedLoadingArchetypeData_Params
{
};

// Function BendGame.BendAIController.FindPOIByType
struct ABendAIController_FindPOIByType_Params
{
	struct FString                                     POIType;                                                  // (Parm, ZeroConstructor)
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.FindPOIByDefendZone
struct ABendAIController_FindPOIByDefendZone_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.FindPOI
struct ABendAIController_FindPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.FindDetectedPawn
struct ABendAIController_FindDetectedPawn_Params
{
	class ABendPawn*                                   FindPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FDetectedPawn                               ReturnValue;                                              // (ConstParm, Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAIController.EndScriptingMode
struct ABendAIController_EndScriptingMode_Params
{
	bool                                               ResetScriptingPose;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.EnableUnmarkedAwarenessCallouts
struct ABendAIController_EnableUnmarkedAwarenessCallouts_Params
{
};

// Function BendGame.BendAIController.DrawWeapon
struct ABendAIController_DrawWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.DisableUnmarkedAwarenessCallouts
struct ABendAIController_DisableUnmarkedAwarenessCallouts_Params
{
};

// Function BendGame.BendAIController.DisableForcedAwareness
struct ABendAIController_DisableForcedAwareness_Params
{
};

// Function BendGame.BendAIController.DestroyTargetAttractor
struct ABendAIController_DestroyTargetAttractor_Params
{
};

// Function BendGame.BendAIController.Despawn
struct ABendAIController_Despawn_Params
{
	bool                                               notifyDespawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ConvertAwarenessToEnum
struct ABendAIController_ConvertAwarenessToEnum_Params
{
	float                                              AwarenessLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.CompleteTeamRole
struct ABendAIController_CompleteTeamRole_Params
{
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ClearTeamRole
struct ABendAIController_ClearTeamRole_Params
{
	class UObject*                                     Clearer;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.ClearCombatCenterLocation
struct ABendAIController_ClearCombatCenterLocation_Params
{
};

// Function BendGame.BendAIController.ClampMoveSpeed
struct ABendAIController_ClampMoveSpeed_Params
{
	float                                              MoveSpeed;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.CanMeleeAttack
struct ABendAIController_CanMeleeAttack_Params
{
	class ABendPawn*                                   AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowInterruptingAttacker;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.CanIgnoreDefendZone
struct ABendAIController_CanIgnoreDefendZone_Params
{
	bool                                               forceRespectHardDZ;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.CanGrappleAttack
struct ABendAIController_CanGrappleAttack_Params
{
	class ABendPawn*                                   AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.CancelScriptingCommand
struct ABendAIController_CancelScriptingCommand_Params
{
};

// Function BendGame.BendAIController.CancelOverrideFlashlight
struct ABendAIController_CancelOverrideFlashlight_Params
{
};

// Function BendGame.BendAIController.AreAwarenessCalloutsEnabled
struct ABendAIController_AreAwarenessCalloutsEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.AnimNotify_MeleeDamage
struct ABendAIController_AnimNotify_MeleeDamage_Params
{
	float                                              DamagePercent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.AISetAmbush
struct ABendAIController_AISetAmbush_Params
{
	struct FVector                                     ambushPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               useClosestSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.AimAtPoint
struct ABendAIController_AimAtPoint_Params
{
	struct FVector                                     TargetPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetArcHeight;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.AimAtFireFocus
struct ABendAIController_AimAtFireFocus_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIController.AddWeapon
struct ABendAIController_AddWeapon_Params
{
	TEnumAsByte<EInventoryWeaponID>                    NPCWeaponID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DontEquip;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.AddThrowable
struct ABendAIController_AddThrowable_Params
{
	TEnumAsByte<EInventoryWeaponID>                    NPCWeaponID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIController.AddOrUpdateLocationProxiesMap_Reference
struct ABendAIController_AddOrUpdateLocationProxiesMap_Reference_Params
{
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendLocationReference>              LocationReferences;                                       // (Parm, ZeroConstructor)
};

// Function BendGame.BendAIController.AddOrUpdateLocationProxiesMap
struct ABendAIController_AddOrUpdateLocationProxiesMap_Params
{
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendLocationHandle>                 Handles;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.BendAIController.AbortOneShot
struct ABendAIController_AbortOneShot_Params
{
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUseCondition.Reset
struct UBendUseCondition_Reset_Params
{
};

// Function BendGame.BendUseCondition.OnEvaluationComplete
struct UBendUseCondition_OnEvaluationComplete_Params
{
	bool                                               bEvaluationSuccess;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUseCondition.GetCanUse
struct UBendUseCondition_GetCanUse_Params
{
	class UObject*                                     CondOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceTest;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUseCondition.CanUse
struct UBendUseCondition_CanUse_Params
{
	class UObject*                                     CondOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AnimalMeleeRing.UpdateMeleeLocationList
struct UAnimalMeleeRing_UpdateMeleeLocationList_Params
{
};

// Function BendGame.AnimalMeleeRing.TakeClosestMeleeLocation
struct UAnimalMeleeRing_TakeClosestMeleeLocation_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.AnimalMeleeRing.LeaveMeleeLocation
struct UAnimalMeleeRing_LeaveMeleeLocation_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.TryTaunt
struct ABendAnimalController_TryTaunt_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.TryDodge
struct ABendAnimalController_TryDodge_Params
{
	class ABendPawn*                                   AttackerPawn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.TriggerLurking
struct ABendAnimalController_TriggerLurking_Params
{
};

// Function BendGame.BendAnimalController.TriggerFlee
struct ABendAnimalController_TriggerFlee_Params
{
};

// Function BendGame.BendAnimalController.ShouldBeSleeping
struct ABendAnimalController_ShouldBeSleeping_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.SetLurking
struct ABendAnimalController_SetLurking_Params
{
	bool                                               bLurk;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.SetFrenzyTrigger
struct ABendAnimalController_SetFrenzyTrigger_Params
{
	class UShapeComponent*                             ShapeComponent;                                           // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAnimalController.SetCanLookAtTarget
struct ABendAnimalController_SetCanLookAtTarget_Params
{
	bool                                               bLookAtTarget;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.ResetFrustrated
struct ABendAnimalController_ResetFrustrated_Params
{
};

// Function BendGame.BendAnimalController.PositionToReachableLocation
struct ABendAnimalController_PositionToReachableLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Extents;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReachableLocation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnTargetChanged
struct ABendAnimalController_OnTargetChanged_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnTakeDamage
struct ABendAnimalController_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnSuccessfulAttack
struct ABendAnimalController_OnSuccessfulAttack_Params
{
};

// Function BendGame.BendAnimalController.OnSquadMemberKilled
struct ABendAnimalController_OnSquadMemberKilled_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnJoinWarningGroup
struct ABendAnimalController_OnJoinWarningGroup_Params
{
};

// Function BendGame.BendAnimalController.OnImpactSpawned
struct ABendAnimalController_OnImpactSpawned_Params
{
	struct FString                                     ImpactName;                                               // (Parm, ZeroConstructor)
	struct FVector                                     ImpactLocation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnFrenzyShapeEndOverlap
struct ABendAnimalController_OnFrenzyShapeEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.OnFrenzyShapeBeginOverlap
struct ABendAnimalController_OnFrenzyShapeBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendAnimalController.LookAtRotation
struct ABendAnimalController_LookAtRotation_Params
{
	struct FRotator                                    TargetRotation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalController.IsScared
struct ABendAnimalController_IsScared_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.IsLurking
struct ABendAnimalController_IsLurking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.IsFrenzied
struct ABendAnimalController_IsFrenzied_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.IsFreakerAnimal
struct ABendAnimalController_IsFreakerAnimal_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.IsBearOrRager
struct ABendAnimalController_IsBearOrRager_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.HasReached
struct ABendAnimalController_HasReached_Params
{
	struct FVector                                     TestPoint;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              AcceptanceRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bExactSpot;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.HasPathToFireFocus
struct ABendAnimalController_HasPathToFireFocus_Params
{
	bool                                               AllowNavLinks;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.GetWarningLocationForTarget
struct ABendAnimalController_GetWarningLocationForTarget_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.GetWarningGroupComponent
struct ABendAnimalController_GetWarningGroupComponent_Params
{
	class UBendAnimalWarningGroupComponent*            ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAnimalController.GetTargetRotation
struct ABendAnimalController_GetTargetRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.GetCurrentConfidenceFactor
struct ABendAnimalController_GetCurrentConfidenceFactor_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.GetBendAnimalPawn
struct ABendAnimalController_GetBendAnimalPawn_Params
{
	class ABendAnimalPawn*                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalController.AddTemporaryConfidence
struct ABendAnimalController_AddTemporaryConfidence_Params
{
	float                                              ToAdd;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AnimNotifyState_AttachActor.OnParentDestroyedHandler
struct UAnimNotifyState_AttachActor_OnParentDestroyedHandler_Params
{
	class AActor*                                      OwningActor;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.AsyncTaskLoadTexture.AsyncLoadTexure
struct UAsyncTaskLoadTexture_AsyncLoadTexure_Params
{
	TAssetPtr<class UTexture2D>                        TextureAsset;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	class UAsyncTaskLoadTexture*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.StopShareVideoRecording
struct UUIBlueprintLibrary_StopShareVideoRecording_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.SpawnTagPickup
struct UUIBlueprintLibrary_SpawnTagPickup_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FGameplayTag                                Tag;                                                      // (Parm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlueprint*                                  BlueprintClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendInventoryPickup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.SpawnPickup
struct UUIBlueprintLibrary_SpawnPickup_Params
{
	class UWorld*                                      pWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FInventoryIDDetails                         ItemDetails;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	class UBlueprint*                                  BlueprintClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendInventoryPickup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.SetGameHudEnabled
struct UUIBlueprintLibrary_SetGameHudEnabled_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.ReleaseSlateInputInteract
struct UUIBlueprintLibrary_ReleaseSlateInputInteract_Params
{
	class USlateInputInteract*                         InputInteract;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.IsShareVideoRecording
struct UUIBlueprintLibrary_IsShareVideoRecording_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.IsHDRSupported
struct UUIBlueprintLibrary_IsHDRSupported_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.GetSystemResolution
struct UUIBlueprintLibrary_GetSystemResolution_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ResX;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ResY;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                DeviceIndex;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                RefreshRateFraction0;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                RefreshRateFraction1;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsFullscreen;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsWindowed;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               UseHDR;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.GetInteractButtonActionName
struct UUIBlueprintLibrary_GetInteractButtonActionName_Params
{
	TEnumAsByte<EInteractButton>                       InteractButton;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.GetDisplayInfo
struct UUIBlueprintLibrary_GetDisplayInfo_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FDisplayMetricsInfo>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.UIBlueprintLibrary.GetDisplayCapabilitiy
struct UUIBlueprintLibrary_GetDisplayCapabilitiy_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                InIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FDisplayMetricsCapabilility                 outCapability;                                            // (Parm, OutParm)
};

// Function BendGame.UIBlueprintLibrary.GetBendHUD
struct UUIBlueprintLibrary_GetBendHUD_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendHUD*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.DropTableManager
struct UUIBlueprintLibrary_DropTableManager_Params
{
	class UInventoryDropTableManager*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIBlueprintLibrary.CreateSlateInputInteract
struct UUIBlueprintLibrary_CreateSlateInputInteract_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class USlateInputInteract*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUserWidget.PushBendInputComponent
struct UBendUserWidget_PushBendInputComponent_Params
{
};

// Function BendGame.BendUserWidget.PopBendInputComponent
struct UBendUserWidget_PopBendInputComponent_Params
{
};

// Function BendGame.BendUserWidget.OnUpReleased
struct UBendUserWidget_OnUpReleased_Params
{
};

// Function BendGame.BendUserWidget.OnUpPressed
struct UBendUserWidget_OnUpPressed_Params
{
};

// Function BendGame.BendUserWidget.OnTutorialClosedReleased
struct UBendUserWidget_OnTutorialClosedReleased_Params
{
};

// Function BendGame.BendUserWidget.OnTutorialClosedPressed
struct UBendUserWidget_OnTutorialClosedPressed_Params
{
};

// Function BendGame.BendUserWidget.OnTabPreviousReleased
struct UBendUserWidget_OnTabPreviousReleased_Params
{
};

// Function BendGame.BendUserWidget.OnTabPreviousPressed
struct UBendUserWidget_OnTabPreviousPressed_Params
{
};

// Function BendGame.BendUserWidget.OnTabNextReleased
struct UBendUserWidget_OnTabNextReleased_Params
{
};

// Function BendGame.BendUserWidget.OnTabNextPressed
struct UBendUserWidget_OnTabNextPressed_Params
{
};

// Function BendGame.BendUserWidget.OnSelect2Released
struct UBendUserWidget_OnSelect2Released_Params
{
};

// Function BendGame.BendUserWidget.OnSelect2Pressed
struct UBendUserWidget_OnSelect2Pressed_Params
{
};

// Function BendGame.BendUserWidget.OnSelect1Released
struct UBendUserWidget_OnSelect1Released_Params
{
};

// Function BendGame.BendUserWidget.OnSelect1Pressed
struct UBendUserWidget_OnSelect1Pressed_Params
{
};

// Function BendGame.BendUserWidget.OnRightReleased
struct UBendUserWidget_OnRightReleased_Params
{
};

// Function BendGame.BendUserWidget.OnRightPressed
struct UBendUserWidget_OnRightPressed_Params
{
};

// Function BendGame.BendUserWidget.OnPagePreviousReleased
struct UBendUserWidget_OnPagePreviousReleased_Params
{
};

// Function BendGame.BendUserWidget.OnPagePreviousPressed
struct UBendUserWidget_OnPagePreviousPressed_Params
{
};

// Function BendGame.BendUserWidget.OnPageNextReleased
struct UBendUserWidget_OnPageNextReleased_Params
{
};

// Function BendGame.BendUserWidget.OnPageNextPressed
struct UBendUserWidget_OnPageNextPressed_Params
{
};

// Function BendGame.BendUserWidget.OnLeftReleased
struct UBendUserWidget_OnLeftReleased_Params
{
};

// Function BendGame.BendUserWidget.OnLeftPressed
struct UBendUserWidget_OnLeftPressed_Params
{
};

// Function BendGame.BendUserWidget.OnDownReleased
struct UBendUserWidget_OnDownReleased_Params
{
};

// Function BendGame.BendUserWidget.OnDownPressed
struct UBendUserWidget_OnDownPressed_Params
{
};

// Function BendGame.BendUserWidget.OnConfirmReleased
struct UBendUserWidget_OnConfirmReleased_Params
{
};

// Function BendGame.BendUserWidget.OnConfirmPressed
struct UBendUserWidget_OnConfirmPressed_Params
{
};

// Function BendGame.BendUserWidget.OnCancelReleased
struct UBendUserWidget_OnCancelReleased_Params
{
};

// Function BendGame.BendUserWidget.OnCancelPressed
struct UBendUserWidget_OnCancelPressed_Params
{
};

// Function BendGame.BendUserWidget.ListenForInputActionAxis
struct UBendUserWidget_ListenForInputActionAxis_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bConsume;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Callback;                                                 // (Parm, ZeroConstructor)
	bool                                               bExecuteWhenPaused;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUserWidget.GetPlayerPawn
struct UBendUserWidget_GetPlayerPawn_Params
{
	class ABendPlayerPawn*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUserWidget.GetPlayerController
struct UBendUserWidget_GetPlayerController_Params
{
	class ABendPlayerController*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUserWidget.GetHud
struct UBendUserWidget_GetHud_Params
{
	class ABendHUD*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUserWidget.EndMouseCapture
struct UBendUserWidget_EndMouseCapture_Params
{
};

// Function BendGame.BendUserWidget.BeginMouseCapture
struct UBendUserWidget_BeginMouseCapture_Params
{
};

// Function BendGame.BaseMenuWidget.SpawnPopup
struct UBaseMenuWidget_SpawnPopup_Params
{
	class UPopupMenuWidget*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.SetPlayerControlEnabled
struct UBaseMenuWidget_SetPlayerControlEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.SetMenuVisible
struct UBaseMenuWidget_SetMenuVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.SetLatentTimer
struct UBaseMenuWidget_SetLatentTimer_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Looping;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.BaseMenuWidget.SetInputDisabled
struct UBaseMenuWidget_SetInputDisabled_Params
{
	bool                                               IsDisabled;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.SetHudVisible
struct UBaseMenuWidget_SetHudVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.SetGamePaused
struct UBaseMenuWidget_SetGamePaused_Params
{
	bool                                               Paused;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.RequestClose
struct UBaseMenuWidget_RequestClose_Params
{
	bool                                               ClosedByPhotoMode;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.RemoveLatentTimers
struct UBaseMenuWidget_RemoveLatentTimers_Params
{
};

// Function BendGame.BaseMenuWidget.ReadyToClose
struct UBaseMenuWidget_ReadyToClose_Params
{
};

// Function BendGame.BaseMenuWidget.PlaySoundName
struct UBaseMenuWidget_PlaySoundName_Params
{
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.PlaySFX
struct UBaseMenuWidget_PlaySFX_Params
{
	TEnumAsByte<EUISoundID>                            Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.OnWidgetClosed
struct UBaseMenuWidget_OnWidgetClosed_Params
{
};

// Function BendGame.BaseMenuWidget.OnSynchronizePropertiesEvent
struct UBaseMenuWidget_OnSynchronizePropertiesEvent_Params
{
};

// Function BendGame.BaseMenuWidget.OnSynchronizeProperties
struct UBaseMenuWidget_OnSynchronizeProperties_Params
{
};

// Function BendGame.BaseMenuWidget.IsPopupActive
struct UBaseMenuWidget_IsPopupActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.IsInputDisabled
struct UBaseMenuWidget_IsInputDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.GetNewIndex
struct UBaseMenuWidget_GetNewIndex_Params
{
	int                                                Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CurrentValue;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWrap;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.GetInventoryComponent
struct UBaseMenuWidget_GetInventoryComponent_Params
{
	class UPlayerInventoryComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BaseMenuWidget.ClearPopup
struct UBaseMenuWidget_ClearPopup_Params
{
};

// Function BendGame.HudMissionTimerWidget.SetTimerPaused
struct UHudMissionTimerWidget_SetTimerPaused_Params
{
	bool                                               IsPaused;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudMissionTimerWidget.SetPercentNew
struct UHudMissionTimerWidget_SetPercentNew_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudMissionTimerWidget.SetPercent
struct UHudMissionTimerWidget_SetPercent_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudMissionTimerWidget.ClearTimer
struct UHudMissionTimerWidget_ClearTimer_Params
{
};

// Function BendGame.HudMissionTimerWidget.ActivateTimer
struct UHudMissionTimerWidget_ActivateTimer_Params
{
	struct FHudMissionTimerDetails                     Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.PlayerExperienceLevel.GetReqExperienceForLevel
struct UPlayerExperienceLevel_GetReqExperienceForLevel_Params
{
	int                                                LevelToCheck;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.GetNextLevelExperience
struct UPlayerExperienceLevel_GetNextLevelExperience_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.GetMaxLevel
struct UPlayerExperienceLevel_GetMaxLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.GetLevel
struct UPlayerExperienceLevel_GetLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.GetCurrentPercentage
struct UPlayerExperienceLevel_GetCurrentPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.GetCurrentExperience
struct UPlayerExperienceLevel_GetCurrentExperience_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.DebugSetLevel
struct UPlayerExperienceLevel_DebugSetLevel_Params
{
	int                                                InLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.AdjustXPRewardForDifficulty
struct UPlayerExperienceLevel_AdjustXPRewardForDifficulty_Params
{
	int                                                InXP;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.AddXP
struct UPlayerExperienceLevel_AddXP_Params
{
	int                                                XPToAdd;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerExperienceLevel.AddCategoryXP
struct UPlayerExperienceLevel_AddCategoryXP_Params
{
	TEnumAsByte<EPlayerExperience>                     Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPToAdd;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreXPDifficultyScaling;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudWidget.UpdateHealthItemCount
struct UHudWidget_UpdateHealthItemCount_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.UpdateGetOffBikeInteractProgress
struct UHudWidget_UpdateGetOffBikeInteractProgress_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncFlashlight
struct UHudWidget_SyncFlashlight_Params
{
	bool                                               FlashlightOn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncBikeLight
struct UHudWidget_SyncBikeLight_Params
{
	bool                                               HighBeamsOn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncBikeFuel
struct UHudWidget_SyncBikeFuel_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncBikeDamage
struct UHudWidget_SyncBikeDamage_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncBikeBoost
struct UHudWidget_SyncBikeBoost_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SyncAmmoCount
struct UHudWidget_SyncAmmoCount_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Clip;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Spare;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetUnderArmorVisible
struct UHudWidget_SetUnderArmorVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetUnderArmorUILength
struct UHudWidget_SetUnderArmorUILength_Params
{
	int                                                BarLength;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetUnderArmorPercent
struct UHudWidget_SetUnderArmorPercent_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetHudVisible
struct UHudWidget_SetHudVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetCutSceneActive
struct UHudWidget_SetCutSceneActive_Params
{
	bool                                               Active;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetBikeHudVisible
struct UHudWidget_SetBikeHudVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetBikeHudInteractVisible
struct UHudWidget_SetBikeHudInteractVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.SetBikeGetOffInteractVisible
struct UHudWidget_SetBikeGetOffInteractVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.ResetHudVisibilityExclusions
struct UHudWidget_ResetHudVisibilityExclusions_Params
{
};

// Function BendGame.HudWidget.PostWidgetInitialize
struct UHudWidget_PostWidgetInitialize_Params
{
};

// Function BendGame.HudWidget.OnWeaponRepairedInternal
struct UHudWidget_OnWeaponRepairedInternal_Params
{
	class UInventoryWeaponItem*                        Weapon;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Cost;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnWeaponRepaired
struct UHudWidget_OnWeaponRepaired_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Health;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnWeaponHolstered
struct UHudWidget_OnWeaponHolstered_Params
{
	class ABendEquippableItem*                         Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnWeaponAimStop
struct UHudWidget_OnWeaponAimStop_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponType>                           WeaponType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasBinocularsEquipped;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnWeaponAimStart
struct UHudWidget_OnWeaponAimStart_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponType>                           WeaponType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HasBinocularsEquipped;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnStaminaModifed
struct UHudWidget_OnStaminaModifed_Params
{
	class UBendAttribute*                              Attribute;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnQuickSwap
struct UHudWidget_OnQuickSwap_Params
{
	int                                                InSlotIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnQuicksaveHold
struct UHudWidget_OnQuicksaveHold_Params
{
	float                                              HoldPercentage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Released;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerVisibility
struct UHudWidget_OnPlayerVisibility_Params
{
	float                                              PSVisibility;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerStealth
struct UHudWidget_OnPlayerStealth_Params
{
	bool                                               IsStealthed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerScope
struct UHudWidget_OnPlayerScope_Params
{
	class ABendWeapon*                                 EquippedWeapon;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsScoping;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerRespawnEvent
struct UHudWidget_OnPlayerRespawnEvent_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerRespawn
struct UHudWidget_OnPlayerRespawn_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerFire
struct UHudWidget_OnPlayerFire_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerEarnedCategoryXP
struct UHudWidget_OnPlayerEarnedCategoryXP_Params
{
	class UPlayerExperienceLevel*                      PlayerXP;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPlayerExperience>                     Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPEarned;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerAudibility
struct UHudWidget_OnPlayerAudibility_Params
{
	float                                              PSAudibility;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnPlayerAim
struct UHudWidget_OnPlayerAim_Params
{
	class ABendWeapon*                                 EquippedWeapon;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsAiming;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnNewPlayerStealth
struct UHudWidget_OnNewPlayerStealth_Params
{
	bool                                               DisplayMeter;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Alerted;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnHealthModified
struct UHudWidget_OnHealthModified_Params
{
	class UBendAttribute*                              Attribute;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnFocusModifed
struct UHudWidget_OnFocusModifed_Params
{
	class UBendAttribute*                              Attribute;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnEquipWeapon
struct UHudWidget_OnEquipWeapon_Params
{
	class ABendWeapon*                                 EquippedWeapon;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnDPadPressed
struct UHudWidget_OnDPadPressed_Params
{
	struct FVector2D                                   Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnConsumableHold
struct UHudWidget_OnConsumableHold_Params
{
	float                                              HoldPercentage;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Released;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.OnBinocularStart
struct UHudWidget_OnBinocularStart_Params
{
};

// Function BendGame.HudWidget.OnBinocularEnd
struct UHudWidget_OnBinocularEnd_Params
{
};

// Function BendGame.HudWidget.IsCompletionScreenActive
struct UHudWidget_IsCompletionScreenActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudWidget.EnableMissionFailMessage
struct UHudWidget_EnableMissionFailMessage_Params
{
	struct FText                                       NewtText;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               IsFullFailure;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.DisplayWeaponBackground
struct UHudWidget_DisplayWeaponBackground_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.DisableMissionFailMessage
struct UHudWidget_DisableMissionFailMessage_Params
{
};

// Function BendGame.HudWidget.ClearMissionTimer
struct UHudWidget_ClearMissionTimer_Params
{
};

// Function BendGame.HudWidget.AreTutorialsDisabled
struct UHudWidget_AreTutorialsDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudWidget.AddNotification
struct UHudWidget_AddNotification_Params
{
	struct FNotificationDetails                        Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.HudWidget.ActivateNewPlayerStealthHUD
struct UHudWidget_ActivateNewPlayerStealthHUD_Params
{
	bool                                               Activate;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWidget.ActivateMissionTimer
struct UHudWidget_ActivateMissionTimer_Params
{
	struct FHudMissionTimerDetails                     Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendSphereComponent.SetSphereRadius
struct UBendSphereComponent_SetSphereRadius_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.SetExtraExitRadius
struct UBendSphereComponent_SetExtraExitRadius_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.PlayerTeleported
struct UBendSphereComponent_PlayerTeleported_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.PlayerStoppedZenMode
struct UBendSphereComponent_PlayerStoppedZenMode_Params
{
	bool                                               InZenMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.PlayerRespawned
struct UBendSphereComponent_PlayerRespawned_Params
{
	class ABendPlayerController*                       Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.PlayerDied
struct UBendSphereComponent_PlayerDied_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponent.IsOverlapping
struct UBendSphereComponent_IsOverlapping_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMarker.SetVisible
struct AMapMarker_SetVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMarker.SetMarkerTexture
struct AMapMarker_SetMarkerTexture_Params
{
	class UTexture2D*                                  Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMarker.SetDesignWaypointWidget
struct AMapMarker_SetDesignWaypointWidget_Params
{
	class UChildActorComponent*                        InWidget;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetWaypointType
struct AMapWaypointMarker_SetWaypointType_Params
{
	TEnumAsByte<EObjectiveCategories>                  Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EObjectiveVisualType>                  VisualCategory;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetWaypointMarkerType
struct AMapWaypointMarker_SetWaypointMarkerType_Params
{
	TEnumAsByte<EMapWaypointMarker>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetPathVisible
struct AMapWaypointMarker_SetPathVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetPathAutoResetAtEnd
struct AMapWaypointMarker_SetPathAutoResetAtEnd_Params
{
	bool                                               bAutoResetAtPathEnd;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetNavPathColor
struct AMapWaypointMarker_SetNavPathColor_Params
{
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetAllowPathReRoute
struct AMapWaypointMarker_SetAllowPathReRoute_Params
{
	bool                                               bAllowReRoute;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.SetAllowNavMeshRouting
struct AMapWaypointMarker_SetAllowNavMeshRouting_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.PathToLocation
struct AMapWaypointMarker_PathToLocation_Params
{
	struct FVector                                     StartPosition;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UMiniMapLocationComponent*                   EndLocation;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.OnVisibilityChanged
struct AMapWaypointMarker_OnVisibilityChanged_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.OnTimerEvent
struct AMapWaypointMarker_OnTimerEvent_Params
{
};

// Function BendGame.MapWaypointMarker.OnSphereBeginOverlap
struct AMapWaypointMarker_OnSphereBeginOverlap_Params
{
};

// Function BendGame.MapWaypointMarker.OnMissionBegin
struct AMapWaypointMarker_OnMissionBegin_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.IsNavMeshRoutingAllowed
struct AMapWaypointMarker_IsNavMeshRoutingAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.InitPathList
struct AMapWaypointMarker_InitPathList_Params
{
	TArray<struct FVector>                             PositionList;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.InitPath
struct AMapWaypointMarker_InitPath_Params
{
	struct FVector                                     StartPosition;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     EndPosition;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.HasValidNavPath
struct AMapWaypointMarker_HasValidNavPath_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetPointOnPath
struct AMapWaypointMarker_GetPointOnPath_Params
{
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              distanceFrom;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                lane;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetPathDirection
struct AMapWaypointMarker_GetPathDirection_Params
{
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetNavPathColor
struct AMapWaypointMarker_GetNavPathColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetEndLocation
struct AMapWaypointMarker_GetEndLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetDistanceToClosestSplineLocation
struct AMapWaypointMarker_GetDistanceToClosestSplineLocation_Params
{
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.GetDistanceAlongPath
struct AMapWaypointMarker_GetDistanceAlongPath_Params
{
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     EndLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWaypointMarker.ClearPath
struct AMapWaypointMarker_ClearPath_Params
{
};

// Function BendGame.BendHUDInterface.SetVisible
struct UBendHUDInterface_SetVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUDInterface.SetGameHudEnabled
struct UBendHUDInterface_SetGameHudEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUDInterface.SetFlashlightOnOff
struct UBendHUDInterface_SetFlashlightOnOff_Params
{
	bool                                               IsOn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUDInterface.SetBikeHeadlightOnOff
struct UBendHUDInterface_SetBikeHeadlightOnOff_Params
{
	bool                                               IsOn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUDInterface.GetMissionWaypointMarker
struct UBendHUDInterface_GetMissionWaypointMarker_Params
{
	class AMapWaypointMarker*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHUDInterface.ClearMissionTimer
struct UBendHUDInterface_ClearMissionTimer_Params
{
};

// Function BendGame.BendHUDInterface.ActivateMissionTimer
struct UBendHUDInterface_ActivateMissionTimer_Params
{
	struct FHudMissionTimerDetails                     Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.SlateHUD.SetMiniMapZoomLevel
struct USlateHUD_SetMiniMapZoomLevel_Params
{
	TEnumAsByte<EHudMiniMapZoomLevel>                  Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.SetVisible
struct USlateInputInteract_SetVisible_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.SetProgressPercent
struct USlateInputInteract_SetProgressPercent_Params
{
	float                                              Progress;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.SetPaused
struct USlateInputInteract_SetPaused_Params
{
	bool                                               IsPaused;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.SetInteractWidget3D
struct USlateInputInteract_SetInteractWidget3D_Params
{
	class UBendWidgetComponent*                        BendWidget3D;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.SetInteractDetails
struct USlateInputInteract_SetInteractDetails_Params
{
	struct FActorInteractDetails                       Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.SlateInputInteract.ReleaseInteractWidget3D
struct USlateInputInteract_ReleaseInteractWidget3D_Params
{
};

// Function BendGame.SlateInputInteract.InteractInProgress
struct USlateInputInteract_InteractInProgress_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.EnableInputInteract
struct USlateInputInteract_EnableInputInteract_Params
{
	float                                              InteractTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UInputInteractWidget*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.DisableInputInteract
struct USlateInputInteract_DisableInputInteract_Params
{
};

// Function BendGame.SlateInputInteract.CompletedInteract
struct USlateInputInteract_CompletedInteract_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteract.AbortedInteract
struct USlateInputInteract_AbortedInteract_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFocusModeAdvertise.TurnOffCompletely
struct UBendFocusModeAdvertise_TurnOffCompletely_Params
{
};

// Function BendGame.BendFocusModeAdvertise.SetInRangeOfAdvertise
struct UBendFocusModeAdvertise_SetInRangeOfAdvertise_Params
{
	bool                                               InRange;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InstantState;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFocusModeAdvertise.SetDangerAdvertise
struct UBendFocusModeAdvertise_SetDangerAdvertise_Params
{
	bool                                               IsDanger;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFocusModeAdvertise.FadeTheAdvertise
struct UBendFocusModeAdvertise_FadeTheAdvertise_Params
{
	bool                                               FadeIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIObjectiveCalloutWidget.StoreIconsInBlueprint
struct UBendUIObjectiveCalloutWidget_StoreIconsInBlueprint_Params
{
};

// Function BendGame.BendUIObjectiveCalloutWidget.SetIconVisibility
struct UBendUIObjectiveCalloutWidget_SetIconVisibility_Params
{
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIObjectiveCalloutWidget.SetIconColor
struct UBendUIObjectiveCalloutWidget_SetIconColor_Params
{
	struct FSlateColor                                 Color;                                                    // (Parm)
	class UImage*                                      Icon;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIObjectiveCalloutWidget.SetIcon
struct UBendUIObjectiveCalloutWidget_SetIcon_Params
{
	class UTexture2D*                                  Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIObjectiveCalloutWidget.SetDistanceText_Code
struct UBendUIObjectiveCalloutWidget_SetDistanceText_Code_Params
{
	struct FText                                       NewText;                                                  // (Parm)
	float                                              DistanceAway;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudCollectibleClue.SetState
struct UHudCollectibleClue_SetState_Params
{
	TEnumAsByte<EHudCollectibleClueState>              InState;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudCollectibleClue.IsActive
struct UHudCollectibleClue_IsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudCollectibleClue.DeactivateClueNotification
struct UHudCollectibleClue_DeactivateClueNotification_Params
{
};

// Function BendGame.InteractAdvertiseWidgetBase.TweenVisibility
struct UInteractAdvertiseWidgetBase_TweenVisibility_Params
{
};

// Function BendGame.InteractAdvertiseWidgetBase.SetTheAdvertiseVisible
struct UInteractAdvertiseWidgetBase_SetTheAdvertiseVisible_Params
{
	bool                                               UseWideLayout;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              InventoryItem;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsAmmoPickup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EIconTypes>                            IconType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Durability;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractAdvertiseWidgetBase.SetTheAdvertiseHidden
struct UInteractAdvertiseWidgetBase_SetTheAdvertiseHidden_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractAdvertiseWidgetBase.SetParentRef
struct UInteractAdvertiseWidgetBase_SetParentRef_Params
{
	class AActor*                                      Parent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InteractAdvertiseWidgetBase.SetDisabledState
struct UInteractAdvertiseWidgetBase_SetDisabledState_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Friendly;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayMaxIfDisabled;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractAdvertiseWidgetBase.ResetAdvertiseForPool
struct UInteractAdvertiseWidgetBase_ResetAdvertiseForPool_Params
{
};

// Function BendGame.InteractAdvertiseWidgetBase.GetWidgetComponentRef
struct UInteractAdvertiseWidgetBase_GetWidgetComponentRef_Params
{
	class UBendWidgetComponent*                        ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.InteractAdvertiseWidgetBase.GetParentRef
struct UInteractAdvertiseWidgetBase_GetParentRef_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.SetValue
struct UBendAttribute_SetValue_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttribute.SetUseEffectLevel
struct UBendAttribute_SetUseEffectLevel_Params
{
	TEnumAsByte<EAttributeUseEffect>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttribute.SetMaxValue
struct UBendAttribute_SetMaxValue_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttribute.IsCooldownActive
struct UBendAttribute_IsCooldownActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.IsActivated
struct UBendAttribute_IsActivated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.GetValue
struct UBendAttribute_GetValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.GetUseEffectLevel
struct UBendAttribute_GetUseEffectLevel_Params
{
	TEnumAsByte<EAttributeUseEffect>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.GetPercentage
struct UBendAttribute_GetPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.GetMaxValue
struct UBendAttribute_GetMaxValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.Deactivate
struct UBendAttribute_Deactivate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.CanActivate
struct UBendAttribute_CanActivate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.AdjustMaxValue
struct UBendAttribute_AdjustMaxValue_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.AdjustAttributeLevel
struct UBendAttribute_AdjustAttributeLevel_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttribute.ActivateRecharge
struct UBendAttribute_ActivateRecharge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.ActivateCooldown
struct UBendAttribute_ActivateCooldown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttribute.Activate
struct UBendAttribute_Activate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.SetUseEffectLevel
struct UBendAbilitySystemComponent_SetUseEffectLevel_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttributeUseEffect>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.RemoveGameplayTag
struct UBendAbilitySystemComponent_RemoveGameplayTag_Params
{
	struct FGameplayTag                                GameplayTag;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendAbilitySystemComponent.OnTagModified
struct UBendAbilitySystemComponent_OnTagModified_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.OnPlayerLevelChange
struct UBendAbilitySystemComponent_OnPlayerLevelChange_Params
{
	class UPlayerExperienceLevel*                      PlayerXP;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.Initialize
struct UBendAbilitySystemComponent_Initialize_Params
{
	bool                                               SetAttributesToMax;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.InitAttributesForLevel
struct UBendAbilitySystemComponent_InitAttributesForLevel_Params
{
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SetCurrentToMaxValues;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.GetSkillPointsForLevel
struct UBendAbilitySystemComponent_GetSkillPointsForLevel_Params
{
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.GetEffectLevel
struct UBendAbilitySystemComponent_GetEffectLevel_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttributeUseEffect>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.GetAttributePointsForLevel
struct UBendAbilitySystemComponent_GetAttributePointsForLevel_Params
{
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.GetAttributePercentage
struct UBendAbilitySystemComponent_GetAttributePercentage_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.GetAttribute
struct UBendAbilitySystemComponent_GetAttribute_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAttribute*                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAbilitySystemComponent.DebugDumpEffects
struct UBendAbilitySystemComponent_DebugDumpEffects_Params
{
};

// Function BendGame.BendAbilitySystemComponent.AddGameplayTag
struct UBendAbilitySystemComponent_AddGameplayTag_Params
{
	struct FGameplayTag                                GameplayTag;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendBearController.TryRush
struct ABendBearController_TryRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBearController.StartMeleeBlendspaceAttack
struct ABendBearController_StartMeleeBlendspaceAttack_Params
{
};

// Function BendGame.BendBearController.RushHitStaticMesh
struct ABendBearController_RushHitStaticMesh_Params
{
	struct FHitResult                                  HitResult;                                                // (Parm)
};

// Function BendGame.BendBearController.DetermineSuccessOrFailedRush
struct ABendBearController_DetermineSuccessOrFailedRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBearController.CanRush
struct ABendBearController_CanRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPerchingComponent.SelectFirstAvailableCrowEdge
struct UBendPerchingComponent_SelectFirstAvailableCrowEdge_Params
{
	TArray<struct FTraversalEdge>                      Perches;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              MinDistanceToOtherCrows;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPerchingComponent.SelectCrowEdge
struct UBendPerchingComponent_SelectCrowEdge_Params
{
	struct FTraversalEdge                              Perch;                                                    // (ConstParm, Parm)
	float                                              MinDistanceToOtherCrows;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPerchingComponent.HasValidCrowEdge
struct UBendPerchingComponent_HasValidCrowEdge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPerchingHelper.SortByDistance
struct UBendPerchingHelper_SortByDistance_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAscending;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPerchingHelper.SelectRandom
struct UBendPerchingHelper_SelectRandom_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPerchingHelper.SelectClosest
struct UBendPerchingHelper_SelectClosest_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPerchingHelper.NotInArea
struct UBendPerchingHelper_NotInArea_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPerchingHelper.InDefendZone
struct UBendPerchingHelper_InDefendZone_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDefendZoneInfo                             Zone;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPerchingHelper.FindCrowEdgesInDefendZone
struct UBendPerchingHelper_FindCrowEdgesInDefendZone_Params
{
	struct FDefendZoneInfo                             defendZone;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPerchingHelper.FindCrowEdgesInArea
struct UBendPerchingHelper_FindCrowEdgesInArea_Params
{
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGraphicsBufferQueryComponent.GetHeight
struct UBendGraphicsBufferQueryComponent_GetHeight_Params
{
	int                                                Index;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.WasTrackingSectionCompleted
struct ABendTrackingManager_WasTrackingSectionCompleted_Params
{
	struct FName                                       SectionName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.UpdateButtonProgress
struct ABendTrackingManager_UpdateButtonProgress_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.TurnOnTrackingHUD
struct ABendTrackingManager_TurnOnTrackingHUD_Params
{
};

// Function BendGame.BendTrackingManager.TurnOffTrackingHUD
struct ABendTrackingManager_TurnOffTrackingHUD_Params
{
};

// Function BendGame.BendTrackingManager.TurnOffRumble
struct ABendTrackingManager_TurnOffRumble_Params
{
};

// Function BendGame.BendTrackingManager.TrackingSectionCompleteCallback
struct ABendTrackingManager_TrackingSectionCompleteCallback_Params
{
};

// Function BendGame.BendTrackingManager.TrackingHUDUpdate
struct ABendTrackingManager_TrackingHUDUpdate_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.TimerForRadiusCheck
struct ABendTrackingManager_TimerForRadiusCheck_Params
{
};

// Function BendGame.BendTrackingManager.TimelineCallback
struct ABendTrackingManager_TimelineCallback_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.TestDistanceFromCurrentTrackingCuesToPlayer
struct ABendTrackingManager_TestDistanceFromCurrentTrackingCuesToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.SoundActorDistanceCheck
struct ABendTrackingManager_SoundActorDistanceCheck_Params
{
};

// Function BendGame.BendTrackingManager.ShouldTurnOnHighlightVisuals
struct ABendTrackingManager_ShouldTurnOnHighlightVisuals_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.SetTrackingState
struct ABendTrackingManager_SetTrackingState_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Visible;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Advertising;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLocked;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.SetSectionEnabled
struct ABendTrackingManager_SetSectionEnabled_Params
{
	struct FName                                       SectionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PrevID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.SetRenderSettingsOnActors
struct ABendTrackingManager_SetRenderSettingsOnActors_Params
{
	TArray<class AActor*>                              TrackingActors;                                           // (Parm, ZeroConstructor)
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECurrentTrackingVisualSetting>         NewSetting;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.SetNewLocationListFromID
struct ABendTrackingManager_SetNewLocationListFromID_Params
{
	struct FName                                       ID_Ref;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FinalLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.RuntimeUpdateDepthForCorrectActors
struct ABendTrackingManager_RuntimeUpdateDepthForCorrectActors_Params
{
};

// Function BendGame.BendTrackingManager.RumbleCallback
struct ABendTrackingManager_RumbleCallback_Params
{
};

// Function BendGame.BendTrackingManager.ResetVOVariables
struct ABendTrackingManager_ResetVOVariables_Params
{
};

// Function BendGame.BendTrackingManager.RadiusTimerCallback
struct ABendTrackingManager_RadiusTimerCallback_Params
{
};

// Function BendGame.BendTrackingManager.OnEnterActionFail
struct ABendTrackingManager_OnEnterActionFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             FailedReason;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.OnEnterActionComplete
struct ABendTrackingManager_OnEnterActionComplete_Params
{
};

// Function BendGame.BendTrackingManager.MarkerTickBegin
struct ABendTrackingManager_MarkerTickBegin_Params
{
};

// Function BendGame.BendTrackingManager.ListWasFinished
struct ABendTrackingManager_ListWasFinished_Params
{
};

// Function BendGame.BendTrackingManager.IsPlayerPawnSpeaking
struct ABendTrackingManager_IsPlayerPawnSpeaking_Params
{
	class ABendPlayerPawn*                             Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.IsLocationNearbyAnyOfTheseLocations
struct ABendTrackingManager_IsLocationNearbyAnyOfTheseLocations_Params
{
	TArray<struct FVector>                             LocationsList;                                            // (Parm, ZeroConstructor)
	struct FVector                                     LocationToCheck;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToCheck;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.InAnimationFail
struct ABendTrackingManager_InAnimationFail_Params
{
	bool                                               CancelAction;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.GetSectionIndexFromID
struct ABendTrackingManager_GetSectionIndexFromID_Params
{
	struct FName                                       SectionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.GetNextFootprintMarkerToUse
struct ABendTrackingManager_GetNextFootprintMarkerToUse_Params
{
	class ABendTrackingMinimapMarker_BP*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.GetClueFromIndex
struct ABendTrackingManager_GetClueFromIndex_Params
{
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VO_Name;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 SoundClassRef;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ClueObject;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.GetBestSuitedOneInRange
struct ABendTrackingManager_GetBestSuitedOneInRange_Params
{
	TArray<int>                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendTrackingManager.GetAnimFromIndex
struct ABendTrackingManager_GetAnimFromIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.FinishAnimationOnUpdate
struct ABendTrackingManager_FinishAnimationOnUpdate_Params
{
};

// Function BendGame.BendTrackingManager.DoDistanceChecksForPath
struct ABendTrackingManager_DoDistanceChecksForPath_Params
{
};

// Function BendGame.BendTrackingManager.DoCamLookAt
struct ABendTrackingManager_DoCamLookAt_Params
{
	struct FVector                                     OverrideVector;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.DepthOnAllMeshesControl
struct ABendTrackingManager_DepthOnAllMeshesControl_Params
{
	bool                                               OnToggle;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.CompleteTrackingSection
struct ABendTrackingManager_CompleteTrackingSection_Params
{
	bool                                               DontCallCompleted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingManager.CollectLocationListFromItems
struct ABendTrackingManager_CollectLocationListFromItems_Params
{
	struct FVector                                     StartLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              UnlockedActors;                                           // (Parm, ZeroConstructor)
	struct FVector                                     EndPoint;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              EndRadius;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendTrackingManager.CloseTheTutorialAndHideData
struct ABendTrackingManager_CloseTheTutorialAndHideData_Params
{
};

// Function BendGame.BendTrackingManager.AnimationsFinished
struct ABendTrackingManager_AnimationsFinished_Params
{
};

// Function BendGame.BendTrackingManager.AfterImageForwardCallback
struct ABendTrackingManager_AfterImageForwardCallback_Params
{
};

// Function BendGame.BendTrackingManager.AfterImageBackwardCallback
struct ABendTrackingManager_AfterImageBackwardCallback_Params
{
};

// Function BendGame.BendTrackingManager.ActionLooping
struct ABendTrackingManager_ActionLooping_Params
{
	float                                              TimeLeft;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.Stun
struct ABendAIPawn_Stun_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.SetTargetPreference
struct ABendAIPawn_SetTargetPreference_Params
{
	TEnumAsByte<EAITargetPreference>                   newPreference;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.SetArchetype
struct ABendAIPawn_SetArchetype_Params
{
	class UBendArchetypeDataBase*                      Archetype;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.RequestMeshScale
struct ABendAIPawn_RequestMeshScale_Params
{
	float                                              desiredScale;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TransitionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.RemoveMeshScale
struct ABendAIPawn_RemoveMeshScale_Params
{
	float                                              TransitionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.IsNavLinkNextPathPoint
struct ABendAIPawn_IsNavLinkNextPathPoint_Params
{
	class ABendTraversalNavLink*                       NavLink;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIPawn.IsNavLinkInPath
struct ABendAIPawn_IsNavLinkInPath_Params
{
	class ABendTraversalNavLink*                       NavLink;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIPawn.IsInjured
struct ABendAIPawn_IsInjured_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIPawn.HandleOnDied
struct ABendAIPawn_HandleOnDied_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIPawn.GetTargetPreference
struct ABendAIPawn_GetTargetPreference_Params
{
	TEnumAsByte<EAITargetPreference>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIPawn.AutomaticallySetVariationDataBasedOnGender
struct ABendAIPawn_AutomaticallySetVariationDataBasedOnGender_Params
{
};

// Function BendGame.BendAnimalPawn.StartMeleeAttack
struct ABendAnimalPawn_StartMeleeAttack_Params
{
	class AActor*                                      AttackTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttackName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendAttackData                             ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendAnimalPawn.SpawnAndSetupSearchBodyActor
struct ABendAnimalPawn_SpawnAndSetupSearchBodyActor_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AnimSequenceCrouched;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SubClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.SetupAnimalLootBinds
struct ABendAnimalPawn_SetupAnimalLootBinds_Params
{
};

// Function BendGame.BendAnimalPawn.SetSupplementalCapsuleEnabled
struct ABendAnimalPawn_SetSupplementalCapsuleEnabled_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.SetInjured
struct ABendAnimalPawn_SetInjured_Params
{
	bool                                               bValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.ResetJumping
struct ABendAnimalPawn_ResetJumping_Params
{
};

// Function BendGame.BendAnimalPawn.OnTauntAnimEnded
struct ABendAnimalPawn_OnTauntAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnStartledAnimEnded
struct ABendAnimalPawn_OnStartledAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnSleepAnimEnded
struct ABendAnimalPawn_OnSleepAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnSitAnimEnded
struct ABendAnimalPawn_OnSitAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnScentAnimEnded
struct ABendAnimalPawn_OnScentAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnRetreatAnimEnded
struct ABendAnimalPawn_OnRetreatAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnRestAnimEnded
struct ABendAnimalPawn_OnRestAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnOccasionalIdleAnimStarted
struct ABendAnimalPawn_OnOccasionalIdleAnimStarted_Params
{
};

// Function BendGame.BendAnimalPawn.OnOccasionalIdleAnimEnded
struct ABendAnimalPawn_OnOccasionalIdleAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnMeleeAttackStarted
struct ABendAnimalPawn_OnMeleeAttackStarted_Params
{
	struct FBendAttackData                             AttackData;                                               // (Parm)
};

// Function BendGame.BendAnimalPawn.OnMeleeAttackHit
struct ABendAnimalPawn_OnMeleeAttackHit_Params
{
};

// Function BendGame.BendAnimalPawn.OnMeleeAttackAnimEnded
struct ABendAnimalPawn_OnMeleeAttackAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnDodgeAnimStarted
struct ABendAnimalPawn_OnDodgeAnimStarted_Params
{
};

// Function BendGame.BendAnimalPawn.OnDodgeAnimEnded
struct ABendAnimalPawn_OnDodgeAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnDiedHandler
struct ABendAnimalPawn_OnDiedHandler_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.OnDamageAnimStarted
struct ABendAnimalPawn_OnDamageAnimStarted_Params
{
};

// Function BendGame.BendAnimalPawn.OnDamageAnimEnded
struct ABendAnimalPawn_OnDamageAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.OnAnimalClimbStarting
struct ABendAnimalPawn_OnAnimalClimbStarting_Params
{
	struct FBendActionData                             fClimbActionData;                                         // (Parm)
	bool                                               bShouldFallAfterClimb;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendClimbContext                           fClimbContext;                                            // (Parm)
	bool                                               QueuedClimb;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.OnAlertAnimEnded
struct ABendAnimalPawn_OnAlertAnimEnded_Params
{
};

// Function BendGame.BendAnimalPawn.MissMeleeAttack
struct ABendAnimalPawn_MissMeleeAttack_Params
{
};

// Function BendGame.BendAnimalPawn.IsInjured
struct ABendAnimalPawn_IsInjured_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.GetFutureVelocity
struct ABendAnimalPawn_GetFutureVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.GetActorFeetLocation
struct ABendAnimalPawn_GetActorFeetLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.FinishedStreamingTrackingBP
struct ABendAnimalPawn_FinishedStreamingTrackingBP_Params
{
};

// Function BendGame.BendAnimalPawn.EQSTeleport
struct ABendAnimalPawn_EQSTeleport_Params
{
	class UEnvQuery*                                   QueryTemplate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.AttemptTaunt
struct ABendAnimalPawn_AttemptTaunt_Params
{
};

// Function BendGame.BendAnimalPawn.AttemptStartled
struct ABendAnimalPawn_AttemptStartled_Params
{
};

// Function BendGame.BendAnimalPawn.AttemptSleep
struct ABendAnimalPawn_AttemptSleep_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.AttemptSit
struct ABendAnimalPawn_AttemptSit_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.AttemptScent
struct ABendAnimalPawn_AttemptScent_Params
{
};

// Function BendGame.BendAnimalPawn.AttemptRetreat
struct ABendAnimalPawn_AttemptRetreat_Params
{
};

// Function BendGame.BendAnimalPawn.AttemptRest
struct ABendAnimalPawn_AttemptRest_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.AttemptDodge
struct ABendAnimalPawn_AttemptDodge_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalPawn.AttemptAlertWithoutNoise
struct ABendAnimalPawn_AttemptAlertWithoutNoise_Params
{
};

// Function BendGame.BendAnimalPawn.AttemptAlert
struct ABendAnimalPawn_AttemptAlert_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.StopFlying
struct ABendFlyingAnimalPawn_StopFlying_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.StartLanding
struct ABendFlyingAnimalPawn_StartLanding_Params
{
	struct FTransform                                  Destination;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalPawn.StartFlying
struct ABendFlyingAnimalPawn_StartFlying_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnTakeOffAnimStarted
struct ABendFlyingAnimalPawn_OnTakeOffAnimStarted_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnTakeOffAnimEnded
struct ABendFlyingAnimalPawn_OnTakeOffAnimEnded_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnSupplementalSphereOverlap
struct ABendFlyingAnimalPawn_OnSupplementalSphereOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendFlyingAnimalPawn.OnPerchingAnimStarted
struct ABendFlyingAnimalPawn_OnPerchingAnimStarted_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnPerchingAnimEnded
struct ABendFlyingAnimalPawn_OnPerchingAnimEnded_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnLandingAnimStarted
struct ABendFlyingAnimalPawn_OnLandingAnimStarted_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnLandingAnimEnded
struct ABendFlyingAnimalPawn_OnLandingAnimEnded_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnFlyingMovementStarted
struct ABendFlyingAnimalPawn_OnFlyingMovementStarted_Params
{
};

// Function BendGame.BendFlyingAnimalPawn.OnFlyingMovementEnded
struct ABendFlyingAnimalPawn_OnFlyingMovementEnded_Params
{
};

// Function BendGame.BendFlyingAnimalController.RequestFlight
struct ABendFlyingAnimalController_RequestFlight_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EFlyingNavType>                        NavType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipDefendZoneCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceDirectFlight;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.OnPawnStartTakeOff
struct ABendFlyingAnimalController_OnPawnStartTakeOff_Params
{
};

// Function BendGame.BendFlyingAnimalController.OnPawnEndTakeOff
struct ABendFlyingAnimalController_OnPawnEndTakeOff_Params
{
};

// Function BendGame.BendFlyingAnimalController.OnPawnEndLanding
struct ABendFlyingAnimalController_OnPawnEndLanding_Params
{
};

// Function BendGame.BendFlyingAnimalController.OnMeleeAttackEnded
struct ABendFlyingAnimalController_OnMeleeAttackEnded_Params
{
};

// Function BendGame.BendFlyingAnimalController.IsReadyForApproach
struct ABendFlyingAnimalController_IsReadyForApproach_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetPreferredAltitude
struct ABendFlyingAnimalController_GetPreferredAltitude_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetMinGroundClearance
struct ABendFlyingAnimalController_GetMinGroundClearance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetMaxDeltaPitch
struct ABendFlyingAnimalController_GetMaxDeltaPitch_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetMaxDeltaDistance
struct ABendFlyingAnimalController_GetMaxDeltaDistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetFlyingNavState
struct ABendFlyingAnimalController_GetFlyingNavState_Params
{
	TEnumAsByte<EFlyingNavigationState>                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.GetClampedWaypointDirection
struct ABendFlyingAnimalController_GetClampedWaypointDirection_Params
{
	struct FVector                                     DesiredDirection;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFlyingAnimalController.FlyUpAtMaxPitch
struct ABendFlyingAnimalController_FlyUpAtMaxPitch_Params
{
};

// Function BendGame.BendFlyingAnimalController.FlyToPerch
struct ABendFlyingAnimalController_FlyToPerch_Params
{
	TEnumAsByte<EPerchType>                            PerchType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFreakerController.TryScream
struct ABendFreakerController_TryScream_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFreakerController.ScreamStarted
struct ABendFreakerController_ScreamStarted_Params
{
};

// Function BendGame.BendFreakerController.ScreamFinished
struct ABendFreakerController_ScreamFinished_Params
{
};

// Function BendGame.BendFreakerController.Scream
struct ABendFreakerController_Scream_Params
{
};

// Function BendGame.BendFreakerController.OnStatusEffectStarted
struct ABendFreakerController_OnStatusEffectStarted_Params
{
	class UStatusEffect*                               StatusEffect;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFreakerController.ForceEnrage
struct ABendFreakerController_ForceEnrage_Params
{
};

// Function BendGame.BendNewtController.Threatened
struct ABendNewtController_Threatened_Params
{
	class ABendPawn*                                   threatener;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNewtController.TargetHasNonNewtAttacker
struct ABendNewtController_TargetHasNonNewtAttacker_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.ShouldPerformAntic
struct ABendNewtController_ShouldPerformAntic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.SetAmbushMode
struct ABendNewtController_SetAmbushMode_Params
{
	bool                                               newAmbushMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNewtController.PerformAntic
struct ABendNewtController_PerformAntic_Params
{
	bool                                               anchorToEdge;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.NotifyItemStolen
struct ABendNewtController_NotifyItemStolen_Params
{
	struct FInventoryIDDetails                         InventoryID;                                              // (Parm)
};

// Function BendGame.BendNewtController.NewtTookDamage
struct ABendNewtController_NewtTookDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNewtController.LocateRoofCover
struct ABendNewtController_LocateRoofCover_Params
{
	struct FVector                                     targetPos;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.IsThreatening
struct ABendNewtController_IsThreatening_Params
{
	class ABendPawn*                                   targetPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.IsInAmbushMode
struct ABendNewtController_IsInAmbushMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.IsEnemyInSafeZoneForPoint
struct ABendNewtController_IsEnemyInSafeZoneForPoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.HasAdvantage
struct ABendNewtController_HasAdvantage_Params
{
	class ABendPawn*                                   targetPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.GetDistractionLocation
struct ABendNewtController_GetDistractionLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.FindNearbyCover
struct ABendNewtController_FindNearbyCover_Params
{
	struct FVector                                     QueryPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              QueryRange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNewtController.AnticAnimFailed
struct ABendNewtController_AnticAnimFailed_Params
{
	TEnumAsByte<EPeformActionFailedReason>             ReasonForFailure;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNewtController.AnticAnimComplete
struct ABendNewtController_AnticAnimComplete_Params
{
};

// Function BendGame.BendRagerController.TryRush
struct ABendRagerController_TryRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRagerController.TryPound
struct ABendRagerController_TryPound_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRagerController.TryPerformAntic
struct ABendRagerController_TryPerformAntic_Params
{
	struct FName                                       AnticCategory;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRagerController.RagerTookDamage
struct ABendRagerController_RagerTookDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRagerController.RagerHitStaticMesh
struct ABendRagerController_RagerHitStaticMesh_Params
{
	struct FHitResult                                  HitResult;                                                // (Parm)
};

// Function BendGame.BendRagerController.PlayKill
struct ABendRagerController_PlayKill_Params
{
};

// Function BendGame.BendRagerController.DetermineSuccessOrFailedRush
struct ABendRagerController_DetermineSuccessOrFailedRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRagerController.CanRush
struct ABendRagerController_CanRush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRagerController.CanPound
struct ABendRagerController_CanPound_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendScreamerController.GetHordeController
struct ABendScreamerController_GetHordeController_Params
{
	class ABendCrowdController*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.RemoveLookRequest
struct UBendCharacterLookComponent_RemoveLookRequest_Params
{
	struct FBendCharacterLookRequestId                 Id;                                                       // (Parm)
};

// Function BendGame.BendCharacterLookComponent.ModifyLookRequestAtComponent
struct UBendCharacterLookComponent_ModifyLookRequestAtComponent_Params
{
	struct FBendCharacterLookRequestId                 RequestID;                                                // (Parm)
	class USceneComponent*                             TargetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       TargetSocketOrBoneName;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.ModifyLookRequestAtCharacterHead
struct UBendCharacterLookComponent_ModifyLookRequestAtCharacterHead_Params
{
	struct FBendCharacterLookRequestId                 RequestID;                                                // (Parm)
	class ABendPawn*                                   TargetCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.ModifyLookRequestAtActor
struct UBendCharacterLookComponent_ModifyLookRequestAtActor_Params
{
	struct FBendCharacterLookRequestId                 RequestID;                                                // (Parm)
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.ModifyLookRequestAlongLocation
struct UBendCharacterLookComponent_ModifyLookRequestAlongLocation_Params
{
	struct FBendCharacterLookRequestId                 RequestID;                                                // (Parm)
	struct FVector                                     LookAtLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.ModifyLookRequestAlongAngle
struct UBendCharacterLookComponent_ModifyLookRequestAlongAngle_Params
{
	struct FBendCharacterLookRequestId                 RequestID;                                                // (Parm)
	struct FRotator                                    LookAngle;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLocalSpaceAngle;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.GetLookAngle
struct UBendCharacterLookComponent_GetLookAngle_Params
{
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Alpha;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bGetTargetAngleValues;                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.AddLookRequestAtLocation
struct UBendCharacterLookComponent_AddLookRequestAtLocation_Params
{
	struct FBendCharacterLookRequestId                 OutputRequestId;                                          // (Parm, OutParm)
	struct FBendCharacterLookRequestId                 InputRequestId;                                           // (Parm)
	struct FVector                                     LookAtLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.AddLookRequestAtComponent
struct UBendCharacterLookComponent_AddLookRequestAtComponent_Params
{
	struct FBendCharacterLookRequestId                 OutputRequestId;                                          // (Parm, OutParm)
	struct FBendCharacterLookRequestId                 InputRequestId;                                           // (Parm)
	class USceneComponent*                             TargetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       TargetSocketOrBoneName;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.AddLookRequestAtCharacterHead
struct UBendCharacterLookComponent_AddLookRequestAtCharacterHead_Params
{
	struct FBendCharacterLookRequestId                 OutputRequestId;                                          // (Parm, OutParm)
	struct FBendCharacterLookRequestId                 InputRequestId;                                           // (Parm)
	class ABendPawn*                                   TargetCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.AddLookRequestAtActor
struct UBendCharacterLookComponent_AddLookRequestAtActor_Params
{
	struct FBendCharacterLookRequestId                 OutputRequestId;                                          // (Parm, OutParm)
	struct FBendCharacterLookRequestId                 InputRequestId;                                           // (Parm)
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterLookComponent.AddLookRequestAlongAngle
struct UBendCharacterLookComponent_AddLookRequestAlongAngle_Params
{
	struct FBendCharacterLookRequestId                 OutputRequestId;                                          // (Parm, OutParm)
	struct FBendCharacterLookRequestId                 InputRequestId;                                           // (Parm)
	struct FRotator                                    LookAngle;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLocalSpaceAngle;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngleLimitOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          PartialSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpolationRate;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.SetPawnOwner
struct ABendEquippableItem_SetPawnOwner_Params
{
	class ABendPawn*                                   pOwnerPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.SetEquipLocation
struct ABendEquippableItem_SetEquipLocation_Params
{
	TEnumAsByte<EEquippableSlot>                       targetHand;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.SetBloodOnItem
struct ABendEquippableItem_SetBloodOnItem_Params
{
	float                                              AmountOfBlood;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.OverrideNextMontageDuration
struct ABendEquippableItem_OverrideNextMontageDuration_Params
{
	float                                              InDuration;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.OverrideNextMontageBlending
struct ABendEquippableItem_OverrideNextMontageBlending_Params
{
	float                                              InBlend;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutBlend;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.OnUnEquipMontageBlendingOut
struct ABendEquippableItem_OnUnEquipMontageBlendingOut_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInterrupted;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.OnHolsterStarted
struct ABendEquippableItem_OnHolsterStarted_Params
{
};

// Function BendGame.BendEquippableItem.OnHolsterFinished
struct ABendEquippableItem_OnHolsterFinished_Params
{
};

// Function BendGame.BendEquippableItem.OnEquipMontageBlendingOut
struct ABendEquippableItem_OnEquipMontageBlendingOut_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInterrupted;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.OnDrawStarted
struct ABendEquippableItem_OnDrawStarted_Params
{
};

// Function BendGame.BendEquippableItem.OnDrawFinished
struct ABendEquippableItem_OnDrawFinished_Params
{
};

// Function BendGame.BendEquippableItem.IsPendingUnEquip
struct ABendEquippableItem_IsPendingUnEquip_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.IsPendingEquip
struct ABendEquippableItem_IsPendingEquip_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.IsEquipped
struct ABendEquippableItem_IsEquipped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.HideInGame
struct ABendEquippableItem_HideInGame_Params
{
	bool                                               bHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.GetStaticItemMesh
struct ABendEquippableItem_GetStaticItemMesh_Params
{
	class UStaticMeshComponent*                        ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.GetPawnOwner
struct ABendEquippableItem_GetPawnOwner_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.GetItemMesh
struct ABendEquippableItem_GetItemMesh_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.GetEquipLocation
struct ABendEquippableItem_GetEquipLocation_Params
{
	TEnumAsByte<EEquippableSlot>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEquippableItem.GetBrokenItemMesh
struct ABendEquippableItem_GetBrokenItemMesh_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.OnWeaponFired
struct ABendWeaponPart_OnWeaponFired_Params
{
};

// Function BendGame.BendWeaponPart.OnNumberOfUsesSet
struct ABendWeaponPart_OnNumberOfUsesSet_Params
{
	int                                                UseCount;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxUseCount;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.OnExitScopeMode
struct ABendWeaponPart_OnExitScopeMode_Params
{
};

// Function BendGame.BendWeaponPart.OnExitNoScopeZoomMode
struct ABendWeaponPart_OnExitNoScopeZoomMode_Params
{
};

// Function BendGame.BendWeaponPart.OnEnterScopeMode
struct ABendWeaponPart_OnEnterScopeMode_Params
{
};

// Function BendGame.BendWeaponPart.OnEnterNoScopeZoomMode
struct ABendWeaponPart_OnEnterNoScopeZoomMode_Params
{
};

// Function BendGame.BendWeaponPart.OnBroken
struct ABendWeaponPart_OnBroken_Params
{
};

// Function BendGame.BendWeaponPart.IsBroken
struct ABendWeaponPart_IsBroken_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetWeaponPartMesh
struct ABendWeaponPart_GetWeaponPartMesh_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetWeaponOwner
struct ABendWeaponPart_GetWeaponOwner_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetTypeOfPart
struct ABendWeaponPart_GetTypeOfPart_Params
{
	TEnumAsByte<EWeaponHardPoint>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetSuppressorHealthPer
struct ABendWeaponPart_GetSuppressorHealthPer_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetNumOfUses
struct ABendWeaponPart_GetNumOfUses_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetMaxNumOfUses
struct ABendWeaponPart_GetMaxNumOfUses_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponPart.GetMaterialIndex
struct ABendWeaponPart_GetMaterialIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CharacterAttributeManager.GetLevel
struct UCharacterAttributeManager_GetLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CharacterAttributeManager.Debug_SetLevel
struct UCharacterAttributeManager_Debug_SetLevel_Params
{
	int                                                NewLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CharacterAttributeManager.AddXP
struct UCharacterAttributeManager_AddXP_Params
{
	int                                                xp;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CharacterAttributeManager.AddCategoryXP
struct UCharacterAttributeManager_AddCategoryXP_Params
{
	TEnumAsByte<EPlayerExperience>                     Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPToAdd;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUD.SetHudVisible
struct ABendHUD_SetHudVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUD.SetGameHudEnabled
struct ABendHUD_SetGameHudEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHUD.PrintDebugString
struct ABendHUD_PrintDebugString_Params
{
	struct FString                                     PrintString;                                              // (Parm, ZeroConstructor)
};

// Function BendGame.BendHUD.IsHudVisible
struct ABendHUD_IsHudVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHUD.GetHudWidget
struct ABendHUD_GetHudWidget_Params
{
	class UHudWidget*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.HasEdges
struct UBendTraversalComponent_HasEdges_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.DebugEnableDrawOnlySectorEdges
struct UBendTraversalComponent_DebugEnableDrawOnlySectorEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.DebugEnableDrawEdges
struct UBendTraversalComponent_DebugEnableDrawEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.DebugEnableDrawCrowEdges
struct UBendTraversalComponent_DebugEnableDrawCrowEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.DebugEnableDrawAllEdges
struct UBendTraversalComponent_DebugEnableDrawAllEdges_Params
{
	bool                                               Toggle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.ClimbDown
struct UBendTraversalComponent_ClimbDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTraversalComponent.Climb
struct UBendTraversalComponent_Climb_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamBase.SetTarget
struct UBendCamBase_SetTarget_Params
{
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamBase.SetFOV
struct UBendCamBase_SetFOV_Params
{
	float                                              FOV;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamBase.OnUpdate
struct UBendCamBase_OnUpdate_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamBase.OnDeactivate
struct UBendCamBase_OnDeactivate_Params
{
};

// Function BendGame.BendCamBase.OnActivate
struct UBendCamBase_OnActivate_Params
{
};

// Function BendGame.BendCamBase.IsInputAllowed
struct UBendCamBase_IsInputAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamBase.InstantUpdate
struct UBendCamBase_InstantUpdate_Params
{
};

// Function BendGame.BendCamBase.GetWaterDepth
struct UBendCamBase_GetWaterDepth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamBase.GetTargetDist
struct UBendCamBase_GetTargetDist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamBase.GetFocusDepth
struct UBendCamBase_GetFocusDepth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamBase.GetCamTargetActor
struct UBendCamBase_GetCamTargetActor_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.UnlockSkill
struct UBendSkillManager_UnlockSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.UnlockAllSkillsInTier
struct UBendSkillManager_UnlockAllSkillsInTier_Params
{
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillTier>                            Tier;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkillManager.UnlockAllSkills
struct UBendSkillManager_UnlockAllSkills_Params
{
};

// Function BendGame.BendSkillManager.SkillStatus
struct UBendSkillManager_SkillStatus_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillStatus>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.ResetAllSkills
struct UBendSkillManager_ResetAllSkills_Params
{
};

// Function BendGame.BendSkillManager.PurchaseSkillByTag
struct UBendSkillManager_PurchaseSkillByTag_Params
{
	struct FGameplayTag                                SkillTag;                                                 // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.PurchaseSkill
struct UBendSkillManager_PurchaseSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.OnSkillUnlocked
struct UBendSkillManager_OnSkillUnlocked_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemSkill*                         Skill;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkillManager.OnSkillsModified
struct UBendSkillManager_OnSkillsModified_Params
{
};

// Function BendGame.BendSkillManager.OnSkillAcquired
struct UBendSkillManager_OnSkillAcquired_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemSkill*                         Skill;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkillManager.IsSkillTierUnlocked
struct UBendSkillManager_IsSkillTierUnlocked_Params
{
	TEnumAsByte<ESkillTier>                            Tier;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.HasUnlockedSkill
struct UBendSkillManager_HasUnlockedSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.HasAcquiredSkillByTag
struct UBendSkillManager_HasAcquiredSkillByTag_Params
{
	struct FGameplayTag                                SkillTag;                                                 // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.HasAcquiredSkill
struct UBendSkillManager_HasAcquiredSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.GetSkillsByClass_BP
struct UBendSkillManager_GetSkillsByClass_BP_Params
{
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendSkill>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSkillManager.GetSkillIDFromTag
struct UBendSkillManager_GetSkillIDFromTag_Params
{
	struct FGameplayTag                                SkillTag;                                                 // (Parm)
	TEnumAsByte<EInventorySkillID>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.GetSkill
struct UBendSkillManager_GetSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendSkill                                  ReturnValue;                                              // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
};

// Function BendGame.BendSkillManager.GetPercentageOfSkillsAcquiredByClass
struct UBendSkillManager_GetPercentageOfSkillsAcquiredByClass_Params
{
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.GetHowManySkillsAquiredByPreviousTiers
struct UBendSkillManager_GetHowManySkillsAquiredByPreviousTiers_Params
{
	TEnumAsByte<ESkillTier>                            CurrentTier;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.GetHowManySkillsAcquiredByTier
struct UBendSkillManager_GetHowManySkillsAcquiredByTier_Params
{
	TEnumAsByte<ESkillTier>                            Tier;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalSkillsOfType;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.GetAllSkillsByTier
struct UBendSkillManager_GetAllSkillsByTier_Params
{
	TEnumAsByte<ESkillClass>                           SkillClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkillTier>                            Tier;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendSkill>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSkillManager.CheckForNewUnlockedSkills
struct UBendSkillManager_CheckForNewUnlockedSkills_Params
{
};

// Function BendGame.BendSkillManager.CanAffordSkillByTag
struct UBendSkillManager_CanAffordSkillByTag_Params
{
	struct FGameplayTag                                SkillTag;                                                 // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.CanAffordSkill
struct UBendSkillManager_CanAffordSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.AwardSkillPoints
struct UBendSkillManager_AwardSkillPoints_Params
{
	int                                                NumPoints;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkillManager.AwardSkill
struct UBendSkillManager_AwardSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkillManager.AcquireSkill
struct UBendSkillManager_AcquireSkill_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkillManager.AcquireAllSkills
struct UBendSkillManager_AcquireAllSkills_Params
{
};

// Function BendGame.BendPlayerPawn.UpdateTrophyKills
struct ABendPlayerPawn_UpdateTrophyKills_Params
{
	TEnumAsByte<ETrophyKillType>                       MyTrophyKillType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.UpdateTheDrifterTrophyCount
struct ABendPlayerPawn_UpdateTheDrifterTrophyCount_Params
{
};

// Function BendGame.BendPlayerPawn.UpdateSpiceOfLifeCounts
struct ABendPlayerPawn_UpdateSpiceOfLifeCounts_Params
{
};

// Function BendGame.BendPlayerPawn.UpdateEncampmentDisplay
struct ABendPlayerPawn_UpdateEncampmentDisplay_Params
{
};

// Function BendGame.BendPlayerPawn.UpdateBND150TrophyKills
struct ABendPlayerPawn_UpdateBND150TrophyKills_Params
{
	TEnumAsByte<EBND150TrophyKillType>                 MyTrophyKillType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.UpdateBND150TrophyCounts
struct ABendPlayerPawn_UpdateBND150TrophyCounts_Params
{
};

// Function BendGame.BendPlayerPawn.UnlockGunStatSkill
struct ABendPlayerPawn_UnlockGunStatSkill_Params
{
	TEnumAsByte<EWeaponBonusTypes>                     SkillName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSetActive;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.UnlockedAcquiredSkill_IncreaseMeleeDurability
struct ABendPlayerPawn_UnlockedAcquiredSkill_IncreaseMeleeDurability_Params
{
};

// Function BendGame.BendPlayerPawn.UnlockedAcquiredSkill_IncreaseMeleeDamage
struct ABendPlayerPawn_UnlockedAcquiredSkill_IncreaseMeleeDamage_Params
{
};

// Function BendGame.BendPlayerPawn.TurnDelta
struct ABendPlayerPawn_TurnDelta_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.Turn
struct ABendPlayerPawn_Turn_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ToggleVehicleRecoveryDebug
struct ABendPlayerPawn_ToggleVehicleRecoveryDebug_Params
{
};

// Function BendGame.BendPlayerPawn.ToggleFullscreen
struct ABendPlayerPawn_ToggleFullscreen_Params
{
};

// Function BendGame.BendPlayerPawn.ThrowWeapon
struct ABendPlayerPawn_ThrowWeapon_Params
{
	TEnumAsByte<EEquippableSlot>                       EquippableSlot;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SyncPlayerLook
struct ABendPlayerPawn_SyncPlayerLook_Params
{
};

// Function BendGame.BendPlayerPawn.StopFire
struct ABendPlayerPawn_StopFire_Params
{
};

// Function BendGame.BendPlayerPawn.StealthRecoveredHandler
struct ABendPlayerPawn_StealthRecoveredHandler_Params
{
};

// Function BendGame.BendPlayerPawn.StealthBrokenHandler
struct ABendPlayerPawn_StealthBrokenHandler_Params
{
};

// Function BendGame.BendPlayerPawn.StartFire
struct ABendPlayerPawn_StartFire_Params
{
};

// Function BendGame.BendPlayerPawn.StartBodyCarryBetween
struct ABendPlayerPawn_StartBodyCarryBetween_Params
{
	class ABendPawn*                                   Carried;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetVehicleRecoveryDebug
struct ABendPlayerPawn_SetVehicleRecoveryDebug_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetTemporaryDisableAim
struct ABendPlayerPawn_SetTemporaryDisableAim_Params
{
	bool                                               NewDisableAim;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetSpeedScalingWithBuddy
struct ABendPlayerPawn_SetSpeedScalingWithBuddy_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   BuddyPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetSkillTierDataDifficultyAdjusted
struct ABendPlayerPawn_SetSkillTierDataDifficultyAdjusted_Params
{
};

// Function BendGame.BendPlayerPawn.SetShotgunReloadSkillCount
struct ABendPlayerPawn_SetShotgunReloadSkillCount_Params
{
	int                                                ShotgunReloadCount;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetPlayerLook
struct ABendPlayerPawn_SetPlayerLook_Params
{
	struct FName                                       LookName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetPlayerInvisible
struct ABendPlayerPawn_SetPlayerInvisible_Params
{
	bool                                               isInvisible;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetPlayerAnimTemplate
struct ABendPlayerPawn_SetPlayerAnimTemplate_Params
{
	struct FName                                       PawnBlueprintName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetMeleeTierLevel
struct ABendPlayerPawn_SetMeleeTierLevel_Params
{
	int                                                NewLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetJumpEnabled
struct ABendPlayerPawn_SetJumpEnabled_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetForceTensePose
struct ABendPlayerPawn_SetForceTensePose_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetFlashlightRef
struct ABendPlayerPawn_SetFlashlightRef_Params
{
	class UBendSpotLightComponent*                     Flashlight;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetBlindFireAccuracySkillModifier
struct ABendPlayerPawn_SetBlindFireAccuracySkillModifier_Params
{
	float                                              BlindFireAccuracyModifier;                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetAllowFriendlyFire
struct ABendPlayerPawn_SetAllowFriendlyFire_Params
{
	bool                                               AllowFriendlyFire;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetAdrenalinMeter
struct ABendPlayerPawn_SetAdrenalinMeter_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.SetAdrenalineMeter
struct ABendPlayerPawn_SetAdrenalineMeter_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ServerSpawnTestBox
struct ABendPlayerPawn_ServerSpawnTestBox_Params
{
};

// Function BendGame.BendPlayerPawn.ServerSpawnEnemy
struct ABendPlayerPawn_ServerSpawnEnemy_Params
{
};

// Function BendGame.BendPlayerPawn.ServerSpawnDumbEnemy
struct ABendPlayerPawn_ServerSpawnDumbEnemy_Params
{
};

// Function BendGame.BendPlayerPawn.SaveNetProfile
struct ABendPlayerPawn_SaveNetProfile_Params
{
};

// Function BendGame.BendPlayerPawn.ResetBikeOnSpline
struct ABendPlayerPawn_ResetBikeOnSpline_Params
{
};

// Function BendGame.BendPlayerPawn.ReceiveSetWindSoundIntensity
struct ABendPlayerPawn_ReceiveSetWindSoundIntensity_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ReceiveSetTimeOfDaySound
struct ABendPlayerPawn_ReceiveSetTimeOfDaySound_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ReceiveSetRainSoundIntensity
struct ABendPlayerPawn_ReceiveSetRainSoundIntensity_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ReceiveSetIndoors
struct ABendPlayerPawn_ReceiveSetIndoors_Params
{
	bool                                               IsIndoors;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ReceiveReactToHumanDeath
struct ABendPlayerPawn_ReceiveReactToHumanDeath_Params
{
	class ABendPawn*                                   DeadPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.PlayInventoryVO
struct ABendPlayerPawn_PlayInventoryVO_Params
{
	struct FName                                       VOToPlay;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.PlayerPawn_Climb
struct ABendPlayerPawn_PlayerPawn_Climb_Params
{
};

// Function BendGame.BendPlayerPawn.PawnDetectedPlayerHandler
struct ABendPlayerPawn_PawnDetectedPlayerHandler_Params
{
	class ABendPawn*                                   DetectingPawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AwarenessLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnWalkModeTogglePressed
struct ABendPlayerPawn_OnWalkModeTogglePressed_Params
{
};

// Function BendGame.BendPlayerPawn.OnWalkModeReleased
struct ABendPlayerPawn_OnWalkModeReleased_Params
{
};

// Function BendGame.BendPlayerPawn.OnWalkModePressed
struct ABendPlayerPawn_OnWalkModePressed_Params
{
};

// Function BendGame.BendPlayerPawn.OnStopJump
struct ABendPlayerPawn_OnStopJump_Params
{
};

// Function BendGame.BendPlayerPawn.OnStopAiming
struct ABendPlayerPawn_OnStopAiming_Params
{
};

// Function BendGame.BendPlayerPawn.OnStartJump
struct ABendPlayerPawn_OnStartJump_Params
{
};

// Function BendGame.BendPlayerPawn.OnStartAiming
struct ABendPlayerPawn_OnStartAiming_Params
{
};

// Function BendGame.BendPlayerPawn.OnReload
struct ABendPlayerPawn_OnReload_Params
{
};

// Function BendGame.BendPlayerPawn.OnPrevWeapon
struct ABendPlayerPawn_OnPrevWeapon_Params
{
};

// Function BendGame.BendPlayerPawn.OnPlayerLookChanged
struct ABendPlayerPawn_OnPlayerLookChanged_Params
{
};

// Function BendGame.BendPlayerPawn.OnNextWeapon
struct ABendPlayerPawn_OnNextWeapon_Params
{
};

// Function BendGame.BendPlayerPawn.OnNextThrownWeapon
struct ABendPlayerPawn_OnNextThrownWeapon_Params
{
};

// Function BendGame.BendPlayerPawn.OnMoveRight
struct ABendPlayerPawn_OnMoveRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnMoveLeft
struct ABendPlayerPawn_OnMoveLeft_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnMoveForward
struct ABendPlayerPawn_OnMoveForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnMoveBackward
struct ABendPlayerPawn_OnMoveBackward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnInventoryConsumableItemUsed
struct ABendPlayerPawn_OnInventoryConsumableItemUsed_Params
{
	class UInventoryItemConsumable*                    Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UGameplayEffect*                             Effect;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FActiveGameplayEffectHandle                 GE_Handle;                                                // (Parm)
};

// Function BendGame.BendPlayerPawn.OnGameplayCueEvent
struct ABendPlayerPawn_OnGameplayCueEvent_Params
{
	TEnumAsByte<EGameplayCueEvent>                     eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayCueParameters                      Parameters;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendPlayerPawn.OnFailedActionBecauseOutOfStamina
struct ABendPlayerPawn_OnFailedActionBecauseOutOfStamina_Params
{
};

// Function BendGame.BendPlayerPawn.OnDriftStartRingCheck
struct ABendPlayerPawn_OnDriftStartRingCheck_Params
{
};

// Function BendGame.BendPlayerPawn.OnDriftEndRingCheck
struct ABendPlayerPawn_OnDriftEndRingCheck_Params
{
	float                                              TotalDriftTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnDodgeRollStartRingCheck
struct ABendPlayerPawn_OnDodgeRollStartRingCheck_Params
{
};

// Function BendGame.BendPlayerPawn.OnCounterAttackSuccessful
struct ABendPlayerPawn_OnCounterAttackSuccessful_Params
{
};

// Function BendGame.BendPlayerPawn.OnCoolMeleeAttackSuccessful
struct ABendPlayerPawn_OnCoolMeleeAttackSuccessful_Params
{
};

// Function BendGame.BendPlayerPawn.OnCoolMeleeAttackFailed
struct ABendPlayerPawn_OnCoolMeleeAttackFailed_Params
{
};

// Function BendGame.BendPlayerPawn.OnCollectibleDiscovered
struct ABendPlayerPawn_OnCollectibleDiscovered_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnClimbStartRingCheck
struct ABendPlayerPawn_OnClimbStartRingCheck_Params
{
};

// Function BendGame.BendPlayerPawn.OnCinematicStarted
struct ABendPlayerPawn_OnCinematicStarted_Params
{
	struct FName                                       CinematicName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.OnCanDoCoolMeleeAttackStarted
struct ABendPlayerPawn_OnCanDoCoolMeleeAttackStarted_Params
{
};

// Function BendGame.BendPlayerPawn.OnCanDoCoolMeleeAttackEnded
struct ABendPlayerPawn_OnCanDoCoolMeleeAttackEnded_Params
{
};

// Function BendGame.BendPlayerPawn.OnAdrenalineMeterFull
struct ABendPlayerPawn_OnAdrenalineMeterFull_Params
{
};

// Function BendGame.BendPlayerPawn.OnAdrenalineDeactivated
struct ABendPlayerPawn_OnAdrenalineDeactivated_Params
{
};

// Function BendGame.BendPlayerPawn.OnAdrenalineActivated
struct ABendPlayerPawn_OnAdrenalineActivated_Params
{
};

// Function BendGame.BendPlayerPawn.NotifyTrustModified
struct ABendPlayerPawn_NotifyTrustModified_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ModificationAmount;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.MoveRight
struct ABendPlayerPawn_MoveRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.MoveForward
struct ABendPlayerPawn_MoveForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.LookUpDelta
struct ABendPlayerPawn_LookUpDelta_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.LookUp
struct ABendPlayerPawn_LookUp_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.LeftInfestation
struct ABendPlayerPawn_LeftInfestation_Params
{
	class UBendNestingZone*                            Zone;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.LeftCoverHandler
struct ABendPlayerPawn_LeftCoverHandler_Params
{
};

// Function BendGame.BendPlayerPawn.LeavingEncampmentRange
struct ABendPlayerPawn_LeavingEncampmentRange_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.LeavingEncampment
struct ABendPlayerPawn_LeavingEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.IsWalkModeActivated
struct ABendPlayerPawn_IsWalkModeActivated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.IsAimed
struct ABendPlayerPawn_IsAimed_Params
{
	TEnumAsByte<EEquippableSlot>                       weaponSlot;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.IncrementFireEffectCount
struct ABendPlayerPawn_IncrementFireEffectCount_Params
{
	bool                                               IncrementPositive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.IncreaseAdrenalinMeter
struct ABendPlayerPawn_IncreaseAdrenalinMeter_Params
{
	float                                              IncAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.IncreaseAdrenalineMeter
struct ABendPlayerPawn_IncreaseAdrenalineMeter_Params
{
	float                                              IncAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkillTag
struct ABendPlayerPawn_HasAcquiredSkillTag_Params
{
	struct FGameplayTag                                SkillTag;                                                 // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkillID
struct ABendPlayerPawn_HasAcquiredSkillID_Params
{
	TEnumAsByte<EInventorySkillID>                     SkillID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_OnTheMove
struct ABendPlayerPawn_HasAcquiredSkill_OnTheMove_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeMultiHit
struct ABendPlayerPawn_HasAcquiredSkill_MeleeMultiHit_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeKnifeCombo
struct ABendPlayerPawn_HasAcquiredSkill_MeleeKnifeCombo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeHeavyHit
struct ABendPlayerPawn_HasAcquiredSkill_MeleeHeavyHit_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeCriticalHitMultiplier
struct ABendPlayerPawn_HasAcquiredSkill_MeleeCriticalHitMultiplier_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeCriticalHitChance
struct ABendPlayerPawn_HasAcquiredSkill_MeleeCriticalHitChance_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeCombos
struct ABendPlayerPawn_HasAcquiredSkill_MeleeCombos_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_MeleeComboEnderHitIncrease
struct ABendPlayerPawn_HasAcquiredSkill_MeleeComboEnderHitIncrease_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_LightningReflexes
struct ABendPlayerPawn_HasAcquiredSkill_LightningReflexes_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_KneeShot
struct ABendPlayerPawn_HasAcquiredSkill_KneeShot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_ItsATrap
struct ABendPlayerPawn_HasAcquiredSkill_ItsATrap_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_IncreaseMeleeDurabilityTwo
struct ABendPlayerPawn_HasAcquiredSkill_IncreaseMeleeDurabilityTwo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_IncreaseMeleeDurability
struct ABendPlayerPawn_HasAcquiredSkill_IncreaseMeleeDurability_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_IncreaseMeleeDamage
struct ABendPlayerPawn_HasAcquiredSkill_IncreaseMeleeDamage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_IncreasedConsumableEffects
struct ABendPlayerPawn_HasAcquiredSkill_IncreasedConsumableEffects_Params
{
	TEnumAsByte<EPlayerAttributeType>                  AttributeType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_IncreaseCraftedDamage
struct ABendPlayerPawn_HasAcquiredSkill_IncreaseCraftedDamage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_HittingTheSweetSpot
struct ABendPlayerPawn_HasAcquiredSkill_HittingTheSweetSpot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_FastAndDeadly
struct ABendPlayerPawn_HasAcquiredSkill_FastAndDeadly_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_EyeForDetail
struct ABendPlayerPawn_HasAcquiredSkill_EyeForDetail_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_DesperateStrength
struct ABendPlayerPawn_HasAcquiredSkill_DesperateStrength_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_DeadEye
struct ABendPlayerPawn_HasAcquiredSkill_DeadEye_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_ChainReaction
struct ABendPlayerPawn_HasAcquiredSkill_ChainReaction_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_BrickWallDeacon
struct ABendPlayerPawn_HasAcquiredSkill_BrickWallDeacon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_Adrenaline
struct ABendPlayerPawn_HasAcquiredSkill_Adrenaline_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.HasAcquiredSkill_ActNatural
struct ABendPlayerPawn_HasAcquiredSkill_ActNatural_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetStuckVehicleRecoveryEntry
struct ABendPlayerPawn_GetStuckVehicleRecoveryEntry_Params
{
	struct FBendCrumbPathData                          ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPlayerPawn.GetShotgunReloadSkillCount
struct ABendPlayerPawn_GetShotgunReloadSkillCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetPlayerFlashlight
struct ABendPlayerPawn_GetPlayerFlashlight_Params
{
	class UBendSpotLightComponent*                     ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetMeleeTierLevel
struct ABendPlayerPawn_GetMeleeTierLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetLastVehicleRecoveryDataEntry
struct ABendPlayerPawn_GetLastVehicleRecoveryDataEntry_Params
{
	struct FBendCrumbPathData                          ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPlayerPawn.GetJumpEnabled
struct ABendPlayerPawn_GetJumpEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetInventoryComponent
struct ABendPlayerPawn_GetInventoryComponent_Params
{
	class UPlayerInventoryComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetInteractManager_Secondary
struct ABendPlayerPawn_GetInteractManager_Secondary_Params
{
	class UInteractManager*                            ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetInteractManager
struct ABendPlayerPawn_GetInteractManager_Params
{
	class UInteractManager*                            ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetInsideRatio
struct ABendPlayerPawn_GetInsideRatio_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetHealthIncreaseOnHeadshot
struct ABendPlayerPawn_GetHealthIncreaseOnHeadshot_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetFocusModeSphere
struct ABendPlayerPawn_GetFocusModeSphere_Params
{
	class UStaticMeshComponent*                        ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetFocalDistance
struct ABendPlayerPawn_GetFocalDistance_Params
{
	float                                              MinDistance;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetCurrentChallengeDriftTime
struct ABendPlayerPawn_GetCurrentChallengeDriftTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetBlindFireAccuracySkillModifier
struct ABendPlayerPawn_GetBlindFireAccuracySkillModifier_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetAttributeManager
struct ABendPlayerPawn_GetAttributeManager_Params
{
	class UCharacterAttributeManager*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetAimAtPawn
struct ABendPlayerPawn_GetAimAtPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetAdrenalinMeter
struct ABendPlayerPawn_GetAdrenalinMeter_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.GetAdrenalineMeter
struct ABendPlayerPawn_GetAdrenalineMeter_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ForceWalkModeOff
struct ABendPlayerPawn_ForceWalkModeOff_Params
{
};

// Function BendGame.BendPlayerPawn.EnteredInfestation
struct ABendPlayerPawn_EnteredInfestation_Params
{
	class UBendNestingZone*                            Zone;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.EnteredEncampmentRange
struct ABendPlayerPawn_EnteredEncampmentRange_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.EnteredEncampment
struct ABendPlayerPawn_EnteredEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.EnteredCoverHandler
struct ABendPlayerPawn_EnteredCoverHandler_Params
{
};

// Function BendGame.BendPlayerPawn.EndBodyCarry
struct ABendPlayerPawn_EndBodyCarry_Params
{
};

// Function BendGame.BendPlayerPawn.DetachBodyCarry
struct ABendPlayerPawn_DetachBodyCarry_Params
{
};

// Function BendGame.BendPlayerPawn.DestroyStealthKillPrompt
struct ABendPlayerPawn_DestroyStealthKillPrompt_Params
{
};

// Function BendGame.BendPlayerPawn.DecreaseAdrenalinMeter
struct ABendPlayerPawn_DecreaseAdrenalinMeter_Params
{
	float                                              DecAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.DecreaseAdrenalineMeter
struct ABendPlayerPawn_DecreaseAdrenalineMeter_Params
{
	float                                              DecAmount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.DeactivateAdrenalinMode
struct ABendPlayerPawn_DeactivateAdrenalinMode_Params
{
};

// Function BendGame.BendPlayerPawn.DeactivateAdrenalineMode
struct ABendPlayerPawn_DeactivateAdrenalineMode_Params
{
};

// Function BendGame.BendPlayerPawn.CreateStealthKillPrompt
struct ABendPlayerPawn_CreateStealthKillPrompt_Params
{
};

// Function BendGame.BendPlayerPawn.ConsumeHealthRecoveryItem
struct ABendPlayerPawn_ConsumeHealthRecoveryItem_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ClearVehicleAttachItems
struct ABendPlayerPawn_ClearVehicleAttachItems_Params
{
};

// Function BendGame.BendPlayerPawn.ClearDLCRings
struct ABendPlayerPawn_ClearDLCRings_Params
{
};

// Function BendGame.BendPlayerPawn.ClearAllVehicleRecoveryPoints
struct ABendPlayerPawn_ClearAllVehicleRecoveryPoints_Params
{
};

// Function BendGame.BendPlayerPawn.CheckAmmoCounts_Code
struct ABendPlayerPawn_CheckAmmoCounts_Code_Params
{
};

// Function BendGame.BendPlayerPawn.CanAimCheck
struct ABendPlayerPawn_CanAimCheck_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnWeaponStoppedOverheating
struct ABendPlayerPawn_BroadcastEventOnWeaponStoppedOverheating_Params
{
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnWeaponPartAttachedDetached
struct ABendPlayerPawn_BroadcastEventOnWeaponPartAttachedDetached_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeaponPart*                             Part;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnWeaponBeganOverheating
struct ABendPlayerPawn_BroadcastEventOnWeaponBeganOverheating_Params
{
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnReloadStarted
struct ABendPlayerPawn_BroadcastEventOnReloadStarted_Params
{
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnReloadFinished
struct ABendPlayerPawn_BroadcastEventOnReloadFinished_Params
{
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnHealthRegainedFromHeadshot
struct ABendPlayerPawn_BroadcastEventOnHealthRegainedFromHeadshot_Params
{
};

// Function BendGame.BendPlayerPawn.BroadcastEventOnAmmoCapacityChanged
struct ABendPlayerPawn_BroadcastEventOnAmmoCapacityChanged_Params
{
};

// Function BendGame.BendPlayerPawn.AttachMeleeIconToPawn
struct ABendPlayerPawn_AttachMeleeIconToPawn_Params
{
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECoolMeleeType>                        MeleeType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendButtonPressEventBlueprintSupport*       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.AttachBodyCarry
struct ABendPlayerPawn_AttachBodyCarry_Params
{
};

// Function BendGame.BendPlayerPawn.AskToRecoverStuckVehicle
struct ABendPlayerPawn_AskToRecoverStuckVehicle_Params
{
};

// Function BendGame.BendPlayerPawn.ApplyDLCRings
struct ABendPlayerPawn_ApplyDLCRings_Params
{
};

// Function BendGame.BendPlayerPawn.AnimNotify_StartAnimCam
struct ABendPlayerPawn_AnimNotify_StartAnimCam_Params
{
	struct FsCamTransitionData                         transData;                                                // (Parm)
	bool                                               DisableCollision;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinCollisionDist;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                numProbes;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               testCollision;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                forceCamBone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.AnimNotify_EndAnimCam
struct ABendPlayerPawn_AnimNotify_EndAnimCam_Params
{
	struct FsCamTransitionData                         transData;                                                // (Parm)
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.AnimNotify_AnimCamCut
struct ABendPlayerPawn_AnimNotify_AnimCamCut_Params
{
	int                                                forceCamBone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.AddVehicleAttachItem
struct ABendPlayerPawn_AddVehicleAttachItem_Params
{
	class AActor*                                      AttachActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AVehiclePawn*                                AttachVehicle;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemSocket;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ActivateUnderArmorAutoHealthRegeneration
struct ABendPlayerPawn_ActivateUnderArmorAutoHealthRegeneration_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerPawn.ActivateAdrenalinMode
struct ABendPlayerPawn_ActivateAdrenalinMode_Params
{
};

// Function BendGame.BendPlayerPawn.ActivateAdrenalineMode
struct ABendPlayerPawn_ActivateAdrenalineMode_Params
{
};

// Function BendGame.BendCamManager.TopFollowCamLookAt
struct ABendCamManager_TopFollowCamLookAt_Params
{
	struct FVector                                     lookAtPos;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              lookTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               interruptable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aimCamsLookToo;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.SetInputCurve
struct ABendCamManager_SetInputCurve_Params
{
	TEnumAsByte<EeInputCurveSetting>                   NewSetting;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.SetDebugInput
struct ABendCamManager_SetDebugInput_Params
{
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.SetDebugDraw
struct ABendCamManager_SetDebugDraw_Params
{
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.SetCameraCutThisFrame
struct ABendCamManager_SetCameraCutThisFrame_Params
{
};

// Function BendGame.BendCamManager.RemoveFocusActor
struct ABendCamManager_RemoveFocusActor_Params
{
	class USkeletalMeshComponent*                      SkelMesh;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCamManager.OverrideFOV
struct ABendCamManager_OverrideFOV_Params
{
	float                                              FOV;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsUsingRightShoulder
struct ABendCamManager_IsUsingRightShoulder_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsShaking
struct ABendCamManager_IsShaking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsPlayerMovingCamera
struct ABendCamManager_IsPlayerMovingCamera_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsDrifting
struct ABendCamManager_IsDrifting_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsDebugLog
struct ABendCamManager_IsDebugLog_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsDebugInput
struct ABendCamManager_IsDebugInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsDebugDraw
struct ABendCamManager_IsDebugDraw_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsDebugCamActive
struct ABendCamManager_IsDebugCamActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsCamLookAtActive
struct ABendCamManager_IsCamLookAtActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsBouncing
struct ABendCamManager_IsBouncing_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.IsActiveCamTransitionCam
struct ABendCamManager_IsActiveCamTransitionCam_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.InstantUpdate
struct ABendCamManager_InstantUpdate_Params
{
};

// Function BendGame.BendCamManager.GetZoomRemember
struct ABendCamManager_GetZoomRemember_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetWindowCam
struct ABendCamManager_GetWindowCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleWaterCam
struct ABendCamManager_GetVehicleWaterCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleWaterBoostCam
struct ABendCamManager_GetVehicleWaterBoostCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleFollowCam
struct ABendCamManager_GetVehicleFollowCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleCombatCam
struct ABendCamManager_GetVehicleCombatCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleBoostCam
struct ABendCamManager_GetVehicleBoostCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetVehicleAimCam
struct ABendCamManager_GetVehicleAimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetTrackVehicleYaw
struct ABendCamManager_GetTrackVehicleYaw_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetTrackVehicleAimYaw
struct ABendCamManager_GetTrackVehicleAimYaw_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetTrackFollowYaw
struct ABendCamManager_GetTrackFollowYaw_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetThrowAimCam
struct ABendCamManager_GetThrowAimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetSwimCam
struct ABendCamManager_GetSwimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetSprintCam
struct ABendCamManager_GetSprintCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetScopeCam
struct ABendCamManager_GetScopeCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetReloadAimCam
struct ABendCamManager_GetReloadAimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetPopCams
struct ABendCamManager_GetPopCams_Params
{
	TArray<class UBendCamBase*>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendCamManager.GetPopCam
struct ABendCamManager_GetPopCam_Params
{
	struct FString                                     Name;                                                     // (ConstParm, Parm, ZeroConstructor)
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetPhotoModeCam
struct ABendCamManager_GetPhotoModeCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetMenuCam
struct ABendCamManager_GetMenuCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetMeleeKillCam
struct ABendCamManager_GetMeleeKillCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetMeleeCam
struct ABendCamManager_GetMeleeCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetManualAimCam
struct ABendCamManager_GetManualAimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetLadderCam
struct ABendCamManager_GetLadderCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetInteriorSprintCam
struct ABendCamManager_GetInteriorSprintCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetInteriorCrouchCam
struct ABendCamManager_GetInteriorCrouchCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetInteriorCombatCam
struct ABendCamManager_GetInteriorCombatCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetInteriorCam
struct ABendCamManager_GetInteriorCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetHighCoverCam
struct ABendCamManager_GetHighCoverCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetGrappleCam
struct ABendCamManager_GetGrappleCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetFollowCam
struct ABendCamManager_GetFollowCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetFallingCam
struct ABendCamManager_GetFallingCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDodgeCam
struct ABendCamManager_GetDodgeCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDeltaViewRotation
struct ABendCamManager_GetDeltaViewRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDebugNpcCam
struct ABendCamManager_GetDebugNpcCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDebugCam
struct ABendCamManager_GetDebugCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDebugAngleCam
struct ABendCamManager_GetDebugAngleCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetDeathCam
struct ABendCamManager_GetDeathCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCrouchCam
struct ABendCamManager_GetCrouchCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCrouchAimCam
struct ABendCamManager_GetCrouchAimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCoverCam
struct ABendCamManager_GetCoverCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCombatCam
struct ABendCamManager_GetCombatCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetClimbThroughCam
struct ABendCamManager_GetClimbThroughCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetClimbingCam
struct ABendCamManager_GetClimbingCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCinematicCutCam
struct ABendCamManager_GetCinematicCutCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCameraViewPointNoDebug
struct ABendCamManager_GetCameraViewPointNoDebug_Params
{
	struct FVector                                     OutCamLoc;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OutCamRot;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetCamera
struct ABendCamManager_GetCamera_Params
{
	class UClass*                                      camClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetBushCam
struct ABendCamManager_GetBushCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetAnimCam
struct ABendCamManager_GetAnimCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetActiveCamOrDebugCam
struct ABendCamManager_GetActiveCamOrDebugCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.GetActiveCam
struct ABendCamManager_GetActiveCam_Params
{
	class UBendCamBase*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamManager.DisableSixAxisAim
struct ABendCamManager_DisableSixAxisAim_Params
{
	bool                                               shouldDisable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.DeactivateMenuCam
struct ABendCamManager_DeactivateMenuCam_Params
{
};

// Function BendGame.BendCamManager.DeactivateDebugCam
struct ABendCamManager_DeactivateDebugCam_Params
{
};

// Function BendGame.BendCamManager.DeactivateCam
struct ABendCamManager_DeactivateCam_Params
{
	class UBendCamBase*                                cam;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CancelShake
struct ABendCamManager_CancelShake_Params
{
	float                                              cancelTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CancelOverrideFOV
struct ABendCamManager_CancelOverrideFOV_Params
{
};

// Function BendGame.BendCamManager.CancelDrift
struct ABendCamManager_CancelDrift_Params
{
	float                                              cancelTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CancelCamLookAt
struct ABendCamManager_CancelCamLookAt_Params
{
};

// Function BendGame.BendCamManager.CancelBounce
struct ABendCamManager_CancelBounce_Params
{
	float                                              cancelTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CamShakeAdvanced
struct ABendCamManager_CamShakeAdvanced_Params
{
	float                                              ShakeMagnitude;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ShakeDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              minCycleTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              maxCycleTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              initMagMult;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              cycleMagMult;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              yawMagMult;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pitchMagMult;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CamShake
struct ABendCamManager_CamShake_Params
{
	float                                              ShakeMagnitude;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ShakeDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CamLookAtActor
struct ABendCamManager_CamLookAtActor_Params
{
	class AActor*                                      LookAtActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              lookTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               interruptable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aimCamsLookToo;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              yawOffset;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pitchOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              yawMaxPerSec;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pitchMaxPerSec;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CamDrift
struct ABendCamManager_CamDrift_Params
{
	float                                              ShakeMagnitude;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              cycleTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pitchMagMult;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.CamBounce
struct ABendCamManager_CamBounce_Params
{
	float                                              ShakeMagnitude;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.ApplyUserSettings
struct ABendCamManager_ApplyUserSettings_Params
{
	class UGameUserSettings*                           InUserSettings;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.AddFocusActor
struct ABendCamManager_AddFocusActor_Params
{
	class USkeletalMeshComponent*                      SkelMesh;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FStop;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.ActivateNpcDebugCam
struct ABendCamManager_ActivateNpcDebugCam_Params
{
	class AActor*                                      npc;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.ActivateMenuCam
struct ABendCamManager_ActivateMenuCam_Params
{
};

// Function BendGame.BendCamManager.ActivateDebugCam
struct ABendCamManager_ActivateDebugCam_Params
{
};

// Function BendGame.BendCamManager.ActivateCam
struct ABendCamManager_ActivateCam_Params
{
	class UBendCamBase*                                cam;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManager.ActivateAngleDebugCam
struct ABendCamManager_ActivateAngleDebugCam_Params
{
};

// Function BendGame.BendAIPlayerController.PlayerAINavigationResult
struct ABendAIPlayerController_PlayerAINavigationResult_Params
{
	struct FPlayerAINavRequestInfo                     NavRequestInfo;                                           // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIPlayerController.OnPawnTookDamage
struct ABendAIPlayerController_OnPawnTookDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventorySlot.StorageType
struct UInventorySlot_StorageType_Params
{
	TEnumAsByte<EInventoryItemStorage>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.SlotContainsItem
struct UInventorySlot_SlotContainsItem_Params
{
	bool                                               IncludeCountCheck;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.IsEmpty
struct UInventorySlot_IsEmpty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.GetStorage
struct UInventorySlot_GetStorage_Params
{
	class UInventoryStorageBase*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.GetSlotMaxCount
struct UInventorySlot_GetSlotMaxCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.GetItemTexture
struct UInventorySlot_GetItemTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.GetInventoryItem
struct UInventorySlot_GetInventoryItem_Params
{
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.GetCount
struct UInventorySlot_GetCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.DisplayNewItemBadge
struct UInventorySlot_DisplayNewItemBadge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventorySlot.CountValid
struct UInventorySlot_CountValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryStorageBase.GetStorageType
struct UInventoryStorageBase_GetStorageType_Params
{
	TEnumAsByte<EInventoryItemStorage>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryStorageBase.GetSlot
struct UInventoryStorageBase_GetSlot_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventorySlot*                              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.InventoryStorageBase.GetNumSlots
struct UInventoryStorageBase_GetNumSlots_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryLootStorage.IncreaseCraftingComponentCapacity
struct UInventoryLootStorage_IncreaseCraftingComponentCapacity_Params
{
	int                                                ComponentMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                WeaponMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryLootStorage.GetScrapCount
struct UInventoryLootStorage_GetScrapCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryLootStorage.GetQuickHealItems
struct UInventoryLootStorage_GetQuickHealItems_Params
{
	TArray<struct FInventoryStorageConsumableItemDetails> OutItems;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.InventoryLootStorage.GetConsumableItemDetails
struct UInventoryLootStorage_GetConsumableItemDetails_Params
{
	TEnumAsByte<EPlayerAttributeType>                  Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FInventoryStorageConsumableItemDetails> OutItems;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.InventoryLootStorage.AjustMaxCraftingComponentCapacity
struct UInventoryLootStorage_AjustMaxCraftingComponentCapacity_Params
{
	int                                                Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryLootStorage.AdjustScrapCount
struct UInventoryLootStorage_AdjustScrapCount_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.WasLastInputKeyFromSteamInput
struct ABendPlayerController_WasLastInputKeyFromSteamInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.WasInputActionJustReleased
struct ABendPlayerController_WasInputActionJustReleased_Params
{
	struct FName                                       ActioName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.WasInputActionJustPressed
struct ABendPlayerController_WasInputActionJustPressed_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.VibrateController
struct ABendPlayerController_VibrateController_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsLeftLarge;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsLeftSmall;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsRightLarge;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsRightSmall;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDynamicForceFeedbackAction>           Action;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.BendPlayerController.UpdateUnderArmorOnBuffTick
struct ABendPlayerController_UpdateUnderArmorOnBuffTick_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.UpdateIfCanExitVehicle
struct ABendPlayerController_UpdateIfCanExitVehicle_Params
{
	bool                                               ForceturnOff;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.UpdateAfterImagesCount
struct ABendPlayerController_UpdateAfterImagesCount_Params
{
	int                                                Added;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.UnSuppressThrottleBrake
struct ABendPlayerController_UnSuppressThrottleBrake_Params
{
};

// Function BendGame.BendPlayerController.TurnPlayerFlashlightOnOff
struct ABendPlayerController_TurnPlayerFlashlightOnOff_Params
{
	bool                                               TurnOn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.TurnOnRockThrowPostProcess
struct ABendPlayerController_TurnOnRockThrowPostProcess_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.TurnOnCinematicPause
struct ABendPlayerController_TurnOnCinematicPause_Params
{
};

// Function BendGame.BendPlayerController.TryToCounterAttack
struct ABendPlayerController_TryToCounterAttack_Params
{
};

// Function BendGame.BendPlayerController.TryForceWeaponSwapTap
struct ABendPlayerController_TryForceWeaponSwapTap_Params
{
};

// Function BendGame.BendPlayerController.TryAutoTraversal
struct ABendPlayerController_TryAutoTraversal_Params
{
};

// Function BendGame.BendPlayerController.ToggleUseVehicleBlindfire
struct ABendPlayerController_ToggleUseVehicleBlindfire_Params
{
};

// Function BendGame.BendPlayerController.ToggleUseBikePickupAnim
struct ABendPlayerController_ToggleUseBikePickupAnim_Params
{
};

// Function BendGame.BendPlayerController.ToggleSurvivalVisionCodeImpl
struct ABendPlayerController_ToggleSurvivalVisionCodeImpl_Params
{
};

// Function BendGame.BendPlayerController.TogglePhotoMode
struct ABendPlayerController_TogglePhotoMode_Params
{
};

// Function BendGame.BendPlayerController.TogglePauseMenu
struct ABendPlayerController_TogglePauseMenu_Params
{
};

// Function BendGame.BendPlayerController.ToggleFocusModeCodeImpl
struct ABendPlayerController_ToggleFocusModeCodeImpl_Params
{
};

// Function BendGame.BendPlayerController.ToggleDrawAiSound
struct ABendPlayerController_ToggleDrawAiSound_Params
{
};

// Function BendGame.BendPlayerController.ToggleBinoculars
struct ABendPlayerController_ToggleBinoculars_Params
{
};

// Function BendGame.BendPlayerController.ThrowManualAimThrowable
struct ABendPlayerController_ThrowManualAimThrowable_Params
{
};

// Function BendGame.BendPlayerController.SwitchCameraDebugMode
struct ABendPlayerController_SwitchCameraDebugMode_Params
{
};

// Function BendGame.BendPlayerController.SwapWeaponTraps
struct ABendPlayerController_SwapWeaponTraps_Params
{
};

// Function BendGame.BendPlayerController.SwapWeaponThrowables
struct ABendPlayerController_SwapWeaponThrowables_Params
{
};

// Function BendGame.BendPlayerController.SwapWeaponDistractions
struct ABendPlayerController_SwapWeaponDistractions_Params
{
};

// Function BendGame.BendPlayerController.SwapToSpecialWeapon
struct ABendPlayerController_SwapToSpecialWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapToSecondaryWeapon
struct ABendPlayerController_SwapToSecondaryWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapToPrimaryWeapon
struct ABendPlayerController_SwapToPrimaryWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapToPreviousWeapon
struct ABendPlayerController_SwapToPreviousWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapToNextWeapon
struct ABendPlayerController_SwapToNextWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapToAlternatePrimaryWeapon
struct ABendPlayerController_SwapToAlternatePrimaryWeapon_Params
{
};

// Function BendGame.BendPlayerController.SwapBetweenPrimaryAndPistol
struct ABendPlayerController_SwapBetweenPrimaryAndPistol_Params
{
};

// Function BendGame.BendPlayerController.SurvivalVisionDisablePostProcessAndStartTimer
struct ABendPlayerController_SurvivalVisionDisablePostProcessAndStartTimer_Params
{
};

// Function BendGame.BendPlayerController.SuppressThrottleBrake
struct ABendPlayerController_SuppressThrottleBrake_Params
{
};

// Function BendGame.BendPlayerController.StopUsingBinoculars
struct ABendPlayerController_StopUsingBinoculars_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.StopScopeZoom
struct ABendPlayerController_StopScopeZoom_Params
{
};

// Function BendGame.BendPlayerController.StopPrimaryFire
struct ABendPlayerController_StopPrimaryFire_Params
{
};

// Function BendGame.BendPlayerController.StopManualAimWeapon
struct ABendPlayerController_StopManualAimWeapon_Params
{
};

// Function BendGame.BendPlayerController.StopManualAimThrowable
struct ABendPlayerController_StopManualAimThrowable_Params
{
};

// Function BendGame.BendPlayerController.StopManualAim
struct ABendPlayerController_StopManualAim_Params
{
};

// Function BendGame.BendPlayerController.StopBlindfireTargetSelect
struct ABendPlayerController_StopBlindfireTargetSelect_Params
{
};

// Function BendGame.BendPlayerController.StopAutoWeaponFireInput
struct ABendPlayerController_StopAutoWeaponFireInput_Params
{
};

// Function BendGame.BendPlayerController.StepOutStarted
struct ABendPlayerController_StepOutStarted_Params
{
};

// Function BendGame.BendPlayerController.StepOutFinished
struct ABendPlayerController_StepOutFinished_Params
{
};

// Function BendGame.BendPlayerController.StepInStarted
struct ABendPlayerController_StepInStarted_Params
{
};

// Function BendGame.BendPlayerController.StepInFinished
struct ABendPlayerController_StepInFinished_Params
{
};

// Function BendGame.BendPlayerController.StartUsingBinoculars
struct ABendPlayerController_StartUsingBinoculars_Params
{
};

// Function BendGame.BendPlayerController.StartScopeZoom
struct ABendPlayerController_StartScopeZoom_Params
{
	bool                                               Increase;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               zoomScroll;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.StartPrimaryFire
struct ABendPlayerController_StartPrimaryFire_Params
{
};

// Function BendGame.BendPlayerController.StartManualAimWeapon
struct ABendPlayerController_StartManualAimWeapon_Params
{
};

// Function BendGame.BendPlayerController.StartManualAimThrowable
struct ABendPlayerController_StartManualAimThrowable_Params
{
};

// Function BendGame.BendPlayerController.StartBlindfireTargetSelect
struct ABendPlayerController_StartBlindfireTargetSelect_Params
{
};

// Function BendGame.BendPlayerController.SprintCheck
struct ABendPlayerController_SprintCheck_Params
{
};

// Function BendGame.BendPlayerController.SpawnWeaponFromMenu
struct ABendPlayerController_SpawnWeaponFromMenu_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponIDToAdd;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UWidget*                                     CallingMenu;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isWeaponMerchant;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SpawnPlayerVehicle
struct ABendPlayerController_SpawnPlayerVehicle_Params
{
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (Parm, IsPlainOldData)
	bool                                               SpawnEvenIfColliding;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SpawnFirstPlayerVehicle
struct ABendPlayerController_SpawnFirstPlayerVehicle_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (Parm, IsPlainOldData)
	bool                                               SpawnEvenIfColliding;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SpawnAssignedVehicle
struct ABendPlayerController_SpawnAssignedVehicle_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               SpawnEvenIfColliding;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ShouldUseVehicleBlindfire
struct ABendPlayerController_ShouldUseVehicleBlindfire_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ShouldUseBinocularSteamInput
struct ABendPlayerController_ShouldUseBinocularSteamInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ShouldSkipButtonEventForNextGrapple
struct ABendPlayerController_ShouldSkipButtonEventForNextGrapple_Params
{
	bool                                               Skip;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetWolfAttackingBike
struct ABendPlayerController_SetWolfAttackingBike_Params
{
	class ABendAIPawn*                                 pWolf;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetSurvivalWheelSlotUnlocked
struct ABendPlayerController_SetSurvivalWheelSlotUnlocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
};

// Function BendGame.BendPlayerController.SetSurvivalWheelSlotLocked
struct ABendPlayerController_SetSurvivalWheelSlotLocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
};

// Function BendGame.BendPlayerController.SetSurvivalWheelItemUnlocked
struct ABendPlayerController_SetSurvivalWheelItemUnlocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
};

// Function BendGame.BendPlayerController.SetSurvivalWheelItemLocked
struct ABendPlayerController_SetSurvivalWheelItemLocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
};

// Function BendGame.BendPlayerController.SetStaminaToMax
struct ABendPlayerController_SetStaminaToMax_Params
{
};

// Function BendGame.BendPlayerController.SetSprinting
struct ABendPlayerController_SetSprinting_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetShouldStartWithRandomWeapon
struct ABendPlayerController_SetShouldStartWithRandomWeapon_Params
{
	bool                                               ShouldStartWithRandomWeapon;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetRightShoulder
struct ABendPlayerController_SetRightShoulder_Params
{
	bool                                               use;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetPlayerLocationType
struct ABendPlayerController_SetPlayerLocationType_Params
{
	TEnumAsByte<EPlayerLocationType>                   LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetPauseWithCameraTick
struct ABendPlayerController_SetPauseWithCameraTick_Params
{
	bool                                               bPause;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetLastQuickSelectedByTag
struct ABendPlayerController_SetLastQuickSelectedByTag_Params
{
	struct FName                                       TagName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendWeapon*                                 WeaponSelected;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetIsEnteringOutOfBounds
struct ABendPlayerController_SetIsEnteringOutOfBounds_Params
{
	bool                                               isEntering;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetFocusToMax
struct ABendPlayerController_SetFocusToMax_Params
{
};

// Function BendGame.BendPlayerController.SetAssignedVehicle
struct ABendPlayerController_SetAssignedVehicle_Params
{
	class AVehiclePawn*                                InAssignedVehicle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetAllowVehicleManualAim
struct ABendPlayerController_SetAllowVehicleManualAim_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SetAllowVehicleBlindfire
struct ABendPlayerController_SetAllowVehicleBlindfire_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ServerCheatAll
struct ABendPlayerController_ServerCheatAll_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function BendGame.BendPlayerController.ServerCheat
struct ABendPlayerController_ServerCheat_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function BendGame.BendPlayerController.SelectNewBlindfireTarget
struct ABendPlayerController_SelectNewBlindfireTarget_Params
{
	bool                                               RightOfCurrentTarget;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.SelectBlindfireTarget_FaceButtonTop
struct ABendPlayerController_SelectBlindfireTarget_FaceButtonTop_Params
{
};

// Function BendGame.BendPlayerController.SelectBlindfireTarget_FaceButtonRight
struct ABendPlayerController_SelectBlindfireTarget_FaceButtonRight_Params
{
};

// Function BendGame.BendPlayerController.SelectBlindfireTarget_FaceButtonLeft
struct ABendPlayerController_SelectBlindfireTarget_FaceButtonLeft_Params
{
};

// Function BendGame.BendPlayerController.SelectBlindfireTarget_FaceButtonBottom
struct ABendPlayerController_SelectBlindfireTarget_FaceButtonBottom_Params
{
};

// Function BendGame.BendPlayerController.ResetSurvivalWheelLockedSlots
struct ABendPlayerController_ResetSurvivalWheelLockedSlots_Params
{
};

// Function BendGame.BendPlayerController.ResetSurvivalWheelItemLocks
struct ABendPlayerController_ResetSurvivalWheelItemLocks_Params
{
};

// Function BendGame.BendPlayerController.ResetControllerLightColor
struct ABendPlayerController_ResetControllerLightColor_Params
{
};

// Function BendGame.BendPlayerController.RequestPlayerAINavigation
struct ABendPlayerController_RequestPlayerAINavigation_Params
{
	struct FPlayerAINavRequestInfo                     PlayerAINavRequest;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.RemoveLoadingTipFromContextualQueue
struct ABendPlayerController_RemoveLoadingTipFromContextualQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.RemoveDLCLoadingTipFromContextualQueue
struct ABendPlayerController_RemoveDLCLoadingTipFromContextualQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ReceiveSetNegateDamage
struct ABendPlayerController_ReceiveSetNegateDamage_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayUnlockingSkillSoundSelect
struct ABendPlayerController_PlayUnlockingSkillSoundSelect_Params
{
	class USoundCue*                                   ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayUnlockingSkillSoundPurchase
struct ABendPlayerController_PlayUnlockingSkillSoundPurchase_Params
{
	class USoundCue*                                   ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayTutorialAppearSound
struct ABendPlayerController_PlayTutorialAppearSound_Params
{
	class USoundCue*                                   ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayMechanicSound
struct ABendPlayerController_PlayMechanicSound_Params
{
	class USoundCue*                                   ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayLockerSound
struct ABendPlayerController_PlayLockerSound_Params
{
	class USoundCue*                                   ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PlayDisplayNotificationSound
struct ABendPlayerController_PlayDisplayNotificationSound_Params
{
	class USoundBase*                                  ToBePlayed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.PauseOnFocusLost
struct ABendPlayerController_PauseOnFocusLost_Params
{
};

// Function BendGame.BendPlayerController.PauseOnFocusGained
struct ABendPlayerController_PauseOnFocusGained_Params
{
};

// Function BendGame.BendPlayerController.OpenPauseMenu
struct ABendPlayerController_OpenPauseMenu_Params
{
};

// Function BendGame.BendPlayerController.OnTutorialBoostInputPressed
struct ABendPlayerController_OnTutorialBoostInputPressed_Params
{
};

// Function BendGame.BendPlayerController.OnSurvivalWheelReleased
struct ABendPlayerController_OnSurvivalWheelReleased_Params
{
	bool                                               bFromBike;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnSurvivalWheelPressed
struct ABendPlayerController_OnSurvivalWheelPressed_Params
{
	bool                                               bFromBike;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnRep_CheatMovement
struct ABendPlayerController_OnRep_CheatMovement_Params
{
};

// Function BendGame.BendPlayerController.OnPlayerInventoryModified
struct ABendPlayerController_OnPlayerInventoryModified_Params
{
	struct FInventoryOperation                         Operation;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendPlayerController.OnPawnSet
struct ABendPlayerController_OnPawnSet_Params
{
	class APawn*                                       InPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnOverlayOpened
struct ABendPlayerController_OnOverlayOpened_Params
{
};

// Function BendGame.BendPlayerController.OnKeyJustPressed
struct ABendPlayerController_OnKeyJustPressed_Params
{
	struct FKey                                        Key;                                                      // (Parm, OutParm)
};

// Function BendGame.BendPlayerController.OnJumpPressed
struct ABendPlayerController_OnJumpPressed_Params
{
};

// Function BendGame.BendPlayerController.OnEnemyKilledRingCheckHorde
struct ABendPlayerController_OnEnemyKilledRingCheckHorde_Params
{
	class USkeletalMeshComponent*                      VictimPawn;                                               // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WasCriticalHit;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnEnemyKilledRingCheck
struct ABendPlayerController_OnEnemyKilledRingCheck_Params
{
	class ABendPawn*                                   VictimPawn;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WasCriticalHit;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnDeactivatedSurvivalVision
struct ABendPlayerController_OnDeactivatedSurvivalVision_Params
{
};

// Function BendGame.BendPlayerController.OnControllerConnectionChange
struct ABendPlayerController_OnControllerConnectionChange_Params
{
	bool                                               bConnected;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.OnAITeamSystemStarted
struct ABendPlayerController_OnAITeamSystemStarted_Params
{
};

// Function BendGame.BendPlayerController.OnActivatedSurvivalVision
struct ABendPlayerController_OnActivatedSurvivalVision_Params
{
};

// Function BendGame.BendPlayerController.NotifyPauseMenuOpened
struct ABendPlayerController_NotifyPauseMenuOpened_Params
{
};

// Function BendGame.BendPlayerController.NotifyPauseMenuClosed
struct ABendPlayerController_NotifyPauseMenuClosed_Params
{
};

// Function BendGame.BendPlayerController.NeedCounter
struct ABendPlayerController_NeedCounter_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.MarkInVislog
struct ABendPlayerController_MarkInVislog_Params
{
};

// Function BendGame.BendPlayerController.LeaveCover
struct ABendPlayerController_LeaveCover_Params
{
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsVehicleManualAimAllowed
struct ABendPlayerController_IsVehicleManualAimAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsVehicleBlindfireAllowed
struct ABendPlayerController_IsVehicleBlindfireAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsThrottleBrakeSuppressed
struct ABendPlayerController_IsThrottleBrakeSuppressed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsSwimming
struct ABendPlayerController_IsSwimming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsSurvivalWheelSlotLocked
struct ABendPlayerController_IsSurvivalWheelSlotLocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsSurvivalWheelItemLocked
struct ABendPlayerController_IsSurvivalWheelItemLocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsPhotoModeAvailable
struct ABendPlayerController_IsPhotoModeAvailable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsPawnCenterScreen
struct ABendPlayerController_IsPawnCenterScreen_Params
{
	class ABendPawn*                                   BendPawn;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              degreesFromCenter;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDist;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsPauseMenuActive
struct ABendPlayerController_IsPauseMenuActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsLeavingCover
struct ABendPlayerController_IsLeavingCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsInVehicle
struct ABendPlayerController_IsInVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsInsideBush
struct ABendPlayerController_IsInsideBush_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsInScopeMode
struct ABendPlayerController_IsInScopeMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsInRangeOfSaveInteract
struct ABendPlayerController_IsInRangeOfSaveInteract_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsInputActionDown
struct ABendPlayerController_IsInputActionDown_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsExternalOverlayActive
struct ABendPlayerController_IsExternalOverlayActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsEnemy
struct ABendPlayerController_IsEnemy_Params
{
	class ABendPawn*                                   BendPawn;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsBikeLookBehindActive
struct ABendPlayerController_IsBikeLookBehindActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsBeingGrappled
struct ABendPlayerController_IsBeingGrappled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsAnyInputKeyDown
struct ABendPlayerController_IsAnyInputKeyDown_Params
{
	TArray<struct FKey>                                Keys;                                                     // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsAnyInputActionDown
struct ABendPlayerController_IsAnyInputActionDown_Params
{
	TArray<struct FName>                               Actions;                                                  // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.IsAiming
struct ABendPlayerController_IsAiming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.InTreeCover
struct ABendPlayerController_InTreeCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.HideWeaponUI
struct ABendPlayerController_HideWeaponUI_Params
{
	bool                                               HideWpnUI;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.HeldExitTheVehicle
struct ABendPlayerController_HeldExitTheVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.HasRecentMouseInput
struct ABendPlayerController_HasRecentMouseInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.HasMouseInputThisTick
struct ABendPlayerController_HasMouseInputThisTick_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.HandleManualAimInputPressed
struct ABendPlayerController_HandleManualAimInputPressed_Params
{
};

// Function BendGame.BendPlayerController.GivePlayerKillEXP
struct ABendPlayerController_GivePlayerKillEXP_Params
{
	int                                                Experience;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetUseBikePickupAnim
struct ABendPlayerController_GetUseBikePickupAnim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetSlomoPercent
struct ABendPlayerController_GetSlomoPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetShouldStartWithRandomWeapon
struct ABendPlayerController_GetShouldStartWithRandomWeapon_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetPausedStatus
struct ABendPlayerController_GetPausedStatus_Params
{
	bool                                               IsGamePaused;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               CameraTickEnabled;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetMovementInput
struct ABendPlayerController_GetMovementInput_Params
{
	float                                              StrafeVal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ForwardVal;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bGetJoystickInputOnly;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetMountedVehicle
struct ABendPlayerController_GetMountedVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetLookInput
struct ABendPlayerController_GetLookInput_Params
{
	float                                              TurnVal;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              LookUpVal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bGetJoystickInputOnly;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetLastInputKey
struct ABendPlayerController_GetLastInputKey_Params
{
	struct FKey                                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPlayerController.GetKeysFromAction
struct ABendPlayerController_GetKeysFromAction_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FKey>                                keysOut;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendPlayerController.GetIsWolfAttackBikeActive
struct ABendPlayerController_GetIsWolfAttackBikeActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetIsAutoTraverseActive
struct ABendPlayerController_GetIsAutoTraverseActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetInventoryComponent
struct ABendPlayerController_GetInventoryComponent_Params
{
	class UPlayerInventoryComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetInputActionKeyTimeDown
struct ABendPlayerController_GetInputActionKeyTimeDown_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetInputActionAnalogKeyState
struct ABendPlayerController_GetInputActionAnalogKeyState_Params
{
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetEnemyToMark_NEW
struct ABendPlayerController_GetEnemyToMark_NEW_Params
{
	class UBendCalloutWidgetComponent*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetEnemyToMark
struct ABendPlayerController_GetEnemyToMark_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCurrentSaveZoneType
struct ABendPlayerController_GetCurrentSaveZoneType_Params
{
	TEnumAsByte<ESaveZoneTypes>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCurrentInputDevice
struct ABendPlayerController_GetCurrentInputDevice_Params
{
	TEnumAsByte<EConsoleForGamepadLabels>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCoverTangent
struct ABendPlayerController_GetCoverTangent_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCoverNormal
struct ABendPlayerController_GetCoverNormal_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCoverAnchorPosition
struct ABendPlayerController_GetCoverAnchorPosition_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetClosestCornerHandleForStepOut
struct ABendPlayerController_GetClosestCornerHandleForStepOut_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetClosestCornerHandleForStepIn
struct ABendPlayerController_GetClosestCornerHandleForStepIn_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetCamManager
struct ABendPlayerController_GetCamManager_Params
{
	class ABendCamManager*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetBendPlayerPawn
struct ABendPlayerController_GetBendPlayerPawn_Params
{
	class ABendPlayerPawn*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetBendHUD
struct ABendPlayerController_GetBendHUD_Params
{
	class ABendHUD*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetAttributeManager
struct ABendPlayerController_GetAttributeManager_Params
{
	class UCharacterAttributeManager*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetAssignedVehicle
struct ABendPlayerController_GetAssignedVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.GetAIControllerNoCheck
struct ABendPlayerController_GetAIControllerNoCheck_Params
{
	class AAIController*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ForcePlayerUnCrouch
struct ABendPlayerController_ForcePlayerUnCrouch_Params
{
};

// Function BendGame.BendPlayerController.ForcePlayerCrouch
struct ABendPlayerController_ForcePlayerCrouch_Params
{
};

// Function BendGame.BendPlayerController.EnterExitSaveZone
struct ABendPlayerController_EnterExitSaveZone_Params
{
	bool                                               isEntering;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveZoneTypes>                        SaveZoneType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.EnablePlayerInputBlockerCustom
struct ABendPlayerController_EnablePlayerInputBlockerCustom_Params
{
	TArray<struct FName>                               AllowedActions;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendPlayerController.EnablePlayerInputBlockerAllowCam
struct ABendPlayerController_EnablePlayerInputBlockerAllowCam_Params
{
};

// Function BendGame.BendPlayerController.EnablePlayerInputBlocker
struct ABendPlayerController_EnablePlayerInputBlocker_Params
{
};

// Function BendGame.BendPlayerController.EnableBikeLookBehind
struct ABendPlayerController_EnableBikeLookBehind_Params
{
	class UClass*                                      camClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DoTheActionOnCircleButton
struct ABendPlayerController_DoTheActionOnCircleButton_Params
{
};

// Function BendGame.BendPlayerController.DoneTurningInCover
struct ABendPlayerController_DoneTurningInCover_Params
{
};

// Function BendGame.BendPlayerController.DoneEnteringCover
struct ABendPlayerController_DoneEnteringCover_Params
{
};

// Function BendGame.BendPlayerController.DisplayWeaponReturnedToLocker
struct ABendPlayerController_DisplayWeaponReturnedToLocker_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	int                                                AmmoReturned;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DisablePlayerInputBlockerCustom
struct ABendPlayerController_DisablePlayerInputBlockerCustom_Params
{
};

// Function BendGame.BendPlayerController.DisablePlayerInputBlockerAllowCam
struct ABendPlayerController_DisablePlayerInputBlockerAllowCam_Params
{
};

// Function BendGame.BendPlayerController.DisablePlayerInputBlocker
struct ABendPlayerController_DisablePlayerInputBlocker_Params
{
};

// Function BendGame.BendPlayerController.DisableBikeLookBehind
struct ABendPlayerController_DisableBikeLookBehind_Params
{
};

// Function BendGame.BendPlayerController.DebugCamUp
struct ABendPlayerController_DebugCamUp_Params
{
	bool                                               Pressed;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DebugCamDown
struct ABendPlayerController_DebugCamDown_Params
{
	bool                                               Pressed;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DeactivateSurvivalVisionCodeImpl
struct ABendPlayerController_DeactivateSurvivalVisionCodeImpl_Params
{
	bool                                               PlayExitSound;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DeactivateGrappleOverlayEffect
struct ABendPlayerController_DeactivateGrappleOverlayEffect_Params
{
	bool                                               Instant;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DeactivateFocusModeCodeImpl
struct ABendPlayerController_DeactivateFocusModeCodeImpl_Params
{
	bool                                               PlayExitSound;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.DeactivateFocusMode_NEW
struct ABendPlayerController_DeactivateFocusMode_NEW_Params
{
	bool                                               PlayExitSound;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.CycleSecondaryBlindfireTarget
struct ABendPlayerController_CycleSecondaryBlindfireTarget_Params
{
};

// Function BendGame.BendPlayerController.CODE_EndSwimming
struct ABendPlayerController_CODE_EndSwimming_Params
{
};

// Function BendGame.BendPlayerController.CODE_BeginSwimming
struct ABendPlayerController_CODE_BeginSwimming_Params
{
};

// Function BendGame.BendPlayerController.CloseWeaponWheel_Blueprint
struct ABendPlayerController_CloseWeaponWheel_Blueprint_Params
{
};

// Function BendGame.BendPlayerController.ClosePauseMenu
struct ABendPlayerController_ClosePauseMenu_Params
{
};

// Function BendGame.BendPlayerController.ClientPawnDied
struct ABendPlayerController_ClientPawnDied_Params
{
	class APawn*                                       LastPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpectateLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ClearWolfAttackingBike
struct ABendPlayerController_ClearWolfAttackingBike_Params
{
};

// Function BendGame.BendPlayerController.ClearTouchMenuInputOverrideIfNeeded
struct ABendPlayerController_ClearTouchMenuInputOverrideIfNeeded_Params
{
};

// Function BendGame.BendPlayerController.ClearBikeDriftInput
struct ABendPlayerController_ClearBikeDriftInput_Params
{
};

// Function BendGame.BendPlayerController.CheckSlidingForDLCSkill
struct ABendPlayerController_CheckSlidingForDLCSkill_Params
{
};

// Function BendGame.BendPlayerController.CheckForUnderArmorBuffRing
struct ABendPlayerController_CheckForUnderArmorBuffRing_Params
{
};

// Function BendGame.BendPlayerController.CheckFlashback_Blueprint
struct ABendPlayerController_CheckFlashback_Blueprint_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.CheatAll
struct ABendPlayerController_CheatAll_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function BendGame.BendPlayerController.Cheat
struct ABendPlayerController_Cheat_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function BendGame.BendPlayerController.CanWeaponBeSwapped
struct ABendPlayerController_CanWeaponBeSwapped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.CancelCurrentPlayerNavigation
struct ABendPlayerController_CancelCurrentPlayerNavigation_Params
{
};

// Function BendGame.BendPlayerController.CanActivateWeaponWheel
struct ABendPlayerController_CanActivateWeaponWheel_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.BroadcastEventOnBikeManualAimSlowdownStopped
struct ABendPlayerController_BroadcastEventOnBikeManualAimSlowdownStopped_Params
{
};

// Function BendGame.BendPlayerController.BroadcastEventOnBikeManualAimSlowdownStarted
struct ABendPlayerController_BroadcastEventOnBikeManualAimSlowdownStarted_Params
{
};

// Function BendGame.BendPlayerController.AutoDetectLastInputIsGamepad
struct ABendPlayerController_AutoDetectLastInputIsGamepad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AttemptSelectDebugNPC
struct ABendPlayerController_AttemptSelectDebugNPC_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AttemptQuickRecovery
struct ABendPlayerController_AttemptQuickRecovery_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AssignVehicleToPlayer
struct ABendPlayerController_AssignVehicleToPlayer_Params
{
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AssignVehicleToFirstPlayer
struct ABendPlayerController_AssignVehicleToFirstPlayer_Params
{
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AreBinocularsInUse
struct ABendPlayerController_AreBinocularsInUse_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ApplyUserSettings
struct ABendPlayerController_ApplyUserSettings_Params
{
	class UGameUserSettings*                           InUserSettings;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AmbushHitReactTick
struct ABendPlayerController_AmbushHitReactTick_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AmbushHitReactForceStop
struct ABendPlayerController_AmbushHitReactForceStop_Params
{
};

// Function BendGame.BendPlayerController.AmbushHitReactEnd
struct ABendPlayerController_AmbushHitReactEnd_Params
{
};

// Function BendGame.BendPlayerController.AmbushHitReactBegin
struct ABendPlayerController_AmbushHitReactBegin_Params
{
	float                                              TotalDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AimStanceChangedHandler
struct ABendPlayerController_AimStanceChangedHandler_Params
{
	TEnumAsByte<EAimStance>                            NewAimStance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAimStance>                            OldAimStance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AddLoadingTipToContextualQueue
struct ABendPlayerController_AddLoadingTipToContextualQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.AddDLCLoadingTipToContextualQueue
struct ABendPlayerController_AddDLCLoadingTipToContextualQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ActorInPlayerViewWithOffset
struct ABendPlayerController_ActorInPlayerViewWithOffset_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ComponentLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ActorInPlayerView
struct ABendPlayerController_ActorInPlayerView_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerController.ActivateSurvivalVisionCodeImpl
struct ABendPlayerController_ActivateSurvivalVisionCodeImpl_Params
{
};

// Function BendGame.BendPlayerController.ActivateGrappleOverlayEffect
struct ABendPlayerController_ActivateGrappleOverlayEffect_Params
{
};

// Function BendGame.BendPlayerController.ActivateFocusModeCodeImpl
struct ABendPlayerController_ActivateFocusModeCodeImpl_Params
{
};

// Function BendGame.BendAimAssistTargetComponent.EnableActorsAimAssistTargets
struct UBendAimAssistTargetComponent_EnableActorsAimAssistTargets_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAimAssistTargetComponent.DisableActorsAimAssistTargets
struct UBendAimAssistTargetComponent_DisableActorsAimAssistTargets_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAimAssistTargetComponent.ActorHasAimAssistTarget
struct UBendAimAssistTargetComponent_ActorHasAimAssistTarget_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.SwitchHands
struct ABendWeapon_SwitchHands_Params
{
};

// Function BendGame.BendWeapon.SpawnShellCasing
struct ABendWeapon_SpawnShellCasing_Params
{
};

// Function BendGame.BendWeapon.SetWeaponStats
struct ABendWeapon_SetWeaponStats_Params
{
	struct FInventoryItemStats                         Stats;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetWeaponInfiniteAmmo
struct ABendWeapon_SetWeaponInfiniteAmmo_Params
{
	bool                                               InfiniteAmmo;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetWeaponHealthToMax
struct ABendWeapon_SetWeaponHealthToMax_Params
{
};

// Function BendGame.BendWeapon.SetWeaponHealth
struct ABendWeapon_SetWeaponHealth_Params
{
	int                                                iNewHealth;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetupWeaponsConfigBasedOnAmmoType
struct ABendWeapon_SetupWeaponsConfigBasedOnAmmoType_Params
{
};

// Function BendGame.BendWeapon.SetMuzzleFlashPFX
struct ABendWeapon_SetMuzzleFlashPFX_Params
{
	class UParticleSystem*                             MuzzleFX;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetMinAccuracyModifier
struct ABendWeapon_SetMinAccuracyModifier_Params
{
	float                                              MinAccuracyPercentage;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SetForOneFrame;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetEquipHand
struct ABendWeapon_SetEquipHand_Params
{
	TEnumAsByte<EEquippableSlot>                       targetHand;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetCurrentDurability
struct ABendWeapon_SetCurrentDurability_Params
{
	float                                              Durability;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetCurrentAmmoInClip
struct ABendWeapon_SetCurrentAmmoInClip_Params
{
	int                                                iNewClipAmmoAmt;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetClipMesh
struct ABendWeapon_SetClipMesh_Params
{
};

// Function BendGame.BendWeapon.SetAmmoType
struct ABendWeapon_SetAmmoType_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.SetAimAtActor
struct ABendWeapon_SetAimAtActor_Params
{
	class AActor*                                      pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.RemovePartFromWeapon
struct ABendWeapon_RemovePartFromWeapon_Params
{
	TEnumAsByte<EWeaponHardPoint>                      HardPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnWeaponStoppedOverheating
struct ABendWeapon_OnWeaponStoppedOverheating_Params
{
};

// Function BendGame.BendWeapon.OnWeaponPinRemoved
struct ABendWeapon_OnWeaponPinRemoved_Params
{
};

// Function BendGame.BendWeapon.OnWeaponOverheated
struct ABendWeapon_OnWeaponOverheated_Params
{
};

// Function BendGame.BendWeapon.OnWeaponDisarmed
struct ABendWeapon_OnWeaponDisarmed_Params
{
};

// Function BendGame.BendWeapon.OnWeaponArmed
struct ABendWeapon_OnWeaponArmed_Params
{
};

// Function BendGame.BendWeapon.OnThrowWeapon
struct ABendWeapon_OnThrowWeapon_Params
{
};

// Function BendGame.BendWeapon.OnShellLoaded
struct ABendWeapon_OnShellLoaded_Params
{
};

// Function BendGame.BendWeapon.OnReloadStarted
struct ABendWeapon_OnReloadStarted_Params
{
};

// Function BendGame.BendWeapon.OnReloadFinished
struct ABendWeapon_OnReloadFinished_Params
{
};

// Function BendGame.BendWeapon.OnPartRemoved
struct ABendWeapon_OnPartRemoved_Params
{
	class ABendWeaponPart*                             WeaponPart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnPartAdded
struct ABendWeapon_OnPartAdded_Params
{
	class ABendWeaponPart*                             WeaponPart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnOutOfAmmo
struct ABendWeapon_OnOutOfAmmo_Params
{
};

// Function BendGame.BendWeapon.OnFireOnEmpty
struct ABendWeapon_OnFireOnEmpty_Params
{
};

// Function BendGame.BendWeapon.OnFired
struct ABendWeapon_OnFired_Params
{
};

// Function BendGame.BendWeapon.OnExitScopeMode
struct ABendWeapon_OnExitScopeMode_Params
{
};

// Function BendGame.BendWeapon.OnExitNoScopeZoomMode
struct ABendWeapon_OnExitNoScopeZoomMode_Params
{
};

// Function BendGame.BendWeapon.OnEnterScopeMode
struct ABendWeapon_OnEnterScopeMode_Params
{
};

// Function BendGame.BendWeapon.OnEnterNoScopeZoomMode
struct ABendWeapon_OnEnterNoScopeZoomMode_Params
{
};

// Function BendGame.BendWeapon.OnDropThrowable
struct ABendWeapon_OnDropThrowable_Params
{
};

// Function BendGame.BendWeapon.OnDamaged
struct ABendWeapon_OnDamaged_Params
{
	bool                                               OwnerIsPlayer;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WeaponsHealthPercentage;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnCurWeaponConfigRebuilt
struct ABendWeapon_OnCurWeaponConfigRebuilt_Params
{
};

// Function BendGame.BendWeapon.OnClipRemoved
struct ABendWeapon_OnClipRemoved_Params
{
	int                                                MaterialIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnClipLoaded
struct ABendWeapon_OnClipLoaded_Params
{
	int                                                MaterialIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.OnBaseMaterialSet
struct ABendWeapon_OnBaseMaterialSet_Params
{
};

// Function BendGame.BendWeapon.OnAmmoTakenFromBike
struct ABendWeapon_OnAmmoTakenFromBike_Params
{
	int                                                AmmoTaken;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.NotifyPinHasBeenRemoved
struct ABendWeapon_NotifyPinHasBeenRemoved_Params
{
};

// Function BendGame.BendWeapon.MeleeOnImpact
struct ABendWeapon_MeleeOnImpact_Params
{
	class AActor*                                      ActorHit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  HitResult;                                                // (Parm)
	struct FVector                                     CurrentPosition;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastPosition;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                BodyHitIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsWeaponPartGuidAttached
struct ABendWeapon_IsWeaponPartGuidAttached_Params
{
	struct FInventoryGuid                              Guid;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsWeaponCollisionEnabled
struct ABendWeapon_IsWeaponCollisionEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsWeaponBroken
struct ABendWeapon_IsWeaponBroken_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsWeaponArmed
struct ABendWeapon_IsWeaponArmed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsTrap
struct ABendWeapon_IsTrap_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsThrown
struct ABendWeapon_IsThrown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsRocket
struct ABendWeapon_IsRocket_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsProp
struct ABendWeapon_IsProp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsPendingReload
struct ABendWeapon_IsPendingReload_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsMelee
struct ABendWeapon_IsMelee_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsGun
struct ABendWeapon_IsGun_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsCrossbow
struct ABendWeapon_IsCrossbow_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.IsBow
struct ABendWeapon_IsBow_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.HideInGame
struct ABendWeapon_HideInGame_Params
{
	bool                                               bHide;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.HasScope
struct ABendWeapon_HasScope_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.HasPartAttached
struct ABendWeapon_HasPartAttached_Params
{
	TEnumAsByte<EWeaponHardPoint>                      HardPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.HasInfiniteAmmo
struct ABendWeapon_HasInfiniteAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.HasHitAnyone
struct ABendWeapon_HasHitAnyone_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponType
struct ABendWeapon_GetWeaponType_Params
{
	TEnumAsByte<EWeaponType>                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponStats
struct ABendWeapon_GetWeaponStats_Params
{
	struct FInventoryItemStats                         Stats;                                                    // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponRarityFromFloat
struct ABendWeapon_GetWeaponRarityFromFloat_Params
{
	float                                              WeaponRarityAsFloat;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponRarity>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponRarityAsFloat
struct ABendWeapon_GetWeaponRarityAsFloat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponRarity
struct ABendWeapon_GetWeaponRarity_Params
{
	TEnumAsByte<EWeaponRarity>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponMaxHealth
struct ABendWeapon_GetWeaponMaxHealth_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponHealthReductionPerHit
struct ABendWeapon_GetWeaponHealthReductionPerHit_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponHealthPercentage
struct ABendWeapon_GetWeaponHealthPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetWeaponHealth
struct ABendWeapon_GetWeaponHealth_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetTimeDilationValueForMeleeHitOnBike
struct ABendWeapon_GetTimeDilationValueForMeleeHitOnBike_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetTimeDilationValueForMeleeCriticalHit
struct ABendWeapon_GetTimeDilationValueForMeleeCriticalHit_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetSpawnedByNPCOrPickup
struct ABendWeapon_GetSpawnedByNPCOrPickup_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetSpareAmmo
struct ABendWeapon_GetSpareAmmo_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetReticleAccuracyPercentage
struct ABendWeapon_GetReticleAccuracyPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetRepairCost
struct ABendWeapon_GetRepairCost_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetRandomBurstNum
struct ABendWeapon_GetRandomBurstNum_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetPickupBlueprint
struct ABendWeapon_GetPickupBlueprint_Params
{
	class UBlueprint*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetNPCAmmoDropRange
struct ABendWeapon_GetNPCAmmoDropRange_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMuzzleLocation
struct ABendWeapon_GetMuzzleLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMuzzleDirection
struct ABendWeapon_GetMuzzleDirection_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMinVelocityForMeleeHitTimeDilationOnBike
struct ABendWeapon_GetMinVelocityForMeleeHitTimeDilationOnBike_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMinNumSecToLeaveVictimInStunState
struct ABendWeapon_GetMinNumSecToLeaveVictimInStunState_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMinAccuracyRadius
struct ABendWeapon_GetMinAccuracyRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeWeaponType
struct ABendWeapon_GetMeleeWeaponType_Params
{
	TEnumAsByte<EMeleeType>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeStaminaUsedPerHit
struct ABendWeapon_GetMeleeStaminaUsedPerHit_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeDamageType
struct ABendWeapon_GetMeleeDamageType_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeCollisionComponent
struct ABendWeapon_GetMeleeCollisionComponent_Params
{
	class UBendWeaponOverlapComponent*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeChargingAnimPlayRate
struct ABendWeapon_GetMeleeChargingAnimPlayRate_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeChargingAnimation
struct ABendWeapon_GetMeleeChargingAnimation_Params
{
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeCanUsePlayRateCurve
struct ABendWeapon_GetMeleeCanUsePlayRateCurve_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeButtonHoldForHardHitTime
struct ABendWeapon_GetMeleeButtonHoldForHardHitTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMeleeArmAndReadyAnimationOnBike
struct ABendWeapon_GetMeleeArmAndReadyAnimationOnBike_Params
{
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMaxSpareAmmo
struct ABendWeapon_GetMaxSpareAmmo_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMaxRange
struct ABendWeapon_GetMaxRange_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMaxNumSecToLeaveVictimInStunState
struct ABendWeapon_GetMaxNumSecToLeaveVictimInStunState_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetMaxAccuracyRadius
struct ABendWeapon_GetMaxAccuracyRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetInventoryWeaponID
struct ABendWeapon_GetInventoryWeaponID_Params
{
	TEnumAsByte<EInventoryWeaponID>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetIdealBlindfireRange
struct ABendWeapon_GetIdealBlindfireRange_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetFireAnimSequence
struct ABendWeapon_GetFireAnimSequence_Params
{
	class UAnimSequence*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetEquipHand
struct ABendWeapon_GetEquipHand_Params
{
	TEnumAsByte<EEquippableSlot>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetCurrentDurabilityPercentage
struct ABendWeapon_GetCurrentDurabilityPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetCurrentDurability
struct ABendWeapon_GetCurrentDurability_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetCurrentAmmoInClip
struct ABendWeapon_GetCurrentAmmoInClip_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetCurrentAccuracyPercentage
struct ABendWeapon_GetCurrentAccuracyPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetCameraDamageStartLocation
struct ABendWeapon_GetCameraDamageStartLocation_Params
{
	struct FVector                                     AimDir;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetAmmoPerClip
struct ABendWeapon_GetAmmoPerClip_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetAimAtPoint
struct ABendWeapon_GetAimAtPoint_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetAimAtDir
struct ABendWeapon_GetAimAtDir_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.GetAimAtActor
struct ABendWeapon_GetAimAtActor_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.ForceReduceCurrentAccuracyPercentage
struct ABendWeapon_ForceReduceCurrentAccuracyPercentage_Params
{
	float                                              PercentReduction;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.ForceRebuildWeaponsConfig
struct ABendWeapon_ForceRebuildWeaponsConfig_Params
{
};

// Function BendGame.BendWeapon.ForceFire
struct ABendWeapon_ForceFire_Params
{
	bool                                               PlayAnimations;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon.FindWeaponPart
struct ABendWeapon_FindWeaponPart_Params
{
	TEnumAsByte<EWeaponHardPoint>                      HardPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeaponPart*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.DidHitAnyoneLastSwing
struct ABendWeapon_DidHitAnyoneLastSwing_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.CheckMeleeSwingHit
struct ABendWeapon_CheckMeleeSwingHit_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.CanMeleeAttackStunVictim
struct ABendWeapon_CanMeleeAttackStunVictim_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.CanBeStoredInInventory
struct ABendWeapon_CanBeStoredInInventory_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.CanBeHolstered
struct ABendWeapon_CanBeHolstered_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon.AddPartToWeapon
struct ABendWeapon_AddPartToWeapon_Params
{
	TEnumAsByte<EWeaponPartID>                         PartID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHomeArea.GetBrush
struct ABendHomeArea_GetBrush_Params
{
	class UModel*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHomeArea.ContainsPoint
struct ABendHomeArea_ContainsPoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.WaypointSequenceCompleted
struct ABendHumanController_WaypointSequenceCompleted_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.WaypointSequenceActive
struct ABendHumanController_WaypointSequenceActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.TakeScriptedCover
struct ABendHumanController_TakeScriptedCover_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnReachedCover;                                           // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnInvalidated;                                            // (Parm, ZeroConstructor)
	float                                              SearchRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.TakeClosestCoverSlot
struct ABendHumanController_TakeClosestCoverSlot_Params
{
	struct FVector                                     QueryPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECoverLeanDirection>                   LeanDirection;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.StopWaypointSequence
struct ABendHumanController_StopWaypointSequence_Params
{
};

// Function BendGame.BendHumanController.StartWaypointSequence
struct ABendHumanController_StartWaypointSequence_Params
{
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          speedType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetWaypointSequenceSpeed
struct ABendHumanController_SetWaypointSequenceSpeed_Params
{
	TEnumAsByte<EAIMoveSpeed>                          speedType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetWaypointSequenceAcceptableRadius
struct ABendHumanController_SetWaypointSequenceAcceptableRadius_Params
{
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetWaypointSequence
struct ABendHumanController_SetWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     WaypointSequence;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetTargetSequenceIndex
struct ABendHumanController_SetTargetSequenceIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetTargetSequence
struct ABendHumanController_SetTargetSequence_Params
{
	class ABendAIWaypointSequence*                     TargetSequence;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetShouldReactToThrowables
struct ABendHumanController_SetShouldReactToThrowables_Params
{
	bool                                               ShouldReact;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetNavFilterToDefault
struct ABendHumanController_SetNavFilterToDefault_Params
{
};

// Function BendGame.BendHumanController.SetNavFilterPreferRoads
struct ABendHumanController_SetNavFilterPreferRoads_Params
{
};

// Function BendGame.BendHumanController.SetNavFilterOverride
struct ABendHumanController_SetNavFilterOverride_Params
{
	class UClass*                                      newFilter;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetNavFilterAvoidRoads
struct ABendHumanController_SetNavFilterAvoidRoads_Params
{
};

// Function BendGame.BendHumanController.SetMoveToDZParams
struct ABendHumanController_SetMoveToDZParams_Params
{
	bool                                               bMoveDirectly;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRunNow;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetHomePoint
struct ABendHumanController_SetHomePoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetHomeArea
struct ABendHumanController_SetHomeArea_Params
{
	class ABendHomeArea*                               NewArea;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetFortifications
struct ABendHumanController_SetFortifications_Params
{
	TArray<class ABendFortificationZone*>              Fortifications;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendHumanController.SetFireFocus
struct ABendHumanController_SetFireFocus_Params
{
	class AActor*                                      FireFocus;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetCoverState
struct ABendHumanController_SetCoverState_Params
{
	TEnumAsByte<ECoverState>                           NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetCanShoot
struct ABendHumanController_SetCanShoot_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetCanMelee
struct ABendHumanController_SetCanMelee_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.SetAimAtActor
struct ABendHumanController_SetAimAtActor_Params
{
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.ScriptedThrowThrowableAtPoint
struct ABendHumanController_ScriptedThrowThrowableAtPoint_Params
{
	struct FVector                                     TargetPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryWeaponID>                    throwableID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverideThrowSpeed;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnFinishedThrow;                                          // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.ScriptedThrowThrowableAtActor
struct ABendHumanController_ScriptedThrowThrowableAtActor_Params
{
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryWeaponID>                    throwableID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverideThrowSpeed;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnFinishedThrow;                                          // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.ScriptedEnterVehicle
struct ABendHumanController_ScriptedEnterVehicle_Params
{
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          MoveSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AcceptableRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SlowApproach;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RunNow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnEnteredVehicle;                                         // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnFailed;                                                 // (Parm, ZeroConstructor)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.RunBehaviorTree
struct ABendHumanController_RunBehaviorTree_Params
{
	class UBehaviorTree*                               BTAsset;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.ResumeWaypointSequenceAtIndex
struct ABendHumanController_ResumeWaypointSequenceAtIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.ResumeWaypointSequence
struct ABendHumanController_ResumeWaypointSequence_Params
{
	bool                                               UseClosestWaypoint;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.ResumeTargetSequence
struct ABendHumanController_ResumeTargetSequence_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.RequestAreaSearch
struct ABendHumanController_RequestAreaSearch_Params
{
	bool                                               search;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.RemoveFortification
struct ABendHumanController_RemoveFortification_Params
{
	class ABendFortificationZone*                      Fortification;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.RemoveAimAtActor
struct ABendHumanController_RemoveAimAtActor_Params
{
};

// Function BendGame.BendHumanController.OnStatusEffectStarted
struct ABendHumanController_OnStatusEffectStarted_Params
{
	class UStatusEffect*                               NewStatusEffect;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.OnPawnTakeDamage
struct ABendHumanController_OnPawnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsSurrendering
struct ABendHumanController_IsSurrendering_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsSuicideArchetype
struct ABendHumanController_IsSuicideArchetype_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsSniperArchetype
struct ABendHumanController_IsSniperArchetype_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsPathingOnWaypointSequence
struct ABendHumanController_IsPathingOnWaypointSequence_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsOnFire
struct ABendHumanController_IsOnFire_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsMeleeArchetype
struct ABendHumanController_IsMeleeArchetype_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsInSelectedFortification
struct ABendHumanController_IsInSelectedFortification_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsInPostCombat
struct ABendHumanController_IsInPostCombat_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.IsHeavyArchetype
struct ABendHumanController_IsHeavyArchetype_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.HomePointIsValid
struct ABendHumanController_HomePointIsValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.HomeAreaIsValid
struct ABendHumanController_HomeAreaIsValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.HasWaypointSequence
struct ABendHumanController_HasWaypointSequence_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.HasTargetSequence
struct ABendHumanController_HasTargetSequence_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.HasSelectedFortification
struct ABendHumanController_HasSelectedFortification_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetSuicideFireStatusEffect
struct ABendHumanController_GetSuicideFireStatusEffect_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetSearchSettingsBP
struct ABendHumanController_GetSearchSettingsBP_Params
{
	struct FBendSemiAwareTuningValues                  ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendHumanController.GetNumFortifications
struct ABendHumanController_GetNumFortifications_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetNextWaypoint
struct ABendHumanController_GetNextWaypoint_Params
{
	class ABendAIWaypoint*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetNextNextWaypoint
struct ABendHumanController_GetNextNextWaypoint_Params
{
	class ABendAIWaypoint*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetHomePoint
struct ABendHumanController_GetHomePoint_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetHomeArea
struct ABendHumanController_GetHomeArea_Params
{
	class ABendHomeArea*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetFortification
struct ABendHumanController_GetFortification_Params
{
	int                                                I;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendFortificationZone*                      ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.GetAimAtActor
struct ABendHumanController_GetAimAtActor_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.FreezeTargetSequence
struct ABendHumanController_FreezeTargetSequence_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.ForceSemiAwareStateForTime
struct ABendHumanController_ForceSemiAwareStateForTime_Params
{
	struct FVector                                     semiAwarePos;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESemiAwareState>                       SemiAwareState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESemiAwareActionType>                  ActionType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceAwareness;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.ForceSemiAwareState
struct ABendHumanController_ForceSemiAwareState_Params
{
	struct FVector                                     semiAwarePos;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESemiAwareState>                       SemiAwareState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESemiAwareActionType>                  ActionType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceAwareness;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanController.CompareWaypointSequence
struct ABendHumanController_CompareWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     InWaypointSequence;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanController.ClearHomePoint
struct ABendHumanController_ClearHomePoint_Params
{
};

// Function BendGame.BendHumanController.ClearHomeArea
struct ABendHumanController_ClearHomeArea_Params
{
};

// Function BendGame.BendHumanController.ClearFortifications
struct ABendHumanController_ClearFortifications_Params
{
};

// Function BendGame.BendHumanController.AddFortifications
struct ABendHumanController_AddFortifications_Params
{
	TArray<class ABendFortificationZone*>              Fortifications;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendHumanController.AddFortification
struct ABendHumanController_AddFortification_Params
{
	class ABendFortificationZone*                      Fortification;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.UpdateRubberbandParams
struct ABendMotorcycleRiderController_UpdateRubberbandParams_Params
{
	struct FRubberbandParams                           RubberbandParams;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderController.UpdatePaceParameters
struct ABendMotorcycleRiderController_UpdatePaceParameters_Params
{
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderController.StopRubberbanding
struct ABendMotorcycleRiderController_StopRubberbanding_Params
{
};

// Function BendGame.BendMotorcycleRiderController.StopPacing
struct ABendMotorcycleRiderController_StopPacing_Params
{
};

// Function BendGame.BendMotorcycleRiderController.StopDrivingNoPath
struct ABendMotorcycleRiderController_StopDrivingNoPath_Params
{
};

// Function BendGame.BendMotorcycleRiderController.StartRubberbanding
struct ABendMotorcycleRiderController_StartRubberbanding_Params
{
	class ABendPawn*                                   DistanceCheckActor;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRubberbandParams                           RubberbandParams;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.StartPacing
struct ABendMotorcycleRiderController_StartPacing_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.StartDrivingNoPath
struct ABendMotorcycleRiderController_StartDrivingNoPath_Params
{
};

// Function BendGame.BendMotorcycleRiderController.SetDriveDestinationPath
struct ABendMotorcycleRiderController_SetDriveDestinationPath_Params
{
	TArray<class AAIVehicleWaypoint*>                  WaypointList;                                             // (Parm, ZeroConstructor)
	TEnumAsByte<EVehicleAILoopType>                    LoopType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.SetDriveDestinationBendSplinePath
struct ABendMotorcycleRiderController_SetDriveDestinationBendSplinePath_Params
{
	class ABendSplinePath*                             BendSplinePath;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.SetDriveDestination
struct ABendMotorcycleRiderController_SetDriveDestination_Params
{
	class AAIVehicleWaypoint*                          Destination;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.SetAllowAutoCornerSpeed
struct ABendMotorcycleRiderController_SetAllowAutoCornerSpeed_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.Reset
struct ABendMotorcycleRiderController_Reset_Params
{
};

// Function BendGame.BendMotorcycleRiderController.PaceGroupFrontRunner
struct ABendMotorcycleRiderController_PaceGroupFrontRunner_Params
{
	class UBendMotorcycleRiderGroup*                   motoGroup;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.PaceBehind
struct ABendMotorcycleRiderController_PaceBehind_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.PaceAlongside
struct ABendMotorcycleRiderController_PaceAlongside_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParemeters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.PaceAhead
struct ABendMotorcycleRiderController_PaceAhead_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.IsOnBike
struct ABendMotorcycleRiderController_IsOnBike_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.IsInDriverSeat
struct ABendMotorcycleRiderController_IsInDriverSeat_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.IsBendSplinePathOverrideSet
struct ABendMotorcycleRiderController_IsBendSplinePathOverrideSet_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.IsAutoCornerSpeedAllowed
struct ABendMotorcycleRiderController_IsAutoCornerSpeedAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.GetPaceParameters
struct ABendMotorcycleRiderController_GetPaceParameters_Params
{
	struct FPaceParams                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMotorcycleRiderController.FollowTargetNoPath
struct ABendMotorcycleRiderController_FollowTargetNoPath_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 PaceParams;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               Debug;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.DriveToLocationOffSpline
struct ABendMotorcycleRiderController_DriveToLocationOffSpline_Params
{
	class AAIVehicleWaypoint*                          Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.DriveToDestination
struct ABendMotorcycleRiderController_DriveToDestination_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderController.ClearOffSplineLocation
struct ABendMotorcycleRiderController_ClearOffSplineLocation_Params
{
};

// Function BendGame.BendMotorcycleRiderController.ClearBendSplinePath
struct ABendMotorcycleRiderController_ClearBendSplinePath_Params
{
};

// Function BendGame.BendMotorcycleRiderController.ChangePaceMode
struct ABendMotorcycleRiderController_ChangePaceMode_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendPaceType>                         paceType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 paceParameters;                                           // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderController.CancelDrive
struct ABendMotorcycleRiderController_CancelDrive_Params
{
};

// Function BendGame.BendMotoCombatController.StopAttacking
struct ABendMotoCombatController_StopAttacking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotoCombatController.StartAttacking
struct ABendMotoCombatController_StartAttacking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotoCombatController.OnExitAttackRange
struct ABendMotoCombatController_OnExitAttackRange_Params
{
};

// Function BendGame.BendMotoCombatController.OnEnterAttackRange
struct ABendMotoCombatController_OnEnterAttackRange_Params
{
};

// Function BendGame.BendMotoCombatController.GetMotorcycleAttackMode
struct ABendMotoCombatController_GetMotorcycleAttackMode_Params
{
	TEnumAsByte<EeMotorcycleAttackMode>                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.VOEventDisable
struct ABendBuddyController_VOEventDisable_Params
{
	TEnumAsByte<EBuddyVOEvent>                         Event;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetUseCrouchLogic
struct ABendBuddyController_SetUseCrouchLogic_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetTargetDummy
struct ABendBuddyController_SetTargetDummy_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetPreventDamage
struct ABendBuddyController_SetPreventDamage_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetMoveSpeed
struct ABendBuddyController_SetMoveSpeed_Params
{
	float                                              SpeedMin;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SpeedMax;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetLeadZone
struct ABendBuddyController_SetLeadZone_Params
{
	float                                              RadiusInner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RadiusOuter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetLeadDistance
struct ABendBuddyController_SetLeadDistance_Params
{
	float                                              LeadDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WaitDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetLeadBehavior
struct ABendBuddyController_SetLeadBehavior_Params
{
	class ABendAIWaypointSequence*                     WaypointSequence;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LeadDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WaitDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ResumeAfterWaitDelay;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DisableWaiting;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               MaintainLeadDistance;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          SpeedTypeMin;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          SpeedTypeMax;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuddyEnemyEngagement>                 InterruptLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetIdleBehavior
struct ABendBuddyController_SetIdleBehavior_Params
{
	float                                              IdleRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuddyEnemyEngagement>                 InterruptLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetForceDetectable
struct ABendBuddyController_SetForceDetectable_Params
{
	bool                                               Detectable;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetFollowZone
struct ABendBuddyController_SetFollowZone_Params
{
	float                                              FollowRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetFollowIdleZone
struct ABendBuddyController_SetFollowIdleZone_Params
{
	float                                              Unused;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RadiusOuter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetFollowEnable
struct ABendBuddyController_SetFollowEnable_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetFollowBehavior
struct ABendBuddyController_SetFollowBehavior_Params
{
	float                                              FollowRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIMoveSpeed>                          SpeedTypeMax;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              IdleRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuddyEnemyEngagement>                 InterruptLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetCrouchWithPlayer
struct ABendBuddyController_SetCrouchWithPlayer_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetBuddy
struct ABendBuddyController_SetBuddy_Params
{
	class AActor*                                      buddyActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetBehaviorMode
struct ABendBuddyController_SetBehaviorMode_Params
{
	TEnumAsByte<EBuddyBehavior>                        Mode;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetBehaviorInterruptLevel
struct ABendBuddyController_SetBehaviorInterruptLevel_Params
{
	TEnumAsByte<EBuddyEnemyEngagement>                 State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetBeAggressive
struct ABendBuddyController_SetBeAggressive_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetAllowWeaponFire
struct ABendBuddyController_SetAllowWeaponFire_Params
{
	bool                                               Allow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetAllowStealth
struct ABendBuddyController_SetAllowStealth_Params
{
	bool                                               Allow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetAllowMeleeCombat
struct ABendBuddyController_SetAllowMeleeCombat_Params
{
	bool                                               Allow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.SetAllowCombat
struct ABendBuddyController_SetAllowCombat_Params
{
	bool                                               Allow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnWeaponThrownAtPlayerHandler
struct ABendBuddyController_OnWeaponThrownAtPlayerHandler_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   InstigatorPawn;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LandingLocation;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnPlayerMadeNoiseHandler
struct ABendBuddyController_OnPlayerMadeNoiseHandler_Params
{
	float                                              Loudness;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class APawn*                                       NoiseInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendSoundEventType>                   SoundEvent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnPlayerKilledEnemyHandler
struct ABendBuddyController_OnPlayerKilledEnemyHandler_Params
{
	class ABendPawn*                                   VictimPawn;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                XPValue;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WasCrit;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnPlayerDiedHandler
struct ABendBuddyController_OnPlayerDiedHandler_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnPlayerDamagedHandler
struct ABendBuddyController_OnPlayerDamagedHandler_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnPlayerBrutalKillEndedHandler
struct ABendBuddyController_OnPlayerBrutalKillEndedHandler_Params
{
	class ABendPawn*                                   Attacker;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Victim;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnNestFireStartedHandler
struct ABendBuddyController_OnNestFireStartedHandler_Params
{
	class AActor*                                      Nest;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      FireStarter;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnNestFireEndedHandler
struct ABendBuddyController_OnNestFireEndedHandler_Params
{
	class AActor*                                      Nest;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.OnGrappledBeginHandler
struct ABendBuddyController_OnGrappledBeginHandler_Params
{
	class ABendPawn*                                   Attacker;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SkipButtonEvent;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.NotifyBuddyTooFar
struct ABendBuddyController_NotifyBuddyTooFar_Params
{
};

// Function BendGame.BendBuddyController.LookAtBuddyWhileInConverstion
struct ABendBuddyController_LookAtBuddyWhileInConverstion_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceLimit;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleLimit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.LookAtActorWithinDistance
struct ABendBuddyController_LookAtActorWithinDistance_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceLimit;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleLimit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.LookAtActorForTime
struct ABendBuddyController_LookAtActorForTime_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleLimit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBuddyController.IsHidingCoverInRange
struct ABendBuddyController_IsHidingCoverInRange_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetMoveSpeedMin
struct ABendBuddyController_GetMoveSpeedMin_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetMoveSpeedMax
struct ABendBuddyController_GetMoveSpeedMax_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetFollowMovementSucceeded
struct ABendBuddyController_GetFollowMovementSucceeded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetFollowEnabled
struct ABendBuddyController_GetFollowEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetCombatDistanceLimit
struct ABendBuddyController_GetCombatDistanceLimit_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetBuddy
struct ABendBuddyController_GetBuddy_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetBehaviorMode
struct ABendBuddyController_GetBehaviorMode_Params
{
	TEnumAsByte<EBuddyBehavior>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBuddyController.GetAngleToMyBuddy
struct ABendBuddyController_GetAngleToMyBuddy_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSniperController.SetAimTime
struct ABendSniperController_SetAimTime_Params
{
	float                                              Time;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventPawnAIController.FleeToLocation
struct AXpecEventPawnAIController_FleeToLocation_Params
{
	struct FVector                                     targetLoc;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventPawnAIController.CancelFlee
struct AXpecEventPawnAIController_CancelFlee_Params
{
};

// Function BendGame.BendMovementComp_VehicleNoDrive.WaitFinishAsyncPhysicsQueries
struct UBendMovementComp_VehicleNoDrive_WaitFinishAsyncPhysicsQueries_Params
{
};

// Function BendGame.BendMovementComp_VehicleNoDrive.TriggerAsyncPhysicsQueries
struct UBendMovementComp_VehicleNoDrive_TriggerAsyncPhysicsQueries_Params
{
	float                                              DeltaTime;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SwitchLights
struct UBendMovementComp_VehicleNoDrive_SwitchLights_Params
{
	bool                                               bSwitchOn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.StopEngine
struct UBendMovementComp_VehicleNoDrive_StopEngine_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.StartEngine
struct UBendMovementComp_VehicleNoDrive_StartEngine_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetWheelType
struct UBendMovementComp_VehicleNoDrive_SetWheelType_Params
{
	TEnumAsByte<EVehicleBikeWheelIndex>                WheelId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WheelType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetTireType
struct UBendMovementComp_VehicleNoDrive_SetTireType_Params
{
	TEnumAsByte<EVehicleBikeWheelIndex>                WheelId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UTireType*                                   TireType;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetTireSlipInput
struct UBendMovementComp_VehicleNoDrive_SetTireSlipInput_Params
{
	float                                              TireSlip;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetTiltRightInput
struct UBendMovementComp_VehicleNoDrive_SetTiltRightInput_Params
{
	float                                              TiltRight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetTiltForwardInput
struct UBendMovementComp_VehicleNoDrive_SetTiltForwardInput_Params
{
	float                                              TiltForward;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetSteerAngleCurve
struct UBendMovementComp_VehicleNoDrive_SetSteerAngleCurve_Params
{
	class UCurveFloat*                                 NewSteerAngleCurve;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetNoLean
struct UBendMovementComp_VehicleNoDrive_SetNoLean_Params
{
	bool                                               bInLean;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetMaxSpeedOverride
struct UBendMovementComp_VehicleNoDrive_SetMaxSpeedOverride_Params
{
	float                                              overrideSpeed;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetForceVehicleMoveSlowly
struct UBendMovementComp_VehicleNoDrive_SetForceVehicleMoveSlowly_Params
{
	bool                                               bMoveSlowly;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.SetForceStop
struct UBendMovementComp_VehicleNoDrive_SetForceStop_Params
{
	bool                                               bStop;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.ResetRevInPlace
struct UBendMovementComp_VehicleNoDrive_ResetRevInPlace_Params
{
};

// Function BendGame.BendMovementComp_VehicleNoDrive.RemoveMaxSpeedOverride
struct UBendMovementComp_VehicleNoDrive_RemoveMaxSpeedOverride_Params
{
};

// Function BendGame.BendMovementComp_VehicleNoDrive.OverrideSteeringInput
struct UBendMovementComp_VehicleNoDrive_OverrideSteeringInput_Params
{
	bool                                               bOverride;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              InSteeringInput;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.OnMeshHit
struct UBendMovementComp_VehicleNoDrive_OnMeshHit_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsWheelEnabled
struct UBendMovementComp_VehicleNoDrive_IsWheelEnabled_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToSlowDownForStationaryBurnout
struct UBendMovementComp_VehicleNoDrive_IsTryingToSlowDownForStationaryBurnout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToSlipRearWheels
struct UBendMovementComp_VehicleNoDrive_IsTryingToSlipRearWheels_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDrift
struct UBendMovementComp_VehicleNoDrive_IsTryingToDrift_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoStationaryBurnout_GivenSpeedThreshold
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoStationaryBurnout_GivenSpeedThreshold_Params
{
	float                                              SpeedThreshold;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoStationaryBurnout
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoStationaryBurnout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoRollingBurnout_GivenSpeedThreshold
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoRollingBurnout_GivenSpeedThreshold_Params
{
	float                                              SpeedThreshold;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoRollingBurnout
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoRollingBurnout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoBurnout_GivenSpeedThreshold
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoBurnout_GivenSpeedThreshold_Params
{
	float                                              SpeedThreshold;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsTryingToDoBurnout
struct UBendMovementComp_VehicleNoDrive_IsTryingToDoBurnout_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsRawThrottleEngaged
struct UBendMovementComp_VehicleNoDrive_IsRawThrottleEngaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsOutOfFuel
struct UBendMovementComp_VehicleNoDrive_IsOutOfFuel_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsFullyDamaged
struct UBendMovementComp_VehicleNoDrive_IsFullyDamaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsEngineOn
struct UBendMovementComp_VehicleNoDrive_IsEngineOn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsDrifting
struct UBendMovementComp_VehicleNoDrive_IsDrifting_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsBoostEngaged
struct UBendMovementComp_VehicleNoDrive_IsBoostEngaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsBoostAvailable
struct UBendMovementComp_VehicleNoDrive_IsBoostAvailable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsActualThrottleEngaged_BeforeZeroedOutForGearShift
struct UBendMovementComp_VehicleNoDrive_IsActualThrottleEngaged_BeforeZeroedOutForGearShift_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.IsActualThrottleEngaged
struct UBendMovementComp_VehicleNoDrive_IsActualThrottleEngaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.HasTireContact
struct UBendMovementComp_VehicleNoDrive_HasTireContact_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.HasAnyTireContact
struct UBendMovementComp_VehicleNoDrive_HasAnyTireContact_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.HasAllTiresContact
struct UBendMovementComp_VehicleNoDrive_HasAllTiresContact_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetWheelRotationSpeed_Rpm
struct UBendMovementComp_VehicleNoDrive_GetWheelRotationSpeed_Rpm_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetWheelRotationSpeed_RadiansPerSecond
struct UBendMovementComp_VehicleNoDrive_GetWheelRotationSpeed_RadiansPerSecond_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetWheelCenterVelocity
struct UBendMovementComp_VehicleNoDrive_GetWheelCenterVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetWheelCenter
struct UBendMovementComp_VehicleNoDrive_GetWheelCenter_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetWheelBase
struct UBendMovementComp_VehicleNoDrive_GetWheelBase_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetVisualSteeringSpeed
struct UBendMovementComp_VehicleNoDrive_GetVisualSteeringSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetVisualSteeringNeg1To1
struct UBendMovementComp_VehicleNoDrive_GetVisualSteeringNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireSlippageTimesLoadTimesSpeed0To1
struct UBendMovementComp_VehicleNoDrive_GetTireSlippageTimesLoadTimesSpeed0To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              NormalizedTireLoadWhenSlippageIs1;                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              TireSpeedWhenSlippageIs1;                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireSlippageTimesLoad0To1
struct UBendMovementComp_VehicleNoDrive_GetTireSlippageTimesLoad0To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              NormalizedTireLoadWhenSlippageIs1;                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireSlippage0To1
struct UBendMovementComp_VehicleNoDrive_GetTireSlippage0To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireNormalizedLoadNEW
struct UBendMovementComp_VehicleNoDrive_GetTireNormalizedLoadNEW_Params
{
	struct FBendVehicleWheelIndex                      WheelIndex;                                               // (ConstParm, Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireNormalizedLoadAverage
struct UBendMovementComp_VehicleNoDrive_GetTireNormalizedLoadAverage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireNormalizedLoad
struct UBendMovementComp_VehicleNoDrive_GetTireNormalizedLoad_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireLongitudinalSlippageNeg1To1
struct UBendMovementComp_VehicleNoDrive_GetTireLongitudinalSlippageNeg1To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireLongitudinalSlippage
struct UBendMovementComp_VehicleNoDrive_GetTireLongitudinalSlippage_Params
{
	struct FBendVehicleWheelIndex                      WheelIndex;                                               // (ConstParm, Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireLateralSlippageNeg1To1
struct UBendMovementComp_VehicleNoDrive_GetTireLateralSlippageNeg1To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactVelocity
struct UBendMovementComp_VehicleNoDrive_GetTireContactVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactTangentRelativeVelocity
struct UBendMovementComp_VehicleNoDrive_GetTireContactTangentRelativeVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactSurfaceSceneComponent
struct UBendMovementComp_VehicleNoDrive_GetTireContactSurfaceSceneComponent_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactSlopeAngleAverage
struct UBendMovementComp_VehicleNoDrive_GetTireContactSlopeAngleAverage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactSlopeAngle
struct UBendMovementComp_VehicleNoDrive_GetTireContactSlopeAngle_Params
{
	struct FBendVehicleWheelIndex                      WheelIndex;                                               // (ConstParm, Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactRoadSurfaceType
struct UBendMovementComp_VehicleNoDrive_GetTireContactRoadSurfaceType_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendVehicleRoadSurfaceType>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactRelativeVelocity
struct UBendMovementComp_VehicleNoDrive_GetTireContactRelativeVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactPoint
struct UBendMovementComp_VehicleNoDrive_GetTireContactPoint_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactPhysicsMaterialSurfaceTypeData
struct UBendMovementComp_VehicleNoDrive_GetTireContactPhysicsMaterialSurfaceTypeData_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              WetnessThreshold0To1;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendSurfaceType*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactPhysicsMaterialSurfaceType
struct UBendMovementComp_VehicleNoDrive_GetTireContactPhysicsMaterialSurfaceType_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactPhysicsMaterial
struct UBendMovementComp_VehicleNoDrive_GetTireContactPhysicsMaterial_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactNormalRelativeVelocity
struct UBendMovementComp_VehicleNoDrive_GetTireContactNormalRelativeVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactNormal
struct UBendMovementComp_VehicleNoDrive_GetTireContactNormal_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactLongitudinalDir
struct UBendMovementComp_VehicleNoDrive_GetTireContactLongitudinalDir_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactLateralDir
struct UBendMovementComp_VehicleNoDrive_GetTireContactLateralDir_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetTireContactGroundVelocity
struct UBendMovementComp_VehicleNoDrive_GetTireContactGroundVelocity_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetThrottle0To1_BeforeZeroedOutForGearShift_DEPRECATED
struct UBendMovementComp_VehicleNoDrive_GetThrottle0To1_BeforeZeroedOutForGearShift_DEPRECATED_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetSteeringNeg1To1
struct UBendMovementComp_VehicleNoDrive_GetSteeringNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetStationaryAutoBrake
struct UBendMovementComp_VehicleNoDrive_GetStationaryAutoBrake_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetRpmForSound
struct UBendMovementComp_VehicleNoDrive_GetRpmForSound_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetRawThrottle0To1_WithReleaseOnGearShift
struct UBendMovementComp_VehicleNoDrive_GetRawThrottle0To1_WithReleaseOnGearShift_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetRawThrottle0To1
struct UBendMovementComp_VehicleNoDrive_GetRawThrottle0To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetNumberOfWheels
struct UBendMovementComp_VehicleNoDrive_GetNumberOfWheels_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetMaxEnabledWheels
struct UBendMovementComp_VehicleNoDrive_GetMaxEnabledWheels_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetFrontWheelCasterAngle_Radians
struct UBendMovementComp_VehicleNoDrive_GetFrontWheelCasterAngle_Radians_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetFrontWheelCasterAngle
struct UBendMovementComp_VehicleNoDrive_GetFrontWheelCasterAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetForwardDistanceTraveledLastFrame
struct UBendMovementComp_VehicleNoDrive_GetForwardDistanceTraveledLastFrame_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetForceStop
struct UBendMovementComp_VehicleNoDrive_GetForceStop_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetFloorWaterLocation
struct UBendMovementComp_VehicleNoDrive_GetFloorWaterLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetFloorWaterDepth
struct UBendMovementComp_VehicleNoDrive_GetFloorWaterDepth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetEngineRotationSpeedRpm
struct UBendMovementComp_VehicleNoDrive_GetEngineRotationSpeedRpm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetDriverSkillLevel
struct UBendMovementComp_VehicleNoDrive_GetDriverSkillLevel_Params
{
	TEnumAsByte<EBendVehicleRoadSurfaceType>           RoadSurfaceType;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetDriver
struct UBendMovementComp_VehicleNoDrive_GetDriver_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetCarRearRightWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetCarRearRightWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetCarRearLeftWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetCarRearLeftWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetCarFrontRightWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetCarFrontRightWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetCarFrontLeftWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetCarFrontLeftWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetBrakeInput0To1
struct UBendMovementComp_VehicleNoDrive_GetBrakeInput0To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetBrake0To1
struct UBendMovementComp_VehicleNoDrive_GetBrake0To1_Params
{
	int                                                WheelIndex;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetBikeRearWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetBikeRearWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetBikeFrontWheelIndex
struct UBendMovementComp_VehicleNoDrive_GetBikeFrontWheelIndex_Params
{
	struct FBendVehicleWheelIndex                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetActualThrottle0To1_BeforeZeroedOutForGearShift
struct UBendMovementComp_VehicleNoDrive_GetActualThrottle0To1_BeforeZeroedOutForGearShift_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.GetActualThrottle0To1
struct UBendMovementComp_VehicleNoDrive_GetActualThrottle0To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.ForceBoostSound
struct UBendMovementComp_VehicleNoDrive_ForceBoostSound_Params
{
	bool                                               bForceBoostSound;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.EnableAutoThrottle
struct UBendMovementComp_VehicleNoDrive_EnableAutoThrottle_Params
{
	bool                                               AutoThrottleEnabled;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AutoThrottleInput;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.BendServerUpdateState
struct UBendMovementComp_VehicleNoDrive_BendServerUpdateState_Params
{
	bool                                               bInIsTryingToSlipRearWheels;                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInIsBoostEngaged;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.BendGetForwardSpeed
struct UBendMovementComp_VehicleNoDrive_BendGetForwardSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.BendGetEngineRotationSpeed
struct UBendMovementComp_VehicleNoDrive_BendGetEngineRotationSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.ApplyDamageModifierToMaxSpeed
struct UBendMovementComp_VehicleNoDrive_ApplyDamageModifierToMaxSpeed_Params
{
	float                                              maxSpeedIn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleNoDrive.AdjustBoostReserve
struct UBendMovementComp_VehicleNoDrive_AdjustBoostReserve_Params
{
	float                                              BoostReserveAdjustment;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleDrive4W.SetGearSwitchTime
struct UBendMovementComp_VehicleDrive4W_SetGearSwitchTime_Params
{
	float                                              Time;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleDrive4W.SetGearSwitchThrottleEaseInTime
struct UBendMovementComp_VehicleDrive4W_SetGearSwitchThrottleEaseInTime_Params
{
	float                                              Time;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleDrive4W.GetGearSwitchTime
struct UBendMovementComp_VehicleDrive4W_GetGearSwitchTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_VehicleDrive4W.GetGearSwitchThrottleEaseInTime
struct UBendMovementComp_VehicleDrive4W_GetGearSwitchThrottleEaseInTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetNeg1To1
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForUpperTorsoNeg1To1
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForUpperTorsoNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForUpperTorso_Radians
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForUpperTorso_Radians_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForUpperTorso_Degrees
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForUpperTorso_Degrees_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForHeadNeg1To1
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForHeadNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForHead_Radians
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForHead_Radians_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTargetForHead_Degrees
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTargetForHead_Degrees_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTarget_Radians
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTarget_Radians_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleTarget_Degrees
struct UBendMovementComp_Bike_GetSmoothedLeanAngleTarget_Degrees_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleSpeed
struct UBendMovementComp_Bike_GetSmoothedLeanAngleSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleDeltaToTargetNeg1To1
struct UBendMovementComp_Bike_GetSmoothedLeanAngleDeltaToTargetNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleDeltaToTarget_Radians
struct UBendMovementComp_Bike_GetSmoothedLeanAngleDeltaToTarget_Radians_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetSmoothedLeanAngleDeltaToTarget_Degrees
struct UBendMovementComp_Bike_GetSmoothedLeanAngleDeltaToTarget_Degrees_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetLeanAngleNeg1To1
struct UBendMovementComp_Bike_GetLeanAngleNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.GetLeanAngle
struct UBendMovementComp_Bike_GetLeanAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMovementComp_Bike.AreWheelsProperlySetUp
struct UBendMovementComp_Bike_AreWheelsProperlySetUp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.TeleportVehicle
struct UBendAIDriveComponent_TeleportVehicle_Params
{
	int                                                PointsAhead;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.StartPhysicsTest
struct UBendAIDriveComponent_StartPhysicsTest_Params
{
	struct FAIPhysicsTest                              testParameters;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.SetUserThrottleMaxSpeed
struct UBendAIDriveComponent_SetUserThrottleMaxSpeed_Params
{
	float                                              MaxSpeed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.SetBendSplinePathOverride
struct UBendAIDriveComponent_SetBendSplinePathOverride_Params
{
	class ABendSplinePath*                             BendSplinePath;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.SetAllowAutoCornerSpeed
struct UBendAIDriveComponent_SetAllowAutoCornerSpeed_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.RemoveUserThrottleMaxSpeed
struct UBendAIDriveComponent_RemoveUserThrottleMaxSpeed_Params
{
};

// Function BendGame.BendAIDriveComponent.RemoveSteeringWhileStopped
struct UBendAIDriveComponent_RemoveSteeringWhileStopped_Params
{
};

// Function BendGame.BendAIDriveComponent.ReleaseStopAt_StartMovingAgain
struct UBendAIDriveComponent_ReleaseStopAt_StartMovingAgain_Params
{
};

// Function BendGame.BendAIDriveComponent.OnFailsafeNotify
struct UBendAIDriveComponent_OnFailsafeNotify_Params
{
	TEnumAsByte<EAIVehicleFailsafe>                    failsafeReason;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.IsPlayerControlled
struct UBendAIDriveComponent_IsPlayerControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.IsPerforming180
struct UBendAIDriveComponent_IsPerforming180_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.IsInFrontOf
struct UBendAIDriveComponent_IsInFrontOf_Params
{
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.IsBendSplinePathOverrideActive
struct UBendAIDriveComponent_IsBendSplinePathOverrideActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.IsAutoCornerSpeedAllowed
struct UBendAIDriveComponent_IsAutoCornerSpeedAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.InitNavigationPath
struct UBendAIDriveComponent_InitNavigationPath_Params
{
	class AAIVehicleWaypoint*                          Start;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AAIVehicleWaypoint*                          End;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.GetRoadDirection
struct UBendAIDriveComponent_GetRoadDirection_Params
{
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.GetPointOnRoad
struct UBendAIDriveComponent_GetPointOnRoad_Params
{
	float                                              distanceFromMe;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                lane;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.GetDistAlongSpline
struct UBendAIDriveComponent_GetDistAlongSpline_Params
{
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.EnableIntelligentAutoDriveDebugMenu
struct UBendAIDriveComponent_EnableIntelligentAutoDriveDebugMenu_Params
{
	bool                                               bUseAutoThrottle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.EnableIntelligentAutoDriveDebug
struct UBendAIDriveComponent_EnableIntelligentAutoDriveDebug_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.EnableIntelligentAutoDrive
struct UBendAIDriveComponent_EnableIntelligentAutoDrive_Params
{
	bool                                               bUseAutoThrottle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIDriveComponent.DisableIntelligentAutoDriveDebugMenu
struct UBendAIDriveComponent_DisableIntelligentAutoDriveDebugMenu_Params
{
};

// Function BendGame.BendAIDriveComponent.DisableIntelligentAutoDrive
struct UBendAIDriveComponent_DisableIntelligentAutoDrive_Params
{
};

// Function BendGame.BendAIDriveComponent.ClearPath
struct UBendAIDriveComponent_ClearPath_Params
{
};

// Function BendGame.BendAIDriveComponent.ClearBendSplinePathOverride
struct UBendAIDriveComponent_ClearBendSplinePathOverride_Params
{
};

// Function BendGame.BendAIDriveComponent.AimSteeringWhileStopped
struct UBendAIDriveComponent_AimSteeringWhileStopped_Params
{
	struct FVector                                     TargetLocation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAIFlowLineRepellerComponent.AddLine
struct UBendAIFlowLineRepellerComponent_AddLine_Params
{
	struct FVector                                     LineEndpoint0;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     LineEndpoint1;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAIFlowSphereRepellerComponent.BendCreateAIFlowSphereRepellerComponent_WithParentComponent
struct UBendAIFlowSphereRepellerComponent_BendCreateAIFlowSphereRepellerComponent_WithParentComponent_Params
{
	class USceneComponent*                             ParentComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InAttachSocketName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAIFlowSphereRepellerComponent*          ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAIFlowSphereRepellerComponent.BendCreateAIFlowSphereRepellerComponent_WithActor
struct UBendAIFlowSphereRepellerComponent_BendCreateAIFlowSphereRepellerComponent_WithActor_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InAttachSocketName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAIFlowSphereRepellerComponent*          ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAIGDTComponent.OnCycleDetailsViewBackwards
struct UBendAIGDTComponent_OnCycleDetailsViewBackwards_Params
{
};

// Function BendGame.BendAIGDTComponent.OnCycleDetailsView
struct UBendAIGDTComponent_OnCycleDetailsView_Params
{
};

// Function BendGame.BendAISquad.OnThreatDiedOrDestroyed
struct UBendAISquad_OnThreatDiedOrDestroyed_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAITeamSystem.OnDLCChallengeQuit
struct UBendAITeamSystem_OnDLCChallengeQuit_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAITeam.SetTempTargetEvaluator
struct UBendAITeam_SetTempTargetEvaluator_Params
{
	TAssetPtr<class UClass>                            InTargetEvaluatorClass;                                   // (Parm)
};

// Function BendGame.BendAITeam.OnMemberDiedOrDestroyed
struct UBendAITeam_OnMemberDiedOrDestroyed_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAITeam.OnEnemyKilledByMember
struct UBendAITeam_OnEnemyKilledByMember_Params
{
	class ABendPawn*                                   MemberPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   EnemyPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAITeam.ClearTempTargetEvaluator
struct UBendAITeam_ClearTempTargetEvaluator_Params
{
};

// Function BendGame.BendAITeamAnimal.GetWarningGroup
struct UBendAITeamAnimal_GetWarningGroup_Params
{
	class UBendWarningGroup*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAITeamHuman.OnExplosion
struct UBendAITeamHuman_OnExplosion_Params
{
	class AActor*                                      ExplodingActor;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAITeamBlueprintLibrary.GetTeamSystemForTeam
struct UBendAITeamBlueprintLibrary_GetTeamSystemForTeam_Params
{
	class UBendAITeam*                                 Team;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAITeamSystem*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAITeamBlueprintLibrary.GetTeamMembers
struct UBendAITeamBlueprintLibrary_GetTeamMembers_Params
{
	class UBendAITeam*                                 Team;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAITeamBlueprintLibrary.GetTeamMemberNum
struct UBendAITeamBlueprintLibrary_GetTeamMemberNum_Params
{
	class UBendAITeam*                                 Team;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAITeamBlueprintLibrary.GetTeamForMember
struct UBendAITeamBlueprintLibrary_GetTeamForMember_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendAITeam*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIVehicleDebugComponent.TurnOffAll
struct UBendAIVehicleDebugComponent_TurnOffAll_Params
{
};

// Function BendGame.BendAIVehicleFailsafe.IsGridingOnCollision
struct UBendAIVehicleFailsafe_IsGridingOnCollision_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIVehicleFailsafe.InLane
struct UBendAIVehicleFailsafe_InLane_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIWaypoint.GetPOI
struct ABendAIWaypoint_GetPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAmbientBlockerBoxComp.RemoveAmbientBlocker
struct UXpecAmbientBlockerBoxComp_RemoveAmbientBlocker_Params
{
};

// Function BendGame.XpecAmbientBlockerBoxComp.IsOverlapping
struct UXpecAmbientBlockerBoxComp_IsOverlapping_Params
{
	struct FVector                                     testLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              testRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAmbientBlockerBoxComp.AddAmbientBlocker
struct UXpecAmbientBlockerBoxComp_AddAmbientBlocker_Params
{
};

// Function BendGame.BendWorldManagerBase.GetWorldBrightnessCurveValue
struct ABendWorldManagerBase_GetWorldBrightnessCurveValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetWhiteTint
struct ABendWorldManagerBase_GetWhiteTint_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetWhiteTemperature
struct ABendWorldManagerBase_GetWhiteTemperature_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetVolumetricFogTreeDensity
struct ABendWorldManagerBase_GetVolumetricFogTreeDensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetVolumetricFogHeightFalloff
struct ABendWorldManagerBase_GetVolumetricFogHeightFalloff_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetVolumetricFogDensity
struct ABendWorldManagerBase_GetVolumetricFogDensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetVolumetricFogColor
struct ABendWorldManagerBase_GetVolumetricFogColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetTerrainAtmosphereTint
struct ABendWorldManagerBase_GetTerrainAtmosphereTint_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunYaw
struct ABendWorldManagerBase_GetSunYaw_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunPitch
struct ABendWorldManagerBase_GetSunPitch_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunLightingTintTemperature
struct ABendWorldManagerBase_GetSunLightingTintTemperature_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunLightingTint
struct ABendWorldManagerBase_GetSunLightingTint_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunIntensity
struct ABendWorldManagerBase_GetSunIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetSunColor
struct ABendWorldManagerBase_GetSunColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetRayleighScatterTerm
struct ABendWorldManagerBase_GetRayleighScatterTerm_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetRayleighScaleTerrain
struct ABendWorldManagerBase_GetRayleighScaleTerrain_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetRayleighScaleTerm
struct ABendWorldManagerBase_GetRayleighScaleTerm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetRayleighDirectionScaleTerrain
struct ABendWorldManagerBase_GetRayleighDirectionScaleTerrain_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetNightPostWeight
struct ABendWorldManagerBase_GetNightPostWeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMoonYaw
struct ABendWorldManagerBase_GetMoonYaw_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMoonPitch
struct ABendWorldManagerBase_GetMoonPitch_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMoonIntensity
struct ABendWorldManagerBase_GetMoonIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMoonColor
struct ABendWorldManagerBase_GetMoonColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMipFogTransitionDistance
struct ABendWorldManagerBase_GetMipFogTransitionDistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMieScatterTerm
struct ABendWorldManagerBase_GetMieScatterTerm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMieScaleTerm
struct ABendWorldManagerBase_GetMieScaleTerm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMieDirectionTerm
struct ABendWorldManagerBase_GetMieDirectionTerm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetMieDirectionScaleTerrain
struct ABendWorldManagerBase_GetMieDirectionScaleTerrain_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogHorizonFadeToBlackFalloff
struct ABendWorldManagerBase_GetFogHorizonFadeToBlackFalloff_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogHorizonFadeToBlack
struct ABendWorldManagerBase_GetFogHorizonFadeToBlack_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogDistanceScale
struct ABendWorldManagerBase_GetFogDistanceScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogDistanceLinearity
struct ABendWorldManagerBase_GetFogDistanceLinearity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogDensityOffset
struct ABendWorldManagerBase_GetFogDensityOffset_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogDensityColor
struct ABendWorldManagerBase_GetFogDensityColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetFogAltitudeScale
struct ABendWorldManagerBase_GetFogAltitudeScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetEmissiveIntensityChannels
struct ABendWorldManagerBase_GetEmissiveIntensityChannels_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCloudSunPhaseLowDensityStrength
struct ABendWorldManagerBase_GetCloudSunPhaseLowDensityStrength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCloudSunPhaseHighDensityStrength
struct ABendWorldManagerBase_GetCloudSunPhaseHighDensityStrength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCloudSunPhaseBrightness
struct ABendWorldManagerBase_GetCloudSunPhaseBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCloudLightingTintTemperature
struct ABendWorldManagerBase_GetCloudLightingTintTemperature_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCloudLightingTint
struct ABendWorldManagerBase_GetCloudLightingTint_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCinematicSunGlobalIntensity
struct ABendWorldManagerBase_GetCinematicSunGlobalIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCinematicSunDirectLightIntensity
struct ABendWorldManagerBase_GetCinematicSunDirectLightIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCCSaturation
struct ABendWorldManagerBase_GetCCSaturation_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCCHue
struct ABendWorldManagerBase_GetCCHue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCCContrast
struct ABendWorldManagerBase_GetCCContrast_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCCColorBalance
struct ABendWorldManagerBase_GetCCColorBalance_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetCCBrightness
struct ABendWorldManagerBase_GetCCBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBloomThreshold
struct ABendWorldManagerBase_GetBloomThreshold_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBloomIntensity
struct ABendWorldManagerBase_GetBloomIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_SunColor
struct ABendWorldManagerBase_GetBGClouds_SunColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_SkyUpperColor
struct ABendWorldManagerBase_GetBGClouds_SkyUpperColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_SkyLowerColor
struct ABendWorldManagerBase_GetBGClouds_SkyLowerColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_FogFalloff
struct ABendWorldManagerBase_GetBGClouds_FogFalloff_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_Density
struct ABendWorldManagerBase_GetBGClouds_Density_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetBGClouds_CirrusOpacity
struct ABendWorldManagerBase_GetBGClouds_CirrusOpacity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAutoExposureMinBrightness
struct ABendWorldManagerBase_GetAutoExposureMinBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAutoExposureMaxBrightness
struct ABendWorldManagerBase_GetAutoExposureMaxBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAutoExposureBias
struct ABendWorldManagerBase_GetAutoExposureBias_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAssumedAverageBaseColor
struct ABendWorldManagerBase_GetAssumedAverageBaseColor_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAmbientBrightness
struct ABendWorldManagerBase_GetAmbientBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManagerBase.GetAltitudeReferenceInMeters
struct ABendWorldManagerBase_GetAltitudeReferenceInMeters_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWindManager.UpdateWindTime
struct ABendWindManager_UpdateWindTime_Params
{
	float                                              WindSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Mod;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWindManager.UpdateWindTick
struct ABendWindManager_UpdateWindTick_Params
{
	class ABendPrecipitationManager*                   PrecipitationManager;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWorldManager*                           WorldManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWindManager.UpdateMaterialWind
struct ABendWindManager_UpdateMaterialWind_Params
{
};

// Function BendGame.BendWindManager.UpdateEnvCommon
struct ABendWindManager_UpdateEnvCommon_Params
{
	float                                              WindTurbUVThreashold;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWindManager.UpdateActiveWind
struct ABendWindManager_UpdateActiveWind_Params
{
	class ABendPrecipitationManager*                   PricipitationManager;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWorldManager*                           WorldManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWindManager.GustNow
struct ABendWindManager_GustNow_Params
{
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.WorldWeatherTransitionComplete
struct ABendWorldManager_WorldWeatherTransitionComplete_Params
{
};

// Function BendGame.BendWorldManager.UpdateWorldPostFX
struct ABendWorldManager_UpdateWorldPostFX_Params
{
	class ABendWorldSpec*                              WorldSpec;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.UpdateHUDTime
struct ABendWorldManager_UpdateHUDTime_Params
{
};

// Function BendGame.BendWorldManager.UpdateCinematicOffsets
struct ABendWorldManager_UpdateCinematicOffsets_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SyncTime
struct ABendWorldManager_SyncTime_Params
{
	bool                                               bSyncBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.StartWorldTime
struct ABendWorldManager_StartWorldTime_Params
{
};

// Function BendGame.BendWorldManager.SetWorldTimeRate
struct ABendWorldManager_SetWorldTimeRate_Params
{
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWorldTimeOfDay
struct ABendWorldManager_SetWorldTimeOfDay_Params
{
	float                                              TimeOfDay;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CanAdvanceDay;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWorldTimeMultiplier
struct ABendWorldManager_SetWorldTimeMultiplier_Params
{
	float                                              Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWorldTimeHour
struct ABendWorldManager_SetWorldTimeHour_Params
{
	int                                                Hour;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWorldTime
struct ABendWorldManager_SetWorldTime_Params
{
	struct FTimespan                                   NewWorldTime;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.BendWorldManager.SetWorldSpec
struct ABendWorldManager_SetWorldSpec_Params
{
	class ABendWorldSpec*                              NewWeather;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            NewWeatherTransitionRate;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWorldDaysGone
struct ABendWorldManager_SetWorldDaysGone_Params
{
	int                                                Days;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWindVelocityOverride
struct ABendWorldManager_SetWindVelocityOverride_Params
{
	bool                                               Override;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetWindOverride
struct ABendWorldManager_SetWindOverride_Params
{
	bool                                               Override;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetMotionBlur
struct ABendWorldManager_SetMotionBlur_Params
{
	float                                              MotionBlur;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetMissionObjectiveTime
struct ABendWorldManager_SetMissionObjectiveTime_Params
{
	float                                              GoalTimeOfDay;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MissionWallClockDurationInMinutes;                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetIsMissionActive
struct ABendWorldManager_SetIsMissionActive_Params
{
	bool                                               NewMissionStatus;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetIsCinematicActive
struct ABendWorldManager_SetIsCinematicActive_Params
{
	bool                                               NewCinematicStatus;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetIndoorsOverride
struct ABendWorldManager_SetIndoorsOverride_Params
{
	bool                                               IsIndoors;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetIndoors
struct ABendWorldManager_SetIndoors_Params
{
	bool                                               IsIndoors;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SetCloudRandomSeed
struct ABendWorldManager_SetCloudRandomSeed_Params
{
	struct FLinearColor                                CloudRandomSeed;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SelectWorldWeatherTransition
struct ABendWorldManager_SelectWorldWeatherTransition_Params
{
	TEnumAsByte<EWeatherType>                          WeatherStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          WeatherEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            TransitionRate;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.SelectWorldWeather
struct ABendWorldManager_SelectWorldWeather_Params
{
	TEnumAsByte<EWeatherType>                          NewWeather;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            NewWeatherTransitionRate;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveTickTimeOfDay
struct ABendWorldManager_ReceiveTickTimeOfDay_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDebug;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveSyncTimeOfDay
struct ABendWorldManager_ReceiveSyncTimeOfDay_Params
{
};

// Function BendGame.BendWorldManager.ReceiveStartWorldTime
struct ABendWorldManager_ReceiveStartWorldTime_Params
{
};

// Function BendGame.BendWorldManager.ReceiveSetWorldSpec
struct ABendWorldManager_ReceiveSetWorldSpec_Params
{
	class ABendWorldSpec*                              NextWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            TransitionRate;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveSelectWeather
struct ABendWorldManager_ReceiveSelectWeather_Params
{
	TEnumAsByte<EWeatherType>                          PreviousWeather;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          NextWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            TransitionRate;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveInitialize
struct ABendWorldManager_ReceiveInitialize_Params
{
};

// Function BendGame.BendWorldManager.ReceiveChangeWeather
struct ABendWorldManager_ReceiveChangeWeather_Params
{
	TEnumAsByte<EWeatherType>                          PreviousWeather;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          NextWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TransitionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveBendEditorTick
struct ABendWorldManager_ReceiveBendEditorTick_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ReceiveBendEditorStop
struct ABendWorldManager_ReceiveBendEditorStop_Params
{
};

// Function BendGame.BendWorldManager.IsWorldTimeAM
struct ABendWorldManager_IsWorldTimeAM_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.IsWeatherMapActive
struct ABendWorldManager_IsWeatherMapActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.IsBrightnessRising
struct ABendWorldManager_IsBrightnessRising_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.InterpolateWorldSpec
struct ABendWorldManager_InterpolateWorldSpec_Params
{
	float                                              WeightDefault;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight10Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight10End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight20Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight20End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight30Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight30End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight40Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight40End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight50Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight50End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight60Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight60End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight70Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight70End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight80Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight80End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight90Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight90End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.Initialize
struct ABendWorldManager_Initialize_Params
{
};

// Function BendGame.BendWorldManager.HasTimePassed
struct ABendWorldManager_HasTimePassed_Params
{
	struct FTimespan                                   WorldTimePassed;                                          // (Parm, ZeroConstructor)
	struct FTimespan                                   SavedWorldTime;                                           // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldWeatherTransitionRate
struct ABendWorldManager_GetWorldWeatherTransitionRate_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherTransitionRateType>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldWeatherTransitionDuration
struct ABendWorldManager_GetWorldWeatherTransitionDuration_Params
{
	TEnumAsByte<EWeatherTransitionRateType>            WeatherTransitionRateType;                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldWeather
struct ABendWorldManager_GetWorldWeather_Params
{
	TEnumAsByte<EWeatherType>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTimeOfDay
struct ABendWorldManager_GetWorldTimeOfDay_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTimeMultiplier
struct ABendWorldManager_GetWorldTimeMultiplier_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTimeMinute
struct ABendWorldManager_GetWorldTimeMinute_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTimeHour
struct ABendWorldManager_GetWorldTimeHour_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTimeFractional
struct ABendWorldManager_GetWorldTimeFractional_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldTime
struct ABendWorldManager_GetWorldTime_Params
{
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendWorldManager.GetWorldSettings
struct ABendWorldManager_GetWorldSettings_Params
{
	class ABendWorldSettings*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldManager
struct ABendWorldManager_GetWorldManager_Params
{
	class UObject*                                     WorldContext;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWorldManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldDaysGone
struct ABendWorldManager_GetWorldDaysGone_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWorldCameraTransform
struct ABendWorldManager_GetWorldCameraTransform_Params
{
	class UObject*                                     WorldContext;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetWeatherMapColor
struct ABendWorldManager_GetWeatherMapColor_Params
{
	struct FVector                                     WorldPosition;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetTimeSince
struct ABendWorldManager_GetTimeSince_Params
{
	struct FTimespan                                   SavedWorldTime;                                           // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendWorldManager.GetMotionBlurDefault
struct ABendWorldManager_GetMotionBlurDefault_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetMotionBlur
struct ABendWorldManager_GetMotionBlur_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetLocalWeatherMapColor
struct ABendWorldManager_GetLocalWeatherMapColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetIsMissionActive
struct ABendWorldManager_GetIsMissionActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetIsCinematicActive
struct ABendWorldManager_GetIsCinematicActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetIndoorsOverride
struct ABendWorldManager_GetIndoorsOverride_Params
{
	bool                                               Override;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsIndoors;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetCloudRandomSeed
struct ABendWorldManager_GetCloudRandomSeed_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetCameraTransform
struct ABendWorldManager_GetCameraTransform_Params
{
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.GetCameraLocation
struct ABendWorldManager_GetCameraLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ClearIndoorsOverride
struct ABendWorldManager_ClearIndoorsOverride_Params
{
};

// Function BendGame.BendWorldManager.ChangeWeatherTransition
struct ABendWorldManager_ChangeWeatherTransition_Params
{
	TEnumAsByte<EWeatherType>                          WeatherStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          WeatherEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TransitionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ChangeWeather
struct ABendWorldManager_ChangeWeather_Params
{
	TEnumAsByte<EWeatherType>                          NewWeather;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TransitionTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldManager.ApplySkyPreset
struct ABendWorldManager_ApplySkyPreset_Params
{
};

// Function BendGame.BendWorldManager.AdvanceWorldTime
struct ABendWorldManager_AdvanceWorldTime_Params
{
	struct FTimespan                                   AdvanceTime;                                              // (Parm, ZeroConstructor)
};

// Function BendGame.BendAmbientEventMarker.SetEventEngaged
struct ABendAmbientEventMarker_SetEventEngaged_Params
{
	bool                                               engaged;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.SetEventComplete
struct ABendAmbientEventMarker_SetEventComplete_Params
{
};

// Function BendGame.BendAmbientEventMarker.SetChooseEventTried
struct ABendAmbientEventMarker_SetChooseEventTried_Params
{
	TEnumAsByte<EAmbientEventFailedReason>             FailReason;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CountAttempt;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.SetChooseEventSucceeded
struct ABendAmbientEventMarker_SetChooseEventSucceeded_Params
{
};

// Function BendGame.BendAmbientEventMarker.SetChooseEventFailed
struct ABendAmbientEventMarker_SetChooseEventFailed_Params
{
	TEnumAsByte<EAmbientEventFailedReason>             FailReason;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.SetChooseEventAvailable
struct ABendAmbientEventMarker_SetChooseEventAvailable_Params
{
};

// Function BendGame.BendAmbientEventMarker.SetAmbientEventManager
struct ABendAmbientEventMarker_SetAmbientEventManager_Params
{
	class ABendAmbientEventManager*                    Manager;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.OnUMapLoaded
struct ABendAmbientEventMarker_OnUMapLoaded_Params
{
};

// Function BendGame.BendAmbientEventMarker.OnUMapLoad
struct ABendAmbientEventMarker_OnUMapLoad_Params
{
};

// Function BendGame.BendAmbientEventMarker.OnRemoveFromWorld
struct ABendAmbientEventMarker_OnRemoveFromWorld_Params
{
};

// Function BendGame.BendAmbientEventMarker.OnEventUnloaded
struct ABendAmbientEventMarker_OnEventUnloaded_Params
{
};

// Function BendGame.BendAmbientEventMarker.OnEventLoaded
struct ABendAmbientEventMarker_OnEventLoaded_Params
{
	bool                                               PreviouslyLoaded;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.OnEventComplete
struct ABendAmbientEventMarker_OnEventComplete_Params
{
};

// Function BendGame.BendAmbientEventMarker.NotBlocked
struct ABendAmbientEventMarker_NotBlocked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.MeetsMissionConditions
struct ABendAmbientEventMarker_MeetsMissionConditions_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.MeetsJobConditions
struct ABendAmbientEventMarker_MeetsJobConditions_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.MeetsConditions
struct ABendAmbientEventMarker_MeetsConditions_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.IsComplete
struct ABendAmbientEventMarker_IsComplete_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.IsAvailable
struct ABendAmbientEventMarker_IsAvailable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.GetEventEngaged
struct ABendAmbientEventMarker_GetEventEngaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.GetConditionalPriority
struct ABendAmbientEventMarker_GetConditionalPriority_Params
{
	float                                              ConditionalPriorityWeight;                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.GetAmbientEventManager
struct ABendAmbientEventMarker_GetAmbientEventManager_Params
{
	class ABendAmbientEventManager*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.CheckIfEventEngaged
struct ABendAmbientEventMarker_CheckIfEventEngaged_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventMarker.AllocateConditions
struct ABendAmbientEventMarker_AllocateConditions_Params
{
};

// Function BendGame.BendAmbientEventManager.VerboseDebugging
struct ABendAmbientEventManager_VerboseDebugging_Params
{
	bool                                               Verbosity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.UpdateAmbientEventWeight
struct ABendAmbientEventManager_UpdateAmbientEventWeight_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.Unpause
struct ABendAmbientEventManager_Unpause_Params
{
};

// Function BendGame.BendAmbientEventManager.TimeUntilCheckingForNewEvent
struct ABendAmbientEventManager_TimeUntilCheckingForNewEvent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.TestConditionsForAmbientEvent
struct ABendAmbientEventManager_TestConditionsForAmbientEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.SetNextAmbientEvent
struct ABendAmbientEventManager_SetNextAmbientEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreRecentlyActiveAmbientEvent
struct ABendAmbientEventManager_ScoreRecentlyActiveAmbientEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreBasedOnPlayerVelocity
struct ABendAmbientEventManager_ScoreBasedOnPlayerVelocity_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreBasedOnPlayerFacing
struct ABendAmbientEventManager_ScoreBasedOnPlayerFacing_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreBasedOnHistory
struct ABendAmbientEventManager_ScoreBasedOnHistory_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreBasedOnDistance
struct ABendAmbientEventManager_ScoreBasedOnDistance_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Multiplier;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreAmbientEvent_NormalMode
struct ABendAmbientEventManager_ScoreAmbientEvent_NormalMode_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreAmbientEvent_MissionMode
struct ABendAmbientEventManager_ScoreAmbientEvent_MissionMode_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreAmbientEvent_JobMode
struct ABendAmbientEventManager_ScoreAmbientEvent_JobMode_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ScoreAmbientEvent
struct ABendAmbientEventManager_ScoreAmbientEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.RollChanceToSpawnAmbientEvent
struct ABendAmbientEventManager_RollChanceToSpawnAmbientEvent_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ResetPacing
struct ABendAmbientEventManager_ResetPacing_Params
{
};

// Function BendGame.BendAmbientEventManager.ResetBlacklistOfAmbientEvents
struct ABendAmbientEventManager_ResetBlacklistOfAmbientEvents_Params
{
};

// Function BendGame.BendAmbientEventManager.RemoveEventsBasedOnHistory
struct ABendAmbientEventManager_RemoveEventsBasedOnHistory_Params
{
	TArray<class ABendAmbientEventMarker*>             EligibleEvents;                                           // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendAmbientEventManager.RemoveAllEventsQueuedToLoad
struct ABendAmbientEventManager_RemoveAllEventsQueuedToLoad_Params
{
};

// Function BendGame.BendAmbientEventManager.PostUMapUnload
struct ABendAmbientEventManager_PostUMapUnload_Params
{
};

// Function BendGame.BendAmbientEventManager.PostUMapLoad
struct ABendAmbientEventManager_PostUMapLoad_Params
{
};

// Function BendGame.BendAmbientEventManager.Pause
struct ABendAmbientEventManager_Pause_Params
{
	bool                                               ForceUnload;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.OnPlayerRespawned
struct ABendAmbientEventManager_OnPlayerRespawned_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.OnPlayerDeathFadeToBlack
struct ABendAmbientEventManager_OnPlayerDeathFadeToBlack_Params
{
};

// Function BendGame.BendAmbientEventManager.OnEventUnloaded
struct ABendAmbientEventManager_OnEventUnloaded_Params
{
	class ABendAmbientEventMarker*                     AmbientEventMarker;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.OnEventLoaded
struct ABendAmbientEventManager_OnEventLoaded_Params
{
	class ABendAmbientEventMarker*                     AmbientEventMarker;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ModifyAmbientEventWeight
struct ABendAmbientEventManager_ModifyAmbientEventWeight_Params
{
	float                                              modification;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsWithinDistanceParameters
struct ABendAmbientEventManager_IsWithinDistanceParameters_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsTooCloseToPlayer
struct ABendAmbientEventManager_IsTooCloseToPlayer_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsPaused
struct ABendAmbientEventManager_IsPaused_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsInDebug
struct ABendAmbientEventManager_IsInDebug_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsEventRunning
struct ABendAmbientEventManager_IsEventRunning_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsEventLoading
struct ABendAmbientEventManager_IsEventLoading_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsEventClassTimeframeValid
struct ABendAmbientEventManager_IsEventClassTimeframeValid_Params
{
	TEnumAsByte<EAmbientEventClass>                    AmbientEventClass;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.IsAmbientEventBlacklisted
struct ABendAmbientEventManager_IsAmbientEventBlacklisted_Params
{
	class ABendAmbientEventMarker*                     AmbientEventMarker;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetVerboseDebugging
struct ABendAmbientEventManager_GetVerboseDebugging_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetTimeToMaximumWeight
struct ABendAmbientEventManager_GetTimeToMaximumWeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetRunningEvents
struct ABendAmbientEventManager_GetRunningEvents_Params
{
	TArray<class ABendAmbientEventMarker*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.GetRemainingTimeToResetForClass
struct ABendAmbientEventManager_GetRemainingTimeToResetForClass_Params
{
	TEnumAsByte<EAmbientEventClass>                    EventClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.GetLocationToRunTestsAgainst
struct ABendAmbientEventManager_GetLocationToRunTestsAgainst_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetEventScore
struct ABendAmbientEventManager_GetEventScore_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetDefaultResetTimeForClass
struct ABendAmbientEventManager_GetDefaultResetTimeForClass_Params
{
	TEnumAsByte<EAmbientEventClass>                    EventClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.GetDebugLineColorForEvent
struct ABendAmbientEventManager_GetDebugLineColorForEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEventMarker;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetCurrentWeight
struct ABendAmbientEventManager_GetCurrentWeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.GetAvailableEvents
struct ABendAmbientEventManager_GetAvailableEvents_Params
{
	TArray<class ABendAmbientEventMarker*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.GetAmbientEventResetTimes
struct ABendAmbientEventManager_GetAmbientEventResetTimes_Params
{
	TArray<struct FTimespan>                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.GetAllEvents
struct ABendAmbientEventManager_GetAllEvents_Params
{
	TArray<class ABendAmbientEventMarker*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.ForceUnloadAllInRadiusExcludingMarker
struct ABendAmbientEventManager_ForceUnloadAllInRadiusExcludingMarker_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAmbientEventMarker*                     excludeMarker;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ForceUnloadAllInRadius
struct ABendAmbientEventManager_ForceUnloadAllInRadius_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.ForceUnloadAllImmediately
struct ABendAmbientEventManager_ForceUnloadAllImmediately_Params
{
};

// Function BendGame.BendAmbientEventManager.ForceUnloadAll
struct ABendAmbientEventManager_ForceUnloadAll_Params
{
};

// Function BendGame.BendAmbientEventManager.EnableDebug
struct ABendAmbientEventManager_EnableDebug_Params
{
};

// Function BendGame.BendAmbientEventManager.DisableDebug
struct ABendAmbientEventManager_DisableDebug_Params
{
};

// Function BendGame.BendAmbientEventManager.DebugTestUnloadEvent
struct ABendAmbientEventManager_DebugTestUnloadEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.DebugTestLoadEvent
struct ABendAmbientEventManager_DebugTestLoadEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.DebugRequestInstantiateAmbientEvent
struct ABendAmbientEventManager_DebugRequestInstantiateAmbientEvent_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.DebugLoadAllEventsOfClass
struct ABendAmbientEventManager_DebugLoadAllEventsOfClass_Params
{
	TEnumAsByte<EAmbientEventClass>                    ClassType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.DebugLoadAllEvents
struct ABendAmbientEventManager_DebugLoadAllEvents_Params
{
};

// Function BendGame.BendAmbientEventManager.DebugEndLoadAllEventsOfClass
struct ABendAmbientEventManager_DebugEndLoadAllEventsOfClass_Params
{
};

// Function BendGame.BendAmbientEventManager.DebugEndLoadAllEvents
struct ABendAmbientEventManager_DebugEndLoadAllEvents_Params
{
};

// Function BendGame.BendAmbientEventManager.ConvertTimeSpanToRealTime
struct ABendAmbientEventManager_ConvertTimeSpanToRealTime_Params
{
	struct FTimespan                                   GameTime;                                                 // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.ConvertTimeSpanToGameTime
struct ABendAmbientEventManager_ConvertTimeSpanToGameTime_Params
{
	struct FTimespan                                   RealTime;                                                 // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.CheckCanRunAgain
struct ABendAmbientEventManager_CheckCanRunAgain_Params
{
	class ABendAmbientEventMarker*                     AmbientEvent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.BuildListOfEligibleEvents
struct ABendAmbientEventManager_BuildListOfEligibleEvents_Params
{
	TArray<class ABendAmbientEventMarker*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientEventManager.BlacklistAmbientEvents
struct ABendAmbientEventManager_BlacklistAmbientEvents_Params
{
	TArray<TEnumAsByte<EAmbientEventClass>>            Blacklist;                                                // (Parm, ZeroConstructor)
};

// Function BendGame.BendAmbientEventManager.AmbientEventComplete
struct ABendAmbientEventManager_AmbientEventComplete_Params
{
	struct FString                                     AmbientEventName;                                         // (Parm, ZeroConstructor)
	TEnumAsByte<EAmbientEventCompletionStatus>         CompletionStatus;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventManager.AddEventToForcedQueue
struct ABendAmbientEventManager_AddEventToForcedQueue_Params
{
	class ABendAmbientEventMarker*                     AmbientEventMarker;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientEventBP.OnEventUnloading
struct ABendAmbientEventBP_OnEventUnloading_Params
{
};

// Function BendGame.BendAmbientEventBP.OnEventRunning
struct ABendAmbientEventBP_OnEventRunning_Params
{
};

// Function BendGame.BendAmbientEventBP.OnEventReRunning
struct ABendAmbientEventBP_OnEventReRunning_Params
{
};

// Function BendGame.BendAmbientEventBP.OnEventComplete
struct ABendAmbientEventBP_OnEventComplete_Params
{
};

// Function BendGame.BendAmbientEventLevel.OnEventUnloading
struct ABendAmbientEventLevel_OnEventUnloading_Params
{
};

// Function BendGame.BendAmbientEventLevel.OnEventRunning
struct ABendAmbientEventLevel_OnEventRunning_Params
{
};

// Function BendGame.BendAmbientEventLevel.OnEventReRunning
struct ABendAmbientEventLevel_OnEventReRunning_Params
{
};

// Function BendGame.BendAmbientEventLevel.OnEventComplete
struct ABendAmbientEventLevel_OnEventComplete_Params
{
};

// Function BendGame.BendAmbientSpawnArea.SetSpawnLimits
struct ABendAmbientSpawnArea_SetSpawnLimits_Params
{
	int                                                minBaseSpawns;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxBaseSpawns;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                conditionalSpawns;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.SetMaxSpawns
struct ABendAmbientSpawnArea_SetMaxSpawns_Params
{
	int                                                newMaxSpawns;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               setGoalSpawns;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.SetAreaActive
struct ABendAmbientSpawnArea_SetAreaActive_Params
{
	bool                                               activeArea;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.ResetSpawnCount
struct ABendAmbientSpawnArea_ResetSpawnCount_Params
{
	bool                                               resetToKilled;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.ResetKillCount
struct ABendAmbientSpawnArea_ResetKillCount_Params
{
};

// Function BendGame.BendAmbientSpawnArea.RemoveSpawnLocation
struct ABendAmbientSpawnArea_RemoveSpawnLocation_Params
{
	class ABendAmbientSpawnBox*                        Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.GetSpawnCount
struct ABendAmbientSpawnArea_GetSpawnCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.GetKillCount
struct ABendAmbientSpawnArea_GetKillCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.GetActiveCount
struct ABendAmbientSpawnArea_GetActiveCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnArea.AddSpawnLocation
struct ABendAmbientSpawnArea_AddSpawnLocation_Params
{
	class ABendAmbientSpawnBox*                        Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.SetLocationActive
struct ABendSpawnLocationBase_SetLocationActive_Params
{
	bool                                               activeLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.SetHomePoint
struct ABendSpawnLocationBase_SetHomePoint_Params
{
	struct FBendLocationReference                      Point;                                                    // (Parm)
};

// Function BendGame.BendSpawnLocationBase.SetHomeArea
struct ABendSpawnLocationBase_SetHomeArea_Params
{
	class ABendHomeArea*                               Area;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.IsHomePointValid
struct ABendSpawnLocationBase_IsHomePointValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.IsHomeAreaValid
struct ABendSpawnLocationBase_IsHomeAreaValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.IsFinishedStreaming
struct ABendSpawnLocationBase_IsFinishedStreaming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.GetHomePoint
struct ABendSpawnLocationBase_GetHomePoint_Params
{
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.GetHomeArea
struct ABendSpawnLocationBase_GetHomeArea_Params
{
	class ABendHomeArea*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSpawnLocationBase.ClearHomePoint
struct ABendSpawnLocationBase_ClearHomePoint_Params
{
};

// Function BendGame.BendSpawnLocationBase.ClearHomeArea
struct ABendSpawnLocationBase_ClearHomeArea_Params
{
};

// Function BendGame.BendSpawnLocationBase.ClearFortifications
struct ABendSpawnLocationBase_ClearFortifications_Params
{
};

// Function BendGame.BendSpawnLocationBase.AddFortification
struct ABendSpawnLocationBase_AddFortification_Params
{
	class ABendFortificationZone*                      Fortification;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.SpawnTimerCD
struct ABendAmbientPopulationSpawnArea_SpawnTimerCD_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.SingleTypeUnitSpawn
struct ABendAmbientPopulationSpawnArea_SingleTypeUnitSpawn_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.PredatorPauseRate
struct ABendAmbientPopulationSpawnArea_PredatorPauseRate_Params
{
};

// Function BendGame.BendAmbientPopulationSpawnArea.PossibleAwarenessCheck
struct ABendAmbientPopulationSpawnArea_PossibleAwarenessCheck_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.HandleOnSpawned
struct ABendAmbientPopulationSpawnArea_HandleOnSpawned_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GlobalSpawnController
struct ABendAmbientPopulationSpawnArea_GlobalSpawnController_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetOpenArea
struct ABendAmbientPopulationSpawnArea_GetOpenArea_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetNumSpawnedOfFaction
struct ABendAmbientPopulationSpawnArea_GetNumSpawnedOfFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetLastSpawnTimeForFaction
struct ABendAmbientPopulationSpawnArea_GetLastSpawnTimeForFaction_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetIsCover
struct ABendAmbientPopulationSpawnArea_GetIsCover_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetFactionInteracted
struct ABendAmbientPopulationSpawnArea_GetFactionInteracted_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetFactionBlockerCount
struct ABendAmbientPopulationSpawnArea_GetFactionBlockerCount_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientPopulationSpawnArea.GetFactionAwareTime
struct ABendAmbientPopulationSpawnArea_GetFactionAwareTime_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendAmbientPopulationSpawnArea.ClearFactionData
struct ABendAmbientPopulationSpawnArea_ClearFactionData_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientWaveManager.StopWaveManager
struct ABendAmbientWaveManager_StopWaveManager_Params
{
};

// Function BendGame.BendAmbientWaveManager.StartWaveManager
struct ABendAmbientWaveManager_StartWaveManager_Params
{
	int                                                WaveIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientWaveManager.StartWaveAtIndex
struct ABendAmbientWaveManager_StartWaveAtIndex_Params
{
	int                                                WaveIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientWaveManager.SetWavePawnAwareOfPlayer
struct ABendAmbientWaveManager_SetWavePawnAwareOfPlayer_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      SpawnLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientWaveManager.OnPlayerRespawn
struct ABendAmbientWaveManager_OnPlayerRespawn_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientWaveManager.OnPlayerDeath
struct ABendAmbientWaveManager_OnPlayerDeath_Params
{
};

// Function BendGame.BendAmbientWaveManager.GetCurrentWaveIndex
struct ABendAmbientWaveManager_GetCurrentWaveIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalFoodChainData.IsPrey
struct UBendAnimalFoodChainData_IsPrey_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalFoodChainData.GetPreyInterest
struct UBendAnimalFoodChainData_GetPreyInterest_Params
{
	class ABendPawn*                                   Prey;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.Relay_OnAnimNotifyStateTick
struct UBendAnimBlueprintMessengerInternal_Relay_OnAnimNotifyStateTick_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FrameDeltaTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotifyState*                            AnimNotifyState;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.Relay_OnAnimNotifyStateEnd
struct UBendAnimBlueprintMessengerInternal_Relay_OnAnimNotifyStateEnd_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotifyState*                            AnimNotifyState;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.Relay_OnAnimNotifyStateBegin
struct UBendAnimBlueprintMessengerInternal_Relay_OnAnimNotifyStateBegin_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TotalDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotifyState*                            AnimNotifyState;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.Relay_OnAnimNotify
struct UBendAnimBlueprintMessengerInternal_Relay_OnAnimNotify_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotify*                                 AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnTransition_Start
struct UBendAnimBlueprintMessengerInternal_OnTransition_Start_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnTransition_Interrupt
struct UBendAnimBlueprintMessengerInternal_OnTransition_Interrupt_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnTransition_End
struct UBendAnimBlueprintMessengerInternal_OnTransition_End_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnState_Left
struct UBendAnimBlueprintMessengerInternal_OnState_Left_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnState_FullyBlended
struct UBendAnimBlueprintMessengerInternal_OnState_FullyBlended_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnState_Entered
struct UBendAnimBlueprintMessengerInternal_OnState_Entered_Params
{
	struct FName                                       StateId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.OnGeneralNotify
struct UBendAnimBlueprintMessengerInternal_OnGeneralNotify_Params
{
	struct FName                                       NotifyId;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimBlueprintMessengerInternal.IsTransitionRequested
struct UBendAnimBlueprintMessengerInternal_IsTransitionRequested_Params
{
	struct FName                                       TransitionId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.IsAnimValidAdditive
struct UBendAnimFunctionLibrary_IsAnimValidAdditive_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.IsAnimSequenceNavigable
struct UBendAnimFunctionLibrary_IsAnimSequenceNavigable_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   AnimatedPawn;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetCurveValue
struct UBendAnimFunctionLibrary_GetCurveValue_Params
{
	class UAnimSequenceBase*                           Sequence;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CurveName;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendAnimSampleTime>                   SampleTimeType;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SpecifiedTime;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetCurveStartValue
struct UBendAnimFunctionLibrary_GetCurveStartValue_Params
{
	class UAnimSequenceBase*                           Sequence;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CurveName;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetCurveEndValue
struct UBendAnimFunctionLibrary_GetCurveEndValue_Params
{
	class UAnimSequenceBase*                           Sequence;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CurveName;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetBlendSpaceClosestSampleValueY_WithXRange
struct UBendAnimFunctionLibrary_GetBlendSpaceClosestSampleValueY_WithXRange_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SampleValue;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSampleFound;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdX;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetBlendSpaceClosestSampleValueY_NEW
struct UBendAnimFunctionLibrary_GetBlendSpaceClosestSampleValueY_NEW_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SampleValue;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSampleFound;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetBlendSpaceClosestSampleValueX_WithYRange
struct UBendAnimFunctionLibrary_GetBlendSpaceClosestSampleValueX_WithYRange_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SampleValue;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSampleFound;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdY;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetBlendSpaceClosestSampleValueX_NEW
struct UBendAnimFunctionLibrary_GetBlendSpaceClosestSampleValueX_NEW_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SampleValue;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSampleFound;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetAnimSequenceSpeed_NEW
struct UBendAnimFunctionLibrary_GetAnimSequenceSpeed_NEW_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetAnimSequenceLength_NEW
struct UBendAnimFunctionLibrary_GetAnimSequenceLength_NEW_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetAnimSequenceEndTransform_NEW
struct UBendAnimFunctionLibrary_GetAnimSequenceEndTransform_NEW_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetAnimSequenceDistance_NEW
struct UBendAnimFunctionLibrary_GetAnimSequenceDistance_NEW_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.GetAnimAssetLength
struct UBendAnimFunctionLibrary_GetAnimAssetLength_Params
{
	class UAnimationAsset*                             Asset;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.DEPRECATED_GetBlendSpaceClosestSampleValueY
struct UBendAnimFunctionLibrary_DEPRECATED_GetBlendSpaceClosestSampleValueY_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutput_SampleFound;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdX;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimFunctionLibrary.DEPRECATED_GetBlendSpaceClosestSampleValueX
struct UBendAnimFunctionLibrary_DEPRECATED_GetBlendSpaceClosestSampleValueX_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutput_SampleFound;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdY;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimIKManager.UnregisterIKManager
struct UBendAnimIKManager_UnregisterIKManager_Params
{
};

// Function BendGame.BendAnimIKManager.RegisterIKManager
struct UBendAnimIKManager_RegisterIKManager_Params
{
};

// Function BendGame.BendAnimIKManager.IsRegistered
struct UBendAnimIKManager_IsRegistered_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimIKManager.InitWithSettings
struct UBendAnimIKManager_InitWithSettings_Params
{
	struct FBendAnimIKSettings                         IKSettings;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAnimIKRegistrar.GetBendIKRegistrar
struct ABendAnimIKRegistrar_GetBendIKRegistrar_Params
{
	class ABendAnimIKRegistrar*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateInstancesHandle.GetCurveValue
struct UBendAnimStateInstancesHandle_GetCurveValue_Params
{
	int                                                StateInstanceIndex;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CurveName;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNormalize;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateInstancesHandle.GetCurrentStateTime
struct UBendAnimStateInstancesHandle_GetCurrentStateTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateInstancesHandle.GetCurrentStateIndex
struct UBendAnimStateInstancesHandle_GetCurrentStateIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimStateInstancesHandle.GetCurrentStateCurveValue
struct UBendAnimStateInstancesHandle_GetCurrentStateCurveValue_Params
{
	struct FName                                       CurveName;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNormalize;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.IsSlotPossiblyActive
struct UBendAnimInstance_IsSlotPossiblyActive_Params
{
	struct FName                                       SlotName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.IsPlayingPerformActionInSlot
struct UBendAnimInstance_IsPlayingPerformActionInSlot_Params
{
	struct FName                                       SlotName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.HasAnimGraphTag
struct UBendAnimInstance_HasAnimGraphTag_Params
{
	struct FName                                       TagName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bQueryActiveStatesOnly;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceTimeRemainingRatio
struct UBendAnimInstance_GetRandomSequenceTimeRemainingRatio_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceTimeRemaining
struct UBendAnimInstance_GetRandomSequenceTimeRemaining_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceLength
struct UBendAnimInstance_GetRandomSequenceLength_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceIsCompleted
struct UBendAnimInstance_GetRandomSequenceIsCompleted_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceCurrentTimeRatio
struct UBendAnimInstance_GetRandomSequenceCurrentTimeRatio_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetRandomSequenceCurrentTime
struct UBendAnimInstance_GetRandomSequenceCurrentTime_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetLocalInt
struct UBendAnimInstance_GetLocalInt_Params
{
	struct FName                                       VariableName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetLocalFloat
struct UBendAnimInstance_GetLocalFloat_Params
{
	struct FName                                       VariableName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetLocalBlendSpace
struct UBendAnimInstance_GetLocalBlendSpace_Params
{
	struct FName                                       VariableName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetLocalAnimSequence
struct UBendAnimInstance_GetLocalAnimSequence_Params
{
	struct FName                                       VariableName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetBlendspaceDistance
struct UBendAnimInstance_GetBlendspaceDistance_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetBlendSpaceClosestSampleValueY
struct UBendAnimInstance_GetBlendSpaceClosestSampleValueY_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutput_SampleFound;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdX;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetBlendSpaceClosestSampleValueX
struct UBendAnimInstance_GetBlendSpaceClosestSampleValueX_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutput_SampleFound;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdY;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnyAnimNotifyTriggerTime
struct UBendAnimInstance_GetAnyAnimNotifyTriggerTime_Params
{
	class UAnimSequenceBase*                           AnimAsset;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AnimNotifyClass;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnimSequenceSpeed
struct UBendAnimInstance_GetAnimSequenceSpeed_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnimSequenceLength
struct UBendAnimInstance_GetAnimSequenceLength_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnimSequenceEndTransform
struct UBendAnimInstance_GetAnimSequenceEndTransform_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnimSequenceDistance
struct UBendAnimInstance_GetAnimSequenceDistance_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.GetAnimSequenceCurrentTime
struct UBendAnimInstance_GetAnimSequenceCurrentTime_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              PlaybackTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bWasFound;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.CreateAnimStateInstancesHandle
struct UBendAnimInstance_CreateAnimStateInstancesHandle_Params
{
	class UBendAnimStateInstancesHandle*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.CanEarlyExitByComparison
struct UBendAnimInstance_CanEarlyExitByComparison_Params
{
	TEnumAsByte<EBendAnimNotifyEarlyExitType>          EarlyExitType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimInstance.CanEarlyExit
struct UBendAnimInstance_CanEarlyExit_Params
{
	float                                              BlendOutTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendAnimNotifyEarlyExitType>          EarlyExitType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.TimerExpireSetDamageIndex_CODE
struct UBendCharacterAnimInstance_TimerExpireSetDamageIndex_CODE_Params
{
};

// Function BendGame.BendCharacterAnimInstance.ShouldEarlyExit
struct UBendCharacterAnimInstance_ShouldEarlyExit_Params
{
	float                                              BlendOutTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendAnimNotifyEarlyExitType>          EarlyExitDestination;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.OnEventHandled_EquippedItemAnimsSwitched
struct UBendCharacterAnimInstance_OnEventHandled_EquippedItemAnimsSwitched_Params
{
};

// Function BendGame.BendCharacterAnimInstance.OnClimbStarting
struct UBendCharacterAnimInstance_OnClimbStarting_Params
{
	struct FBendActionData                             fClimbActionData;                                         // (Parm)
	bool                                               bShouldFallAfterClimb;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendClimbContext                           fClimbContext;                                            // (Parm)
	bool                                               QueuedClimb;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.IsInRagdollAtRest
struct UBendCharacterAnimInstance_IsInRagdollAtRest_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.IKRegistrationChanged
struct UBendCharacterAnimInstance_IKRegistrationChanged_Params
{
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetRandomSequence
struct UBendCharacterAnimInstance_GetRandomSequence_Params
{
	struct FName                                       AnimSequenceGroupName;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetRandomBlendSpace
struct UBendCharacterAnimInstance_GetRandomBlendSpace_Params
{
	struct FName                                       AnimBlendSpaceGroupName;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             LastUsed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetGripPoseIndex
struct UBendCharacterAnimInstance_GetGripPoseIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetEquippedItemBlendSpace
struct UBendCharacterAnimInstance_GetEquippedItemBlendSpace_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetEquippedItemAnimSequence
struct UBendCharacterAnimInstance_GetEquippedItemAnimSequence_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetCharacterStartingAnchorTransform
struct UBendCharacterAnimInstance_GetCharacterStartingAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetCharacterDesiredRotationAnchorTransform
struct UBendCharacterAnimInstance_GetCharacterDesiredRotationAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetArrivalBlendspace
struct UBendCharacterAnimInstance_GetArrivalBlendspace_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UBlendSpaceBase*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.GetArrivalAnimSequence
struct UBendCharacterAnimInstance_GetArrivalAnimSequence_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.CanPlayArrivalBlendspaceFromGroup
struct UBendCharacterAnimInstance_CanPlayArrivalBlendspaceFromGroup_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendSpaceX;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendSpaceY;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.CanPlayArrivalBlendspace
struct UBendCharacterAnimInstance_CanPlayArrivalBlendspace_Params
{
	class UBlendSpaceBase*                             BlendSpace;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendSpaceX;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendSpaceY;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.CanPlayArrivalAnimSequenceFromGroup
struct UBendCharacterAnimInstance_CanPlayArrivalAnimSequenceFromGroup_Params
{
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.CanPlayArrivalAnimSequence
struct UBendCharacterAnimInstance_CanPlayArrivalAnimSequence_Params
{
	class UAnimSequenceBase*                           AnimSequence;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceDeviation;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_OnLandingLeft
struct UBendCharacterAnimInstance_AnimNotify_OnLandingLeft_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_OnLandingEntered
struct UBendCharacterAnimInstance_AnimNotify_OnLandingEntered_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_OnFallingLeft
struct UBendCharacterAnimInstance_AnimNotify_OnFallingLeft_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_OnFallingEntered
struct UBendCharacterAnimInstance_AnimNotify_OnFallingEntered_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Sequence_UpperBody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Sequence_UpperBody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Sequence_Fullbody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Sequence_Fullbody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Sequence_Additive
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Sequence_Additive_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Blendspace_UpperBody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Blendspace_UpperBody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Blendspace_Fullbody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Blendspace_Fullbody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Left_Blendspace_Additive
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Left_Blendspace_Additive_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Sequence_UpperBody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Sequence_UpperBody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Sequence_Fullbody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Sequence_Fullbody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Sequence_Additive
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Sequence_Additive_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Blendspace_UpperBody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Blendspace_UpperBody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Blendspace_Fullbody
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Blendspace_Fullbody_Params
{
};

// Function BendGame.BendCharacterAnimInstance.AnimNotify_DamageAnimDone_Entered_Blendspace_Additive
struct UBendCharacterAnimInstance_AnimNotify_DamageAnimDone_Entered_Blendspace_Additive_Params
{
};

// Function BendGame.BendAIAnimInstance.TurnInPlaceHandler
struct UBendAIAnimInstance_TurnInPlaceHandler_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIAnimInstance.SemiAwareAnimStarted
struct UBendAIAnimInstance_SemiAwareAnimStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.SemiAwareAnimFinished
struct UBendAIAnimInstance_SemiAwareAnimFinished_Params
{
};

// Function BendGame.BendAIAnimInstance.PerformOneShotDelegate
struct UBendAIAnimInstance_PerformOneShotDelegate_Params
{
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIAnimInstance.OnTriggerMeleeMissBranch
struct UBendAIAnimInstance_OnTriggerMeleeMissBranch_Params
{
	class UAnimSequenceBase*                           MissAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIAnimInstance.OnAttackTargetFreeDodgeStartedHandler
struct UBendAIAnimInstance_OnAttackTargetFreeDodgeStartedHandler_Params
{
};

// Function BendGame.BendAIAnimInstance.Handle_DamageDoneState_Exit
struct UBendAIAnimInstance_Handle_DamageDoneState_Exit_Params
{
};

// Function BendGame.BendAIAnimInstance.Handle_DamageAnim_Exit_UpperBody
struct UBendAIAnimInstance_Handle_DamageAnim_Exit_UpperBody_Params
{
};

// Function BendGame.BendAIAnimInstance.Handle_DamageAnim_Exit
struct UBendAIAnimInstance_Handle_DamageAnim_Exit_Params
{
};

// Function BendGame.BendAIAnimInstance.Handle_DamageAnim_Enter_UpperBody
struct UBendAIAnimInstance_Handle_DamageAnim_Enter_UpperBody_Params
{
};

// Function BendGame.BendAIAnimInstance.Handle_DamageAnim_Enter
struct UBendAIAnimInstance_Handle_DamageAnim_Enter_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_StartMeleeMissBranch
struct UBendAIAnimInstance_AnimNotify_StartMeleeMissBranch_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_OverlayOneShot_End
struct UBendAIAnimInstance_AnimNotify_OverlayOneShot_End_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_OverlayOneShot_Begin
struct UBendAIAnimInstance_AnimNotify_OverlayOneShot_Begin_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_OneShotAnimStarted
struct UBendAIAnimInstance_AnimNotify_OneShotAnimStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_OneShotAnimFinished
struct UBendAIAnimInstance_AnimNotify_OneShotAnimFinished_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_MeleeDeathBlow_Start
struct UBendAIAnimInstance_AnimNotify_MeleeDeathBlow_Start_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_MeleeDeathBlow_End
struct UBendAIAnimInstance_AnimNotify_MeleeDeathBlow_End_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_MeleedDeathBlow_Start
struct UBendAIAnimInstance_AnimNotify_MeleedDeathBlow_Start_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_MeleedDeathBlow_End
struct UBendAIAnimInstance_AnimNotify_MeleedDeathBlow_End_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleStarted
struct UBendAIAnimInstance_AnimNotify_GrappleStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleFailedStarted
struct UBendAIAnimInstance_AnimNotify_GrappleFailedStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleFailedEnded
struct UBendAIAnimInstance_AnimNotify_GrappleFailedEnded_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleExitStarted
struct UBendAIAnimInstance_AnimNotify_GrappleExitStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleExitEnded
struct UBendAIAnimInstance_AnimNotify_GrappleExitEnded_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleEnterStarted
struct UBendAIAnimInstance_AnimNotify_GrappleEnterStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleEnterEnded
struct UBendAIAnimInstance_AnimNotify_GrappleEnterEnded_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleEnded
struct UBendAIAnimInstance_AnimNotify_GrappleEnded_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleAttemptStarted
struct UBendAIAnimInstance_AnimNotify_GrappleAttemptStarted_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_GrappleAttemptEnded
struct UBendAIAnimInstance_AnimNotify_GrappleAttemptEnded_Params
{
};

// Function BendGame.BendAIAnimInstance.AnimNotify_EndMeleeMissBranch
struct UBendAIAnimInstance_AnimNotify_EndMeleeMissBranch_Params
{
};

// Function BendGame.BendAIAnimInstance.AbortOneShotDelegate
struct UBendAIAnimInstance_AbortOneShotDelegate_Params
{
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnWeaponHitEnemyHandler
struct UBendAnimalAnimInstance_OnWeaponHitEnemyHandler_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsTaunt
struct UBendAnimalAnimInstance_OnWantsTaunt_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsStartled
struct UBendAnimalAnimInstance_OnWantsStartled_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsSleep
struct UBendAnimalAnimInstance_OnWantsSleep_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnWantsSit
struct UBendAnimalAnimInstance_OnWantsSit_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnWantsScent
struct UBendAnimalAnimInstance_OnWantsScent_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsRetreat
struct UBendAnimalAnimInstance_OnWantsRetreat_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsRest
struct UBendAnimalAnimInstance_OnWantsRest_Params
{
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnWantsMeleeAttack
struct UBendAnimalAnimInstance_OnWantsMeleeAttack_Params
{
	struct FBendAttackData                             BendAttackData;                                           // (Parm)
};

// Function BendGame.BendAnimalAnimInstance.OnWantsLanding
struct UBendAnimalAnimInstance_OnWantsLanding_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsFlying
struct UBendAnimalAnimInstance_OnWantsFlying_Params
{
	bool                                               bEnterFlying;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnWantsFailedAttack
struct UBendAnimalAnimInstance_OnWantsFailedAttack_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsDodge
struct UBendAnimalAnimInstance_OnWantsDodge_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnWantsAlert
struct UBendAnimalAnimInstance_OnWantsAlert_Params
{
};

// Function BendGame.BendAnimalAnimInstance.OnTakeDamageHandler
struct UBendAnimalAnimInstance_OnTakeDamageHandler_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.OnCriticalHitTakenHandler
struct UBendAnimalAnimInstance_OnCriticalHitTakenHandler_Params
{
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.IsCanceledPOIType
struct UBendAnimalAnimInstance_IsCanceledPOIType_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.HasCanceledPOI
struct UBendAnimalAnimInstance_HasCanceledPOI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.GetIsRelevantDamageAnimDone
struct UBendAnimalAnimInstance_GetIsRelevantDamageAnimDone_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TransitionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                AnimIdx;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Taunt_Start
struct UBendAnimalAnimInstance_AnimNotify_Taunt_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Taunt_End
struct UBendAnimalAnimInstance_AnimNotify_Taunt_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_TakeOff_Start
struct UBendAnimalAnimInstance_AnimNotify_TakeOff_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_TakeOff_End
struct UBendAnimalAnimInstance_AnimNotify_TakeOff_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Startled_Start
struct UBendAnimalAnimInstance_AnimNotify_Startled_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Startled_End
struct UBendAnimalAnimInstance_AnimNotify_Startled_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Sleep_Start
struct UBendAnimalAnimInstance_AnimNotify_Sleep_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Sleep_End
struct UBendAnimalAnimInstance_AnimNotify_Sleep_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Sit_Start
struct UBendAnimalAnimInstance_AnimNotify_Sit_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Sit_End
struct UBendAnimalAnimInstance_AnimNotify_Sit_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Scent_Start
struct UBendAnimalAnimInstance_AnimNotify_Scent_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Scent_End
struct UBendAnimalAnimInstance_AnimNotify_Scent_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Scared_Start
struct UBendAnimalAnimInstance_AnimNotify_Scared_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Scared_End
struct UBendAnimalAnimInstance_AnimNotify_Scared_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Rest_Start
struct UBendAnimalAnimInstance_AnimNotify_Rest_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Rest_End
struct UBendAnimalAnimInstance_AnimNotify_Rest_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Reset_Canceled_POI
struct UBendAnimalAnimInstance_AnimNotify_Reset_Canceled_POI_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Perching_Start
struct UBendAnimalAnimInstance_AnimNotify_Perching_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Perching_End
struct UBendAnimalAnimInstance_AnimNotify_Perching_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_OccasionalIdle_Start
struct UBendAnimalAnimInstance_AnimNotify_OccasionalIdle_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_OccasionalIdle_End
struct UBendAnimalAnimInstance_AnimNotify_OccasionalIdle_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_MeleeAttack_Start
struct UBendAnimalAnimInstance_AnimNotify_MeleeAttack_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_MeleeAttack_End
struct UBendAnimalAnimInstance_AnimNotify_MeleeAttack_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Landing_Start
struct UBendAnimalAnimInstance_AnimNotify_Landing_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Landing_End
struct UBendAnimalAnimInstance_AnimNotify_Landing_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_FullBodyDamageReaction_Left
struct UBendAnimalAnimInstance_AnimNotify_FullBodyDamageReaction_Left_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_FullBodyDamageReaction_Entered
struct UBendAnimalAnimInstance_AnimNotify_FullBodyDamageReaction_Entered_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_FlyingTurnAround_End
struct UBendAnimalAnimInstance_AnimNotify_FlyingTurnAround_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_FlyingMovement_Start
struct UBendAnimalAnimInstance_AnimNotify_FlyingMovement_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_FlyingMovement_End
struct UBendAnimalAnimInstance_AnimNotify_FlyingMovement_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Falling_Transition
struct UBendAnimalAnimInstance_AnimNotify_Falling_Transition_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Falling_System_Exited
struct UBendAnimalAnimInstance_AnimNotify_Falling_System_Exited_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Falling_Start
struct UBendAnimalAnimInstance_AnimNotify_Falling_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Falling_Fully_Blended
struct UBendAnimalAnimInstance_AnimNotify_Falling_Fully_Blended_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Falling_Done
struct UBendAnimalAnimInstance_AnimNotify_Falling_Done_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_EdgeTraversal_Exit
struct UBendAnimalAnimInstance_AnimNotify_EdgeTraversal_Exit_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_EdgeTraversal_Enter
struct UBendAnimalAnimInstance_AnimNotify_EdgeTraversal_Enter_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Dodge_Start
struct UBendAnimalAnimInstance_AnimNotify_Dodge_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Dodge_End
struct UBendAnimalAnimInstance_AnimNotify_Dodge_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_DamageReaction_Fully_Blended
struct UBendAnimalAnimInstance_AnimNotify_DamageReaction_Fully_Blended_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Climbing_Turn_Transition
struct UBendAnimalAnimInstance_AnimNotify_Climbing_Turn_Transition_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Climbing_To_Falling_Transition
struct UBendAnimalAnimInstance_AnimNotify_Climbing_To_Falling_Transition_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Climbing_RunToStart_Transition
struct UBendAnimalAnimInstance_AnimNotify_Climbing_RunToStart_Transition_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Climbing_Jump_Transition
struct UBendAnimalAnimInstance_AnimNotify_Climbing_Jump_Transition_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Climbing_Done
struct UBendAnimalAnimInstance_AnimNotify_Climbing_Done_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AttackStance_Start
struct UBendAnimalAnimInstance_AnimNotify_AttackStance_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Alert_Start
struct UBendAnimalAnimInstance_AnimNotify_Alert_Start_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_Alert_End
struct UBendAnimalAnimInstance_AnimNotify_Alert_End_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveFullBodyDamageReaction_Left
struct UBendAnimalAnimInstance_AnimNotify_AdditiveFullBodyDamageReaction_Left_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveFullBodyDamageReaction_Hijack
struct UBendAnimalAnimInstance_AnimNotify_AdditiveFullBodyDamageReaction_Hijack_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveFullBodyDamageReaction_Entered
struct UBendAnimalAnimInstance_AnimNotify_AdditiveFullBodyDamageReaction_Entered_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveFullBodyDamageReaction_CancelHijack
struct UBendAnimalAnimInstance_AnimNotify_AdditiveFullBodyDamageReaction_CancelHijack_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveDamageReaction_Left
struct UBendAnimalAnimInstance_AnimNotify_AdditiveDamageReaction_Left_Params
{
};

// Function BendGame.BendAnimalAnimInstance.AnimNotify_AdditiveDamageReaction_Entered
struct UBendAnimalAnimInstance_AnimNotify_AdditiveDamageReaction_Entered_Params
{
};

// Function BendGame.BendBearAnimInstance.HitDestructible
struct UBendBearAnimInstance_HitDestructible_Params
{
};

// Function BendGame.BendBearAnimInstance.CheckCollision
struct UBendBearAnimInstance_CheckCollision_Params
{
	class AActor*                                      SelfActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendBearAnimInstance.AnimNotify_Stun_Exit
struct UBendBearAnimInstance_AnimNotify_Stun_Exit_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_Stun_Enter
struct UBendBearAnimInstance_AnimNotify_Stun_Enter_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RushLeft
struct UBendBearAnimInstance_AnimNotify_RushLeft_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RushFinishedLeft
struct UBendBearAnimInstance_AnimNotify_RushFinishedLeft_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RushFinishedEntered
struct UBendBearAnimInstance_AnimNotify_RushFinishedEntered_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RushEntered
struct UBendBearAnimInstance_AnimNotify_RushEntered_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RoarLeft
struct UBendBearAnimInstance_AnimNotify_RoarLeft_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_RoarEntered
struct UBendBearAnimInstance_AnimNotify_RoarEntered_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_PrepareRushEntered
struct UBendBearAnimInstance_AnimNotify_PrepareRushEntered_Params
{
};

// Function BendGame.BendBearAnimInstance.AnimNotify_PrepareRushCancelled
struct UBendBearAnimInstance_AnimNotify_PrepareRushCancelled_Params
{
};

// Function BendGame.BendNewtAnimInstance.TransitionQueuedClimbToCurrent
struct UBendNewtAnimInstance_TransitionQueuedClimbToCurrent_Params
{
};

// Function BendGame.BendNewtAnimInstance.LeaveCoverHandler
struct UBendNewtAnimInstance_LeaveCoverHandler_Params
{
	bool                                               hasPath;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNewtAnimInstance.BeginRoofHangHandler
struct UBendNewtAnimInstance_BeginRoofHangHandler_Params
{
	struct FTransform                                  coverAnchor;                                              // (Parm, IsPlainOldData)
	float                                              overhangDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             HandPositions;                                            // (Parm, ZeroConstructor)
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_LeftCover
struct UBendNewtAnimInstance_AnimNotify_LeftCover_Params
{
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_ExitCoverSM
struct UBendNewtAnimInstance_AnimNotify_ExitCoverSM_Params
{
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_EnterCoverFinished
struct UBendNewtAnimInstance_AnimNotify_EnterCoverFinished_Params
{
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_EnterCover
struct UBendNewtAnimInstance_AnimNotify_EnterCover_Params
{
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_ClimbEnding
struct UBendNewtAnimInstance_AnimNotify_ClimbEnding_Params
{
};

// Function BendGame.BendNewtAnimInstance.AnimNotify_ClimbEnded
struct UBendNewtAnimInstance_AnimNotify_ClimbEnded_Params
{
};

// Function BendGame.BendSwarmerAnimInstance.SetForceRecovery
struct UBendSwarmerAnimInstance_SetForceRecovery_Params
{
	TEnumAsByte<EAnimationSlot>                        AnimSlot;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSwarmerAnimInstance.OnWeaponHitEnemyHandler
struct UBendSwarmerAnimInstance_OnWeaponHitEnemyHandler_Params
{
};

// Function BendGame.BendSwarmerAnimInstance.OnTakeDamageHandler
struct UBendSwarmerAnimInstance_OnTakeDamageHandler_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSwarmerAnimInstance.OnCriticalHitTakenHandler
struct UBendSwarmerAnimInstance_OnCriticalHitTakenHandler_Params
{
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendProjectile*                             Projectile;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.StepOutDelegate
struct UBendHumanBaseAnimInstance_StepOutDelegate_Params
{
	TEnumAsByte<ECoverLeanDirection>                   leanDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.StepInDelegate
struct UBendHumanBaseAnimInstance_StepInDelegate_Params
{
	TEnumAsByte<ECoverLeanDirection>                   leanDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.PeekDelegate
struct UBendHumanBaseAnimInstance_PeekDelegate_Params
{
	TEnumAsByte<ECoverLeanDirection>                   leanDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.OnWeaponAnimStarted
struct UBendHumanBaseAnimInstance_OnWeaponAnimStarted_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.OnWeaponAnimFinished
struct UBendHumanBaseAnimInstance_OnWeaponAnimFinished_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.OnLeaveIdleToMoveState
struct UBendHumanBaseAnimInstance_OnLeaveIdleToMoveState_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.LeaveCoverDelegate
struct UBendHumanBaseAnimInstance_LeaveCoverDelegate_Params
{
	bool                                               hasPath;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.GetIsAimingAlpha
struct UBendHumanBaseAnimInstance_GetIsAimingAlpha_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.GetGripPoseIndex
struct UBendHumanBaseAnimInstance_GetGripPoseIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.ExitWatchSelfSacrificeStateDelegate
struct UBendHumanBaseAnimInstance_ExitWatchSelfSacrificeStateDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.ExitSelfSacrificeStateDelegate
struct UBendHumanBaseAnimInstance_ExitSelfSacrificeStateDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.EnterWatchSelfSacrificeStateDelegate
struct UBendHumanBaseAnimInstance_EnterWatchSelfSacrificeStateDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.EnterSelfSacrificeStateDelegate
struct UBendHumanBaseAnimInstance_EnterSelfSacrificeStateDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.EnterCoverDelegate
struct UBendHumanBaseAnimInstance_EnterCoverDelegate_Params
{
	struct FTransform                                  coverAnchor;                                              // (Parm, IsPlainOldData)
	bool                                               highCover;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECoverLeanDirection>                   AnchorDir;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.ChangedCoverAnchorDelegate
struct UBendHumanBaseAnimInstance_ChangedCoverAnchorDelegate_Params
{
	TEnumAsByte<ECoverLeanDirection>                   AnchorDir;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanBaseAnimInstance.CancelStepOutDelegate
struct UBendHumanBaseAnimInstance_CancelStepOutDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.CancelStepInDelegate
struct UBendHumanBaseAnimInstance_CancelStepInDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.CancelPeekDelegate
struct UBendHumanBaseAnimInstance_CancelPeekDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.CancelLeaveCoverDelegate
struct UBendHumanBaseAnimInstance_CancelLeaveCoverDelegate_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_VehicleSubstate_Left
struct UBendHumanBaseAnimInstance_AnimNotify_VehicleSubstate_Left_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_VehicleSubstate_Entered
struct UBendHumanBaseAnimInstance_AnimNotify_VehicleSubstate_Entered_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_VehicleRiderFellOff
struct UBendHumanBaseAnimInstance_AnimNotify_VehicleRiderFellOff_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_VehicleRiderDodge_Left
struct UBendHumanBaseAnimInstance_AnimNotify_VehicleRiderDodge_Left_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_LadderFullyExited
struct UBendHumanBaseAnimInstance_AnimNotify_LadderFullyExited_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_LadderDescendRef02
struct UBendHumanBaseAnimInstance_AnimNotify_LadderDescendRef02_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_LadderDescendRef01
struct UBendHumanBaseAnimInstance_AnimNotify_LadderDescendRef01_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_LadderAscendRef02
struct UBendHumanBaseAnimInstance_AnimNotify_LadderAscendRef02_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_LadderAscendRef01
struct UBendHumanBaseAnimInstance_AnimNotify_LadderAscendRef01_Params
{
};

// Function BendGame.BendHumanBaseAnimInstance.AnimNotify_ExitVehicleStateInstance_Entered
struct UBendHumanBaseAnimInstance_AnimNotify_ExitVehicleStateInstance_Entered_Params
{
};

// Function BendGame.BendHumanAnimInstance.ThrowThrowableDelegate
struct UBendHumanAnimInstance_ThrowThrowableDelegate_Params
{
	class UBlendSpaceBase*                             throwBlendSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.StartLoopingOneShot
struct UBendHumanAnimInstance_StartLoopingOneShot_Params
{
	class UAnimSequenceBase*                           EnterAnim;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LoopAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           EndAnim;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.IsTransitioningFromPerformActionToGroundMovement
struct UBendHumanAnimInstance_IsTransitioningFromPerformActionToGroundMovement_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.HandleFinishedThrow
struct UBendHumanAnimInstance_HandleFinishedThrow_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleFinishedFleeMovement
struct UBendHumanAnimInstance_HandleFinishedFleeMovement_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleDodgeGrenadeStarted
struct UBendHumanAnimInstance_HandleDodgeGrenadeStarted_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleDodgeGrenadeFinished
struct UBendHumanAnimInstance_HandleDodgeGrenadeFinished_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleDamageToCover
struct UBendHumanAnimInstance_HandleDamageToCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleCoverToMoveTransition
struct UBendHumanAnimInstance_HandleCoverToMoveTransition_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleCoverToDamage
struct UBendHumanAnimInstance_HandleCoverToDamage_Params
{
};

// Function BendGame.BendHumanAnimInstance.HandleCoverExitStarted
struct UBendHumanAnimInstance_HandleCoverExitStarted_Params
{
};

// Function BendGame.BendHumanAnimInstance.EnterCoverInterrupted
struct UBendHumanAnimInstance_EnterCoverInterrupted_Params
{
};

// Function BendGame.BendHumanAnimInstance.EndLoopingOneShot
struct UBendHumanAnimInstance_EndLoopingOneShot_Params
{
};

// Function BendGame.BendHumanAnimInstance.DodgeGrenadeDelegate
struct UBendHumanAnimInstance_DodgeGrenadeDelegate_Params
{
	class UBlendSpaceBase*                             DodgeBlendspace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DodgeAngle;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.CoverInvalidatedDelegate
struct UBendHumanAnimInstance_CoverInvalidatedDelegate_Params
{
	class ABendHumanController*                        CoverController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCoverLeaveReason>                 CoverLeaveReason;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.CleanupStepToCover
struct UBendHumanAnimInstance_CleanupStepToCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupStepOutOfCover
struct UBendHumanAnimInstance_CleanupStepOutOfCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupPeekInCover
struct UBendHumanAnimInstance_CleanupPeekInCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupPeek
struct UBendHumanAnimInstance_CleanupPeek_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupLeaveCoverFromAim
struct UBendHumanAnimInstance_CleanupLeaveCoverFromAim_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupLeaveCover
struct UBendHumanAnimInstance_CleanupLeaveCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupEnterCover
struct UBendHumanAnimInstance_CleanupEnterCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupChangeDirection
struct UBendHumanAnimInstance_CleanupChangeDirection_Params
{
};

// Function BendGame.BendHumanAnimInstance.CleanupBuddyWaveFollowerForward
struct UBendHumanAnimInstance_CleanupBuddyWaveFollowerForward_Params
{
};

// Function BendGame.BendHumanAnimInstance.CancelThrowThrowableDelegate
struct UBendHumanAnimInstance_CancelThrowThrowableDelegate_Params
{
};

// Function BendGame.BendHumanAnimInstance.BuddyWaveFollowerForwardDelegate
struct UBendHumanAnimInstance_BuddyWaveFollowerForwardDelegate_Params
{
	bool                                               FollowerOnRight;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanAnimInstance.BuddyResumeLeadingDelegate
struct UBendHumanAnimInstance_BuddyResumeLeadingDelegate_Params
{
};

// Function BendGame.BendHumanAnimInstance.BeginStepOutOfCover
struct UBendHumanAnimInstance_BeginStepOutOfCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.BeginStepBackToCover
struct UBendHumanAnimInstance_BeginStepBackToCover_Params
{
};

// Function BendGame.BendHumanAnimInstance.BeginPeek
struct UBendHumanAnimInstance_BeginPeek_Params
{
};

// Function BendGame.BendHumanAnimInstance.BeginChangeCoverDirection
struct UBendHumanAnimInstance_BeginChangeCoverDirection_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_StartedLoopingOneShot
struct UBendHumanAnimInstance_AnimNotify_StartedLoopingOneShot_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_OnGeneralMovementExit
struct UBendHumanAnimInstance_AnimNotify_OnGeneralMovementExit_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_OnGeneralMovementEnter
struct UBendHumanAnimInstance_AnimNotify_OnGeneralMovementEnter_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_FinishedLoopingOneShot
struct UBendHumanAnimInstance_AnimNotify_FinishedLoopingOneShot_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_EnterCoverBegan
struct UBendHumanAnimInstance_AnimNotify_EnterCoverBegan_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_ClimbStarted
struct UBendHumanAnimInstance_AnimNotify_ClimbStarted_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_ClimbEnding
struct UBendHumanAnimInstance_AnimNotify_ClimbEnding_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_ClimbEndedToFall
struct UBendHumanAnimInstance_AnimNotify_ClimbEndedToFall_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_ClimbEnded
struct UBendHumanAnimInstance_AnimNotify_ClimbEnded_Params
{
};

// Function BendGame.BendHumanAnimInstance.AnimNotify_ClimbApex
struct UBendHumanAnimInstance_AnimNotify_ClimbApex_Params
{
};

// Function BendGame.BendPlayerAnimInstance.ShouldEarlyExitTo_QuickRecovery
struct UBendPlayerAnimInstance_ShouldEarlyExitTo_QuickRecovery_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.ShouldEarlyExitTo_MoveStopOrTurn
struct UBendPlayerAnimInstance_ShouldEarlyExitTo_MoveStopOrTurn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.ShouldEarlyExitTo_MoveStart
struct UBendPlayerAnimInstance_ShouldEarlyExitTo_MoveStart_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.ShouldEarlyExitTo_MovePivot
struct UBendPlayerAnimInstance_ShouldEarlyExitTo_MovePivot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.ShouldEarlyExitTo_Crouch
struct UBendPlayerAnimInstance_ShouldEarlyExitTo_Crouch_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.OnMontageStartedCallback
struct UBendPlayerAnimInstance_OnMontageStartedCallback_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.OnMontageEndedCallback
struct UBendPlayerAnimInstance_OnMontageEndedCallback_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInterrupted;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.OnDamageAnimQuickRecovery
struct UBendPlayerAnimInstance_OnDamageAnimQuickRecovery_Params
{
};

// Function BendGame.BendPlayerAnimInstance.IsTransitioningFromPerformActionToGroundMovement
struct UBendPlayerAnimInstance_IsTransitioningFromPerformActionToGroundMovement_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.GetNextForwardLimb
struct UBendPlayerAnimInstance_GetNextForwardLimb_Params
{
	TEnumAsByte<EFootForward>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerAnimInstance.CleanupLeaveCover
struct UBendPlayerAnimInstance_CleanupLeaveCover_Params
{
};

// Function BendGame.BendPlayerAnimInstance.CleanupEnterCover
struct UBendPlayerAnimInstance_CleanupEnterCover_Params
{
};

// Function BendGame.BendPlayerAnimInstance.CapsuleHit
struct UBendPlayerAnimInstance_CapsuleHit_Params
{
	class AActor*                                      SelfActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_Swimming_Entered
struct UBendPlayerAnimInstance_AnimNotify_Swimming_Entered_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_StartedCounter
struct UBendPlayerAnimInstance_AnimNotify_StartedCounter_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_PairedDodgeExit
struct UBendPlayerAnimInstance_AnimNotify_PairedDodgeExit_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_PairedDodgeEnter
struct UBendPlayerAnimInstance_AnimNotify_PairedDodgeEnter_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_OnGeneralMovementExit
struct UBendPlayerAnimInstance_AnimNotify_OnGeneralMovementExit_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_OnGeneralMovementEnter
struct UBendPlayerAnimInstance_AnimNotify_OnGeneralMovementEnter_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_MeleeSwingHit_Start_2
struct UBendPlayerAnimInstance_AnimNotify_MeleeSwingHit_Start_2_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_MeleeSwingHit_Start
struct UBendPlayerAnimInstance_AnimNotify_MeleeSwingHit_Start_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_MeleeSwingHit_End_2
struct UBendPlayerAnimInstance_AnimNotify_MeleeSwingHit_End_2_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_MeleeSwingHit_End
struct UBendPlayerAnimInstance_AnimNotify_MeleeSwingHit_End_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_FinishCounter
struct UBendPlayerAnimInstance_AnimNotify_FinishCounter_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_ClimbStarted
struct UBendPlayerAnimInstance_AnimNotify_ClimbStarted_Params
{
};

// Function BendGame.BendPlayerAnimInstance.AnimNotify_ClimbLeft
struct UBendPlayerAnimInstance_AnimNotify_ClimbLeft_Params
{
};

// Function BendGame.BendXPECEventPawnAnimInstance.TurnInPlaceHandler
struct UBendXPECEventPawnAnimInstance_TurnInPlaceHandler_Params
{
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.SetLook
struct AXpecDummySkeletalMeshActor_SetLook_Params
{
	class UBendSkeletalMeshLookBase*                   Look;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.ReplaceDeadPawn
struct AXpecDummySkeletalMeshActor_ReplaceDeadPawn_Params
{
	class ABendPawn*                                   DeadPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.PlayAnimation
struct AXpecDummySkeletalMeshActor_PlayAnimation_Params
{
	class UAnimationAsset*                             anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.GetSn
struct AXpecDummySkeletalMeshActor_GetSn_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.GetPopulation
struct AXpecDummySkeletalMeshActor_GetPopulation_Params
{
	class AXpecPopulation*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.GetLipSyncComponent
struct AXpecDummySkeletalMeshActor_GetLipSyncComponent_Params
{
	class UBendLipSyncComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecDummySkeletalMeshActor.DebugPrintInfo
struct AXpecDummySkeletalMeshActor_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendVehicleAnimInstance.WhatBikeIsThis_Code
struct UBendVehicleAnimInstance_WhatBikeIsThis_Code_Params
{
};

// Function BendGame.BendAttachmentUtilities.AttachTo
struct UBendAttachmentUtilities_AttachTo_Params
{
	class USceneComponent*                             InChild;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InChildSocketName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             InParent;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       AttachType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttractor.StopAttraction
struct ABendAttractor_StopAttraction_Params
{
};

// Function BendGame.BendAttractor.SetAttractorData
struct ABendAttractor_SetAttractorData_Params
{
	TEnumAsByte<EAIFactionType>                        Faction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      attackManagerClass;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              interval;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              attractionDuration;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAttractor.OnProjAtRest
struct ABendAttractor_OnProjAtRest_Params
{
};

// Function BendGame.BendAttractor.OnImpact
struct ABendAttractor_OnImpact_Params
{
	struct FHitResult                                  HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendAttractor.OnBounce
struct ABendAttractor_OnBounce_Params
{
	struct FHitResult                                  HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ImpactVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendAttractor.IsOnNavmesh
struct ABendAttractor_IsOnNavmesh_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAttractor.AttractNow
struct ABendAttractor_AttractNow_Params
{
};

// Function BendGame.BendAttractorComponent.AttractNow
struct UBendAttractorComponent_AttractNow_Params
{
};

// Function BendGame.BendAvoidanceComponent.SetGroupsToIgnore
struct UBendAvoidanceComponent_SetGroupsToIgnore_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAvoidanceComponent.SetGroupsToAvoid
struct UBendAvoidanceComponent_SetGroupsToAvoid_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAvoidanceComponent.SetAvoidanceGroup
struct UBendAvoidanceComponent_SetAvoidanceGroup_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAwarenessCommunication.IsRequester
struct UBendAwarenessCommunication_IsRequester_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAwarenessCommunication.GetRequester
struct UBendAwarenessCommunication_GetRequester_Params
{
	class UBendCommunicationComponent*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendAwarenessCommunication.CreateAwarenessCommunication
struct UBendAwarenessCommunication_CreateAwarenessCommunication_Params
{
	class UBendCommunicationComponent*                 RequesterComponent;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FBendCommunicationParameters                AwarenessParameters;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UBendAwarenessCommunication*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.StopInvestigation
struct UBendInvestigationCommunication_StopInvestigation_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.StartInvestigation
struct UBendInvestigationCommunication_StartInvestigation_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptDelegate                             OnStartDelegate;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             OnStopDelegate;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendInvestigationCommunication.LeaveInvestigation
struct UBendInvestigationCommunication_LeaveInvestigation_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               FoundAnything;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.IsInvestigator
struct UBendInvestigationCommunication_IsInvestigator_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.IsInvestigationPending
struct UBendInvestigationCommunication_IsInvestigationPending_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.DidFindAnything
struct UBendInvestigationCommunication_DidFindAnything_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.CreateInvestigationCommunication
struct UBendInvestigationCommunication_CreateInvestigationCommunication_Params
{
	class UBendCommunicationComponent*                 RequesterComponent;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FBendCommunicationParameters                InvestigationParameters;                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                NumberOfInvestigators;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendInvestigationCommunication*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInvestigationCommunication.ApplyForInvestigation
struct UBendInvestigationCommunication_ApplyForInvestigation_Params
{
	class UBendCommunicationComponent*                 CommunicationComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptDelegate                             OnStartDelegate;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FScriptDelegate                             OnStopDelegate;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendBasicInteract.UpdateInteractToCompleted
struct ABendBasicInteract_UpdateInteractToCompleted_Params
{
};

// Function BendGame.BendBasicInteract.UpdateInteractText
struct ABendBasicInteract_UpdateInteractText_Params
{
	struct FString                                     PreText;                                                  // (Parm, ZeroConstructor)
	struct FString                                     PostText;                                                 // (Parm, ZeroConstructor)
};

// Function BendGame.BendBasicInteract.UnbindMoveComplete
struct ABendBasicInteract_UnbindMoveComplete_Params
{
};

// Function BendGame.BendBasicInteract.TryToAutoNav
struct ABendBasicInteract_TryToAutoNav_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.StartTheInteraction
struct ABendBasicInteract_StartTheInteraction_Params
{
};

// Function BendGame.BendBasicInteract.SetInteractionFinished
struct ABendBasicInteract_SetInteractionFinished_Params
{
	bool                                               InteractCompleted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               TurnOffIfOneUseInteract;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.SetInteractingCurrently
struct ABendBasicInteract_SetInteractingCurrently_Params
{
	bool                                               HideTheIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.ResetTheInteraction
struct ABendBasicInteract_ResetTheInteraction_Params
{
};

// Function BendGame.BendBasicInteract.ResetAllSaveGameVariablesForJobReset_Blueprint
struct ABendBasicInteract_ResetAllSaveGameVariablesForJobReset_Blueprint_Params
{
};

// Function BendGame.BendBasicInteract.ResetAllOverlaps
struct ABendBasicInteract_ResetAllOverlaps_Params
{
};

// Function BendGame.BendBasicInteract.ReleaseTheSlateInteract
struct ABendBasicInteract_ReleaseTheSlateInteract_Params
{
};

// Function BendGame.BendBasicInteract.ReceiveMoveCompleted
struct ABendBasicInteract_ReceiveMoveCompleted_Params
{
	struct FAIRequestID                                RequestID;                                                // (Parm)
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.PreInputStartPress
struct ABendBasicInteract_PreInputStartPress_Params
{
};

// Function BendGame.BendBasicInteract.OnInputSucceeded
struct ABendBasicInteract_OnInputSucceeded_Params
{
};

// Function BendGame.BendBasicInteract.OnInputFailed
struct ABendBasicInteract_OnInputFailed_Params
{
};

// Function BendGame.BendBasicInteract.OnInputEnd
struct ABendBasicInteract_OnInputEnd_Params
{
	class USlateInputInteract*                         InputInteract;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.OnBeginPlayCallback
struct ABendBasicInteract_OnBeginPlayCallback_Params
{
};

// Function BendGame.BendBasicInteract.LeftInteractRange_Bind
struct ABendBasicInteract_LeftInteractRange_Bind_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.LeftInteractRange
struct ABendBasicInteract_LeftInteractRange_Params
{
};

// Function BendGame.BendBasicInteract.LeftAdvertiseRange
struct ABendBasicInteract_LeftAdvertiseRange_Params
{
};

// Function BendGame.BendBasicInteract.InteractUsedWhenStreamedIn
struct ABendBasicInteract_InteractUsedWhenStreamedIn_Params
{
};

// Function BendGame.BendBasicInteract.InteractPermissionRemoved
struct ABendBasicInteract_InteractPermissionRemoved_Params
{
};

// Function BendGame.BendBasicInteract.InteractGivenPermission
struct ABendBasicInteract_InteractGivenPermission_Params
{
};

// Function BendGame.BendBasicInteract.InteractDidNotFinish
struct ABendBasicInteract_InteractDidNotFinish_Params
{
};

// Function BendGame.BendBasicInteract.InputPressStarted
struct ABendBasicInteract_InputPressStarted_Params
{
};

// Function BendGame.BendBasicInteract.InputPressReleased
struct ABendBasicInteract_InputPressReleased_Params
{
};

// Function BendGame.BendBasicInteract.InitInteract
struct ABendBasicInteract_InitInteract_Params
{
};

// Function BendGame.BendBasicInteract.EnteredInteractRange_Bind
struct ABendBasicInteract_EnteredInteractRange_Bind_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendBasicInteract.EnteredInteractRange
struct ABendBasicInteract_EnteredInteractRange_Params
{
};

// Function BendGame.BendBasicInteract.EnteredAdvertiseRange
struct ABendBasicInteract_EnteredAdvertiseRange_Params
{
};

// Function BendGame.BendBasicInteract.EnableTheVisualAdvertise
struct ABendBasicInteract_EnableTheVisualAdvertise_Params
{
};

// Function BendGame.BendBasicInteract.EnableOrDisableInteraction
struct ABendBasicInteract_EnableOrDisableInteraction_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBasicInteract.EnableInteract
struct ABendBasicInteract_EnableInteract_Params
{
};

// Function BendGame.BendBasicInteract.DisplayTheSlateInteract
struct ABendBasicInteract_DisplayTheSlateInteract_Params
{
};

// Function BendGame.BendBasicInteract.DisableTheVisualAdvertise
struct ABendBasicInteract_DisableTheVisualAdvertise_Params
{
};

// Function BendGame.BendBasicInteract.DisableInteract
struct ABendBasicInteract_DisableInteract_Params
{
};

// Function BendGame.BendBasicInteract.BeginTheInteract
struct ABendBasicInteract_BeginTheInteract_Params
{
};

// Function BendGame.BendInteractWithPerformAction.UnbindAnimNotify
struct ABendInteractWithPerformAction_UnbindAnimNotify_Params
{
};

// Function BendGame.BendInteractWithPerformAction.OnLoopComplete
struct ABendInteractWithPerformAction_OnLoopComplete_Params
{
	TEnumAsByte<EPeformActionFailedReason>             ReasonForFailure;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInteractWithPerformAction.OnInputSucceeded
struct ABendInteractWithPerformAction_OnInputSucceeded_Params
{
};

// Function BendGame.BendInteractWithPerformAction.ManuallyCancelTheLoop
struct ABendInteractWithPerformAction_ManuallyCancelTheLoop_Params
{
};

// Function BendGame.BendInteractWithPerformAction.LoopTimerUp
struct ABendInteractWithPerformAction_LoopTimerUp_Params
{
};

// Function BendGame.BendInteractWithPerformAction.GenericNotifyHit
struct ABendInteractWithPerformAction_GenericNotifyHit_Params
{
	int                                                HitIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInteractWithPerformAction.Failed_Action
struct ABendInteractWithPerformAction_Failed_Action_Params
{
	TEnumAsByte<EPeformActionFailedReason>             ReasonForFailure;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInteractWithPerformAction.ExitFailed
struct ABendInteractWithPerformAction_ExitFailed_Params
{
	TEnumAsByte<EPeformActionFailedReason>             ReasonForFailure;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInteractWithPerformAction.EventAnimPickup
struct ABendInteractWithPerformAction_EventAnimPickup_Params
{
	class USkeletalMeshComponent*                      MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimNotify*                                 AnimNotify;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInteractWithPerformAction.EnteredInteractRange
struct ABendInteractWithPerformAction_EnteredInteractRange_Params
{
};

// Function BendGame.BendInteractWithPerformAction.EnterComplete
struct ABendInteractWithPerformAction_EnterComplete_Params
{
};

// Function BendGame.BendInteractWithPerformAction.Complete_Action
struct ABendInteractWithPerformAction_Complete_Action_Params
{
};

// Function BendGame.BendInteractWithPerformAction.BindAnimNotify
struct ABendInteractWithPerformAction_BindAnimNotify_Params
{
};

// Function BendGame.BendInteractWithPerformAction.ActionCompleted
struct ABendInteractWithPerformAction_ActionCompleted_Params
{
};

// Function BendGame.BendPlantDeviceOnHelicopter.SetupCollisionReferences
struct ABendPlantDeviceOnHelicopter_SetupCollisionReferences_Params
{
	class UBoxComponent*                               CollisionBox1;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               CollisionBox2;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPlantDeviceOnHelicopter.GetCollisionReferences
struct ABendPlantDeviceOnHelicopter_GetCollisionReferences_Params
{
};

// Function BendGame.BendRipAltar.TryActivateConversation
struct ABendRipAltar_TryActivateConversation_Params
{
};

// Function BendGame.BendRipAltar.OnDonePlayingVO
struct ABendRipAltar_OnDonePlayingVO_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRipAltar.OnCinematicEnded
struct ABendRipAltar_OnCinematicEnded_Params
{
	struct FName                                       Message;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendRipAltar.MissionReady
struct ABendRipAltar_MissionReady_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRipAltar.InitInteract
struct ABendRipAltar_InitInteract_Params
{
};

// Function BendGame.BendRipAltar.InitCodeReferences
struct ABendRipAltar_InitCodeReferences_Params
{
};

// Function BendGame.BendRipAltar.ActivateConversation
struct ABendRipAltar_ActivateConversation_Params
{
};

// Function BendGame.BendRipAltar.ActionCompleted
struct ABendRipAltar_ActionCompleted_Params
{
};

// Function BendGame.BendSearchBody.UnBlockInventoryModifiedUpdatesOnList
struct ABendSearchBody_UnBlockInventoryModifiedUpdatesOnList_Params
{
	TArray<class ABendSearchBody*>                     Bodies;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendSearchBody.RemoveSearchBodyFromNearbyPlayerList
struct ABendSearchBody_RemoveSearchBodyFromNearbyPlayerList_Params
{
};

// Function BendGame.BendSearchBody.RemoveFromSectorData
struct ABendSearchBody_RemoveFromSectorData_Params
{
};

// Function BendGame.BendSearchBody.LoadMeshSwapLookAtIndex
struct ABendSearchBody_LoadMeshSwapLookAtIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSearchBody.IsMaxedOnSearchLoot
struct ABendSearchBody_IsMaxedOnSearchLoot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSearchBody.HasEverBeenSearched
struct ABendSearchBody_HasEverBeenSearched_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSearchBody.ForceInventoryModificationUpdate
struct ABendSearchBody_ForceInventoryModificationUpdate_Params
{
};

// Function BendGame.BendSearchBody.CollectAllSearchBodiesOnListInArea
struct ABendSearchBody_CollectAllSearchBodiesOnListInArea_Params
{
	TArray<class ABendSearchBody*>                     Bodies;                                                   // (Parm, ZeroConstructor)
	float                                              DistanceToCheck;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSearchBody.BlockInventoryModifiedUpdatesOnList
struct ABendSearchBody_BlockInventoryModifiedUpdatesOnList_Params
{
	TArray<class ABendSearchBody*>                     Bodies;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendSearchBody.AttemptToSearchBodyFromAreaPickup
struct ABendSearchBody_AttemptToSearchBodyFromAreaPickup_Params
{
	struct FVector                                     PlayerPositions;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSearchBody.AddToSectorData
struct ABendSearchBody_AddToSectorData_Params
{
};

// Function BendGame.BendSearchBody.AddSearchBodyToNearbyPlayerList
struct ABendSearchBody_AddSearchBodyToNearbyPlayerList_Params
{
};

// Function BendGame.BendTraversalInteract.GetNearbyPickups
struct ABendTraversalInteract_GetNearbyPickups_Params
{
	TArray<class ABendInventoryPickup*>                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendBikeInteractBase.ValidWaterDepth
struct ABendBikeInteractBase_ValidWaterDepth_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.UpdateOverrideLOSLocation
struct ABendBikeInteractBase_UpdateOverrideLOSLocation_Params
{
	bool                                               CanRefuel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.UpdateGascanControl
struct ABendBikeInteractBase_UpdateGascanControl_Params
{
	bool                                               HasControl;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.UpdateFuelAndHealthStats
struct ABendBikeInteractBase_UpdateFuelAndHealthStats_Params
{
};

// Function BendGame.BendBikeInteractBase.SetBikeAdvertiseState
struct ABendBikeInteractBase_SetBikeAdvertiseState_Params
{
	bool                                               IsAvailable;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.SetAdvertisePosition
struct ABendBikeInteractBase_SetAdvertisePosition_Params
{
};

// Function BendGame.BendBikeInteractBase.Set3DVisibilityState
struct ABendBikeInteractBase_Set3DVisibilityState_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceVisibility;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.RepairBikeTick
struct ABendBikeInteractBase_RepairBikeTick_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.OnScrapRemoved
struct ABendBikeInteractBase_OnScrapRemoved_Params
{
	int                                                RemovedCount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.OnRepairProgressChanged
struct ABendBikeInteractBase_OnRepairProgressChanged_Params
{
	float                                              RepairProgress;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.OnBikeRepairBeginEnd
struct ABendBikeInteractBase_OnBikeRepairBeginEnd_Params
{
	bool                                               IsRepairing;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.Interact2Released
struct ABendBikeInteractBase_Interact2Released_Params
{
};

// Function BendGame.BendBikeInteractBase.Interact2Pressed
struct ABendBikeInteractBase_Interact2Pressed_Params
{
};

// Function BendGame.BendBikeInteractBase.EndBikeRepair
struct ABendBikeInteractBase_EndBikeRepair_Params
{
};

// Function BendGame.BendBikeInteractBase.ControlInteract2InputBinds
struct ABendBikeInteractBase_ControlInteract2InputBinds_Params
{
	bool                                               TurnOn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.CheckRideInteract
struct ABendBikeInteractBase_CheckRideInteract_Params
{
};

// Function BendGame.BendBikeInteractBase.CheckQuicksaveInteraction
struct ABendBikeInteractBase_CheckQuicksaveInteraction_Params
{
};

// Function BendGame.BendBikeInteractBase.CheckCanInteractBike
struct ABendBikeInteractBase_CheckCanInteractBike_Params
{
	bool                                               CanInteract;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayerPermission;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               HasDriver;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               HasInteractAvailable;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               WaterDepthPass;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               InStateToRefuel;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ResettingBike;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.CheckAmmoInteraction
struct ABendBikeInteractBase_CheckAmmoInteraction_Params
{
};

// Function BendGame.BendBikeInteractBase.CanDoSecondaryInteractCode
struct ABendBikeInteractBase_CanDoSecondaryInteractCode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBikeInteractBase.BeginBikeRepair
struct ABendBikeInteractBase_BeginBikeRepair_Params
{
	class AVehiclePawn*                                BikeToRepair;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBlendableActor.SetBlendableVector
struct ABendBlendableActor_SetBlendableVector_Params
{
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBlendableActor.SetBlendableScalar
struct ABendBlendableActor_SetBlendableScalar_Params
{
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBlendableActor.OnLerpComplete
struct ABendBlendableActor_OnLerpComplete_Params
{
};

// Function BendGame.BendBlendableActor.LerpBlendables
struct ABendBlendableActor_LerpBlendables_Params
{
	class ABendBlendableActor*                         Curr;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendBlendableActor*                         Next;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBlendableActor.GetBlendableVector
struct ABendBlendableActor_GetBlendableVector_Params
{
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBlendableActor.GetBlendableScalar
struct ABendBlendableActor_GetBlendableScalar_Params
{
	struct FName                                       Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.Sync
struct ABendWorldSpec_Sync_Params
{
	float                                              TimeOfDay;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.Stop
struct ABendWorldSpec_Stop_Params
{
};

// Function BendGame.BendWorldSpec.SetWhiteBalance_WhiteTint
struct ABendWorldSpec_SetWhiteBalance_WhiteTint_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWhiteBalance_WhiteTemp
struct ABendWorldSpec_SetWhiteBalance_WhiteTemp_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_WorldBrightness
struct ABendWorldSpec_SetWeather_WorldBrightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_WindIntensity
struct ABendWorldSpec_SetWeather_WindIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_Wetness
struct ABendWorldSpec_SetWeather_Wetness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_Visibility
struct ABendWorldSpec_SetWeather_Visibility_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_TODSound
struct ABendWorldSpec_SetWeather_TODSound_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_SnowIntensity
struct ABendWorldSpec_SetWeather_SnowIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_RainIntensity
struct ABendWorldSpec_SetWeather_RainIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_LightningProbability
struct ABendWorldSpec_SetWeather_LightningProbability_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetWeather_CloudIntensity
struct ABendWorldSpec_SetWeather_CloudIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetVolFog_TreeFog
struct ABendWorldSpec_SetVolFog_TreeFog_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetVolFog_HeightFalloff
struct ABendWorldSpec_SetVolFog_HeightFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetVolFog_Density
struct ABendWorldSpec_SetVolFog_Density_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetVolFog_AmbientColor
struct ABendWorldSpec_SetVolFog_AmbientColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_MinBrightness
struct ABendWorldSpec_SetTonemapping_MinBrightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_MaxBrightness
struct ABendWorldSpec_SetTonemapping_MaxBrightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_ExposureBias
struct ABendWorldSpec_SetTonemapping_ExposureBias_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_BloomThreshold
struct ABendWorldSpec_SetTonemapping_BloomThreshold_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_BloomIntensity
struct ABendWorldSpec_SetTonemapping_BloomIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetTonemapping_AssumedAverageBaseColor
struct ABendWorldSpec_SetTonemapping_AssumedAverageBaseColor_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_SunTemperature
struct ABendWorldSpec_SetLighting_SunTemperature_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_SunPitch
struct ABendWorldSpec_SetLighting_SunPitch_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_SunColor
struct ABendWorldSpec_SetLighting_SunColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_SunCastShadow
struct ABendWorldSpec_SetLighting_SunCastShadow_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_StarfieldOpacity
struct ABendWorldSpec_SetLighting_StarfieldOpacity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_MoonPitch
struct ABendWorldSpec_SetLighting_MoonPitch_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_MoonColor
struct ABendWorldSpec_SetLighting_MoonColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_MoonCastShadow
struct ABendWorldSpec_SetLighting_MoonCastShadow_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_LocalLightsEnabled
struct ABendWorldSpec_SetLighting_LocalLightsEnabled_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_GIBrightness
struct ABendWorldSpec_SetLighting_GIBrightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_EmissiveIntensityChannels
struct ABendWorldSpec_SetLighting_EmissiveIntensityChannels_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_CinematicSunGlobalIntensity
struct ABendWorldSpec_SetLighting_CinematicSunGlobalIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_CinematicSunDirectLightIntensity
struct ABendWorldSpec_SetLighting_CinematicSunDirectLightIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_AmbientTint
struct ABendWorldSpec_SetLighting_AmbientTint_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetLighting_AmbientBrightness
struct ABendWorldSpec_SetLighting_AmbientBrightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_UpperSkyColorIntensity
struct ABendWorldSpec_SetForegroundClouds_UpperSkyColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_UpperSkyColor
struct ABendWorldSpec_SetForegroundClouds_UpperSkyColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_SunDarkColorMix
struct ABendWorldSpec_SetForegroundClouds_SunDarkColorMix_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_SunColorIntensity
struct ABendWorldSpec_SetForegroundClouds_SunColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_SunColor
struct ABendWorldSpec_SetForegroundClouds_SunColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_ScrollingShadowThickness
struct ABendWorldSpec_SetForegroundClouds_ScrollingShadowThickness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_ScrollingShadowIntensity
struct ABendWorldSpec_SetForegroundClouds_ScrollingShadowIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_Scattering
struct ABendWorldSpec_SetForegroundClouds_Scattering_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_RGBScattering
struct ABendWorldSpec_SetForegroundClouds_RGBScattering_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_LowerSkyColorIntensity
struct ABendWorldSpec_SetForegroundClouds_LowerSkyColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_LowerSkyColor
struct ABendWorldSpec_SetForegroundClouds_LowerSkyColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_GroundColor
struct ABendWorldSpec_SetForegroundClouds_GroundColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_FogFalloff
struct ABendWorldSpec_SetForegroundClouds_FogFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_Extinction
struct ABendWorldSpec_SetForegroundClouds_Extinction_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_Density
struct ABendWorldSpec_SetForegroundClouds_Density_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_DarkColorIntensity
struct ABendWorldSpec_SetForegroundClouds_DarkColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetForegroundClouds_DarkColor
struct ABendWorldSpec_SetForegroundClouds_DarkColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_ZenithFalloff
struct ABendWorldSpec_SetDepthFog_ZenithFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_ZenithColorIntensity
struct ABendWorldSpec_SetDepthFog_ZenithColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_ZenithColor
struct ABendWorldSpec_SetDepthFog_ZenithColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlowVerticalFalloff
struct ABendWorldSpec_SetDepthFog_SunGlowVerticalFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlowIntensity
struct ABendWorldSpec_SetDepthFog_SunGlowIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlowFalloff
struct ABendWorldSpec_SetDepthFog_SunGlowFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlowColor
struct ABendWorldSpec_SetDepthFog_SunGlowColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlow2VerticalFalloff
struct ABendWorldSpec_SetDepthFog_SunGlow2VerticalFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlow2Intensity
struct ABendWorldSpec_SetDepthFog_SunGlow2Intensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlow2Falloff
struct ABendWorldSpec_SetDepthFog_SunGlow2Falloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_SunGlow2Color
struct ABendWorldSpec_SetDepthFog_SunGlow2Color_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_StartColorIntensity
struct ABendWorldSpec_SetDepthFog_StartColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_StartColor
struct ABendWorldSpec_SetDepthFog_StartColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_HorizonFalloff
struct ABendWorldSpec_SetDepthFog_HorizonFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_HorizonFadeToBlackFalloff
struct ABendWorldSpec_SetDepthFog_HorizonFadeToBlackFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_HorizonFadeToBlack
struct ABendWorldSpec_SetDepthFog_HorizonFadeToBlack_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_HorizonColorIntensity
struct ABendWorldSpec_SetDepthFog_HorizonColorIntensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_HorizonColor
struct ABendWorldSpec_SetDepthFog_HorizonColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetDepthFog_Density
struct ABendWorldSpec_SetDepthFog_Density_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetColorCorrection_Saturation
struct ABendWorldSpec_SetColorCorrection_Saturation_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetColorCorrection_Hue
struct ABendWorldSpec_SetColorCorrection_Hue_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetColorCorrection_Contrast
struct ABendWorldSpec_SetColorCorrection_Contrast_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetColorCorrection_ColorBalance
struct ABendWorldSpec_SetColorCorrection_ColorBalance_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetColorCorrection_Brightness
struct ABendWorldSpec_SetColorCorrection_Brightness_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseWhiteBalanceValues
struct ABendWorldSpec_SetBaseWhiteBalanceValues_Params
{
	float                                              WhiteTemp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WhiteTint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseWeatherValues
struct ABendWorldSpec_SetBaseWeatherValues_Params
{
	float                                              CloudIntensity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RainIntensity;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SnowIntensity;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Wetness;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Visibility;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WorldBrightness;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WindIntensity;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TODSound;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LightningProbability;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseVolFogValues
struct ABendWorldSpec_SetBaseVolFogValues_Params
{
	float                                              Density;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HeightFalloff;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                AmbientColor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TreeFog;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseTonemappingValues2
struct ABendWorldSpec_SetBaseTonemappingValues2_Params
{
	float                                              AssumedAverageBaseColor;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinBrightness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxBrightness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseTonemappingValues
struct ABendWorldSpec_SetBaseTonemappingValues_Params
{
	float                                              ExposureBias;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BloomThreshold;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BloomIntensity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseLightingValues3
struct ABendWorldSpec_SetBaseLightingValues3_Params
{
	float                                              CinematicSunGlobalIntensity;                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CinematicSunDirectLightIntensity;                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseLightingValues2
struct ABendWorldSpec_SetBaseLightingValues2_Params
{
	float                                              fSunTemperature;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseLightingValues
struct ABendWorldSpec_SetBaseLightingValues_Params
{
	struct FLinearColor                                SunColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunPitch;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunCastShadow;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MoonColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MoonPitch;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MoonCastShadow;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LocalLightsEnabled;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                AmbientTint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AmbientBrightness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              GIBrightness;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StarfieldOpacity;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EmissiveIntensityChannels;                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseHorizonFadeValues
struct ABendWorldSpec_SetBaseHorizonFadeValues_Params
{
	float                                              HorizonFadeToBlack;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HorizonFadeToBlackFalloff;                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseForegroundCloudsValues
struct ABendWorldSpec_SetBaseForegroundCloudsValues_Params
{
	float                                              Density;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SunColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunColorIntensity;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DarkColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DarkColorIntensity;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunDarkColorMix;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LowerSkyColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LowerSkyColorIntensity;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                UpperSkyColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              UpperSkyColorIntensity;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FogFalloff;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scattering;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Extinction;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseForegroundCloudsRenderValues2
struct ABendWorldSpec_SetBaseForegroundCloudsRenderValues2_Params
{
	struct FLinearColor                                GroundColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RGBScattering;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseForegroundCloudsRenderValues
struct ABendWorldSpec_SetBaseForegroundCloudsRenderValues_Params
{
	float                                              Density;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FogFalloff;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scattering;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScrollingShadowThickness;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScrollingShadowIntensity;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseDepthFogValues
struct ABendWorldSpec_SetBaseDepthFogValues_Params
{
	float                                              Density;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                StartColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HorizonColor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ZenithColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartColorIntensity;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HorizonColorIntensity;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ZenithColorIntensity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HorizonFalloff;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HorizonFadeToBlack;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HorizonFadeToBlackFalloff;                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ZenithFalloff;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SunGlowColor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlowIntensity;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlowFalloff;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlowVerticalFalloff;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SunGlow2Color;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlow2Intensity;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlow2Falloff;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SunGlow2VerticalFalloff;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseColorCorrectionValues
struct ABendWorldSpec_SetBaseColorCorrectionValues_Params
{
	float                                              Hue;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Contrast;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Saturation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Brightness;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorBalance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBaseBackgroundCloudsValues
struct ABendWorldSpec_SetBaseBackgroundCloudsValues_Params
{
	float                                              Density;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SunColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LowerSkyColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                UpperSkyColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FogFalloff;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBackgroundClouds_UpperSkyColor
struct ABendWorldSpec_SetBackgroundClouds_UpperSkyColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBackgroundClouds_SunColor
struct ABendWorldSpec_SetBackgroundClouds_SunColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBackgroundClouds_LowerSkyColor
struct ABendWorldSpec_SetBackgroundClouds_LowerSkyColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBackgroundClouds_FogFalloff
struct ABendWorldSpec_SetBackgroundClouds_FogFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetBackgroundClouds_Density
struct ABendWorldSpec_SetBackgroundClouds_Density_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.SetAtmosphericFogValues
struct ABendWorldSpec_SetAtmosphericFogValues_Params
{
	bool                                               IsBase;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DensityOffset;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceScale;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AltitudeScale;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogDensityColor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FogDistanceLinearity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.ReceiveSync
struct ABendWorldSpec_ReceiveSync_Params
{
	float                                              TimeOfDay;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldSpec.ReceiveStop
struct ABendWorldSpec_ReceiveStop_Params
{
};

// Function BendGame.BendBloodSplatBase.OnParticleCollideHandler
struct ABendBloodSplatBase_OnParticleCollideHandler_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              EmitterTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ParticleTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Normal;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBoundaryFailureComponent.DeactivateFailureChecking
struct UBendBoundaryFailureComponent_DeactivateFailureChecking_Params
{
};

// Function BendGame.BendBoundaryFailureComponent.ActivateFailureChecking
struct UBendBoundaryFailureComponent_ActivateFailureChecking_Params
{
	class ATriggerVolume*                              TriggerVolume;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBrokenWeaponPart.CleanupBrokenPart
struct ABendBrokenWeaponPart_CleanupBrokenPart_Params
{
	class ABendPlayerController*                       AController;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_CurrentReverbChanged.OnReverbChanged
struct UBendBTDec_CurrentReverbChanged_OnReverbChanged_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_CurrentTargetReverbChanged.OnReverbChanged
struct UBendBTDec_CurrentTargetReverbChanged_OnReverbChanged_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_OnTakeDamage.OnPawnDamageCallback
struct UBendBTDec_OnTakeDamage_OnPawnDamageCallback_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_OnTargetChanged.OnTargetChangedCallback
struct UBendBTDec_OnTargetChanged_OnTargetChangedCallback_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_TeamActionId.OnTeamRoleCompleted
struct UBendBTDec_TeamActionId_OnTeamRoleCompleted_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_TeamActionId.OnTeamRoleCleared
struct UBendBTDec_TeamActionId_OnTeamRoleCleared_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Clearer;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTDec_TeamActionId.OnTeamRoleAssigned
struct UBendBTDec_TeamActionId_OnTeamRoleAssigned_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsVector
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsVector_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsString
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsString_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsObject
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsObject_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UObject*                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsName
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsName_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FName                                       Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsInt
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsInt_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsFloat
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsFloat_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsEnum
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsEnum_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsClass
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsClass_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardValueAsBool
struct UBendBTFunctionLibrary_UpdateBlackboardValueAsBool_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsVector
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsVector_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsString
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsString_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsObject
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsObject_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UObject*                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsName
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsName_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsInt
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsInt_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsFloat
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsFloat_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsEnum
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsEnum_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsClass
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsClass_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UClass*                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTFunctionLibrary.UpdateBlackboardNamedValueAsBool
struct UBendBTFunctionLibrary_UpdateBlackboardNamedValueAsBool_Params
{
	class UBTNode*                                     NodeOwner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendBTServ_Animal_Backoff.OnCapsuleHit
struct UBendBTServ_Animal_Backoff_OnCapsuleHit_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendBTServ_Animal_BikeChase.OnTakeDamage
struct UBendBTServ_Animal_BikeChase_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Animal_UpdateBlackboard.OnPawnDied
struct UBendBTServ_Animal_UpdateBlackboard_OnPawnDied_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Animal_UpdateCrow.OnBecomeAware
struct UBendBTServ_Animal_UpdateCrow_OnBecomeAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Animal_UpdateCombat.OnTakeDamage
struct UBendBTServ_Animal_UpdateCombat_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Animal_UpdateCombat.OnSuccessfulAttack
struct UBendBTServ_Animal_UpdateCombat_OnSuccessfulAttack_Params
{
};

// Function BendGame.BendBTServ_Animal_UpdateCombat.OnFailedAttack
struct UBendBTServ_Animal_UpdateCombat_OnFailedAttack_Params
{
};

// Function BendGame.BendBTServ_Animal_UpdateCombat.OnAttackStart
struct UBendBTServ_Animal_UpdateCombat_OnAttackStart_Params
{
	struct FBendAttackData                             AttackData;                                               // (Parm)
};

// Function BendGame.BendBTServ_Animal_UpdateCrowCircling.OnPawnEndTakeOff
struct UBendBTServ_Animal_UpdateCrowCircling_OnPawnEndTakeOff_Params
{
};

// Function BendGame.BendBTServ_Animal_UpdateCrowCircling.FlyToTargetComplete
struct UBendBTServ_Animal_UpdateCrowCircling_FlyToTargetComplete_Params
{
};

// Function BendGame.BendBTServ_Animal_UpdateCrowRetreat.FlyToTargetComplete
struct UBendBTServ_Animal_UpdateCrowRetreat_FlyToTargetComplete_Params
{
};

// Function BendGame.BendBTServ_Human_SemiAware.OnTargetChanged
struct UBendBTServ_Human_SemiAware_OnTargetChanged_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Human_SemiAware.OnStateChanged
struct UBendBTServ_Human_SemiAware_OnStateChanged_Params
{
	TEnumAsByte<ESemiAwareState>                       NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESemiAwareState>                       PrevState;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Human_UpdateAmbient.OnFinishPOIExit
struct UBendBTServ_Human_UpdateAmbient_OnFinishPOIExit_Params
{
	class ABendPOI*                                    CompletedPOI;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           BendAIController;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Human_UpdateMeleeAdvance.OnCoverInvalidated
struct UBendBTServ_Human_UpdateMeleeAdvance_OnCoverInvalidated_Params
{
	class ABendHumanController*                        Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCoverLeaveReason>                 CoverLeaveReason;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_Human_UpdateMeleeWait.OnTargeted
struct UBendBTServ_Human_UpdateMeleeWait_OnTargeted_Params
{
};

// Function BendGame.BendBTServ_Human_UpdateMeleeWait.OnTakeDamage
struct UBendBTServ_Human_UpdateMeleeWait_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_HumanGroundCombat.OnCoverInvalidated
struct UBendBTServ_HumanGroundCombat_OnCoverInvalidated_Params
{
	class ABendHumanController*                        Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCoverLeaveReason>                 CoverLeaveReason;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_IgnoreTargetAsAvoidanceObstacle.OnTargetChangedCallback
struct UBendBTServ_IgnoreTargetAsAvoidanceObstacle_OnTargetChangedCallback_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_RegisterRusher.OnTargetChanged
struct UBendBTServ_RegisterRusher_OnTargetChanged_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanPawn.SpawnActorSearchBody
struct ABendHumanPawn_SpawnActorSearchBody_Params
{
	int                                                NumItemSpawns;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanPawn.ShouldIgnoreLowerBodyDamage
struct ABendHumanPawn_ShouldIgnoreLowerBodyDamage_Params
{
	bool                                               Ignore;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHumanPawn.OnBeginCombatHunt
struct ABendHumanPawn_OnBeginCombatHunt_Params
{
	struct FVector                                     PlayerPos;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLastKnownPos;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NPCPosition;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateFreakerBB.OnStatusStarted
struct UBendBTServ_UpdateFreakerBB_OnStatusStarted_Params
{
	class UStatusEffect*                               StatusEffect;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateFreakerBB.OnStatusEnding
struct UBendBTServ_UpdateFreakerBB_OnStatusEnding_Params
{
	class UStatusEffect*                               StatusEffect;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateFreakerBB.OnBecomeUnaware
struct UBendBTServ_UpdateFreakerBB_OnBecomeUnaware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateFreakerBB.OnBecomeSemiAware
struct UBendBTServ_UpdateFreakerBB_OnBecomeSemiAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateFreakerBB.OnBecomeAware
struct UBendBTServ_UpdateFreakerBB_OnBecomeAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateScreamerBB.OnTakePointDamage
struct UBendBTServ_UpdateScreamerBB_OnTakePointDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShotFromDirection;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateReacherCombat.OnTakeDamage
struct UBendBTServ_UpdateReacherCombat_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTServ_UpdateReacherCombat.OnSuccessfulAttack
struct UBendBTServ_UpdateReacherCombat_OnSuccessfulAttack_Params
{
};

// Function BendGame.BendBTServ_UpdateReacherCombat.OnAttackStart
struct UBendBTServ_UpdateReacherCombat_OnAttackStart_Params
{
	struct FBendAttackData                             AttackData;                                               // (Parm)
};

// Function BendGame.BendBTServ_UpdateSurrender.OnTargeted
struct UBendBTServ_UpdateSurrender_OnTargeted_Params
{
};

// Function BendGame.BendBTServ_UpdateSurrender.OnTakeDamage
struct UBendBTServ_UpdateSurrender_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_Animal_AttemptAnimSequence.OnAnimStarted
struct UBendBTTask_Animal_AttemptAnimSequence_OnAnimStarted_Params
{
};

// Function BendGame.BendBTTask_Animal_AttemptAnimSequence.OnAnimEnded
struct UBendBTTask_Animal_AttemptAnimSequence_OnAnimEnded_Params
{
};

// Function BendGame.BendBTTask_EnterCover.OnEnterFinished
struct UBendBTTask_EnterCover_OnEnterFinished_Params
{
};

// Function BendGame.BendBTTask_Human_CoverPeek.OnPeekStarted
struct UBendBTTask_Human_CoverPeek_OnPeekStarted_Params
{
};

// Function BendGame.BendBTTask_Human_CoverPeek.OnPeekFinished
struct UBendBTTask_Human_CoverPeek_OnPeekFinished_Params
{
};

// Function BendGame.BendBTTask_Human_DodgeGrenade.DodgeAnimStarted
struct UBendBTTask_Human_DodgeGrenade_DodgeAnimStarted_Params
{
};

// Function BendGame.BendBTTask_Human_DodgeGrenade.DodgeAnimFinished
struct UBendBTTask_Human_DodgeGrenade_DodgeAnimFinished_Params
{
};

// Function BendGame.BendBTTask_Human_FireBurst.OnTargetChanged
struct UBendBTTask_Human_FireBurst_OnTargetChanged_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_Human_FireBurst.OnTakeDamage
struct UBendBTTask_Human_FireBurst_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_Human_FireBurst.OnStepInStarted
struct UBendBTTask_Human_FireBurst_OnStepInStarted_Params
{
};

// Function BendGame.BendBTTask_Human_FireBurst.OnStepInFinished
struct UBendBTTask_Human_FireBurst_OnStepInFinished_Params
{
};

// Function BendGame.BendBTTask_Human_FireBurst.OnFireFinished
struct UBendBTTask_Human_FireBurst_OnFireFinished_Params
{
};

// Function BendGame.BendBTTask_Human_FireBurst.OnDamageStarted
struct UBendBTTask_Human_FireBurst_OnDamageStarted_Params
{
};

// Function BendGame.BendBTTask_Human_FireBurst.OnDamageFinished
struct UBendBTTask_Human_FireBurst_OnDamageFinished_Params
{
};

// Function BendGame.BendBTTask_Human_LeanOutOfCover.OnTakeDamage
struct UBendBTTask_Human_LeanOutOfCover_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_Human_LeanOutOfCover.OnStepOutStarted
struct UBendBTTask_Human_LeanOutOfCover_OnStepOutStarted_Params
{
};

// Function BendGame.BendBTTask_Human_LeanOutOfCover.OnStepOutFinished
struct UBendBTTask_Human_LeanOutOfCover_OnStepOutFinished_Params
{
};

// Function BendGame.BendBTTask_Human_StepToCover.OnStepInFinished
struct UBendBTTask_Human_StepToCover_OnStepInFinished_Params
{
};

// Function BendGame.BendBTTask_LootNewtStealWeapon.OnWeaponAdded
struct UBendBTTask_LootNewtStealWeapon_OnWeaponAdded_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_PerformOneShot.OnOneShotStarted
struct UBendBTTask_PerformOneShot_OnOneShotStarted_Params
{
};

// Function BendGame.BendBTTask_PerformOneShot.OnOneShotFinished
struct UBendBTTask_PerformOneShot_OnOneShotFinished_Params
{
};

// Function BendGame.BendBTTask_PlayLoopingOneShot.OnOneShotStarted
struct UBendBTTask_PlayLoopingOneShot_OnOneShotStarted_Params
{
};

// Function BendGame.BendBTTask_PlayLoopingOneShot.OnOneShotFinished
struct UBendBTTask_PlayLoopingOneShot_OnOneShotFinished_Params
{
};

// Function BendGame.BendBTTask_PlaySemiAwareAnim.OnBecomeAware
struct UBendBTTask_PlaySemiAwareAnim_OnBecomeAware_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_PlaySemiAwareAnim.OnAnimStarted
struct UBendBTTask_PlaySemiAwareAnim_OnAnimStarted_Params
{
};

// Function BendGame.BendBTTask_PlaySemiAwareAnim.OnAnimComplete
struct UBendBTTask_PlaySemiAwareAnim_OnAnimComplete_Params
{
};

// Function BendGame.BendBTTask_PlayVOLatent.OnDonePlayingVO
struct UBendBTTask_PlayVOLatent_OnDonePlayingVO_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSoundName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_ScreamerHide.OnOneShotFinished
struct UBendBTTask_ScreamerHide_OnOneShotFinished_Params
{
};

// Function BendGame.BendBTTask_SniperAiming.OnPawnDamageCallback
struct UBendBTTask_SniperAiming_OnPawnDamageCallback_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PawnDamaged;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalHit;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               KillingBlow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_SniperAimingAttack.OnInstigatedDamage
struct UBendBTTask_SniperAimingAttack_OnInstigatedDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamagedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_SniperAimingAttack.OnBulletSpawned
struct UBendBTTask_SniperAimingAttack_OnBulletSpawned_Params
{
	class ABendProjectile*                             Bullet;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnTeamRoleStarted
struct UBendBTTask_HumanSquadBase_OnTeamRoleStarted_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnTeamRoleReplaced
struct UBendBTTask_HumanSquadBase_OnTeamRoleReplaced_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       OldRoleName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           OldRoleId;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NewRoleName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           NewRoleId;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnTeamRoleQuit
struct UBendBTTask_HumanSquadBase_OnTeamRoleQuit_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnTeamRoleComplete
struct UBendBTTask_HumanSquadBase_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnTeamRoleCleared
struct UBendBTTask_HumanSquadBase_OnTeamRoleCleared_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Clearer;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnMemberRemoved
struct UBendBTTask_HumanSquadBase_OnMemberRemoved_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBase.OnMemberAdded
struct UBendBTTask_HumanSquadBase_OnMemberAdded_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnTeamRoleStarted
struct UBendBTTask_HumanSquadBaseOld_OnTeamRoleStarted_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnTeamRoleReplaced
struct UBendBTTask_HumanSquadBaseOld_OnTeamRoleReplaced_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       OldRoleName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           OldRoleId;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NewRoleName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           NewRoleId;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnTeamRoleEnded
struct UBendBTTask_HumanSquadBaseOld_OnTeamRoleEnded_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnTeamRoleComplete
struct UBendBTTask_HumanSquadBaseOld_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnTeamRoleCleared
struct UBendBTTask_HumanSquadBaseOld_OnTeamRoleCleared_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Clearer;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnScriptingBegin
struct UBendBTTask_HumanSquadBaseOld_OnScriptingBegin_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendAIScriptingMode>                  ScriptingMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnMemberRemoved
struct UBendBTTask_HumanSquadBaseOld_OnMemberRemoved_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnMemberAdded
struct UBendBTTask_HumanSquadBaseOld_OnMemberAdded_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadBaseOld.OnDocileChanged
struct UBendBTTask_HumanSquadBaseOld_OnDocileChanged_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadAreaSearch.OnSquadMemberKilled
struct UBendBTTask_HumanSquadAreaSearch_OnSquadMemberKilled_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadAreaSearch.OnMemberBecomeUnaware
struct UBendBTTask_HumanSquadAreaSearch_OnMemberBecomeUnaware_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadAreaSearch.OnMemberBecomeAware
struct UBendBTTask_HumanSquadAreaSearch_OnMemberBecomeAware_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadAreaSearch.OnAreaSearchClosed
struct UBendBTTask_HumanSquadAreaSearch_OnAreaSearchClosed_Params
{
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnTeamRoleComplete
struct UBendBTTask_HumanSquadCombatHunt_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnTeamRoleCleared
struct UBendBTTask_HumanSquadCombatHunt_OnTeamRoleCleared_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Clearer;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PreviousTeamRole;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnSquadMemberRemoved
struct UBendBTTask_HumanSquadCombatHunt_OnSquadMemberRemoved_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnSquadMemberKilled
struct UBendBTTask_HumanSquadCombatHunt_OnSquadMemberKilled_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnCurrentReverbChanged
struct UBendBTTask_HumanSquadCombatHunt_OnCurrentReverbChanged_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadCombatHunt.OnCombatHuntFinished
struct UBendBTTask_HumanSquadCombatHunt_OnCombatHuntFinished_Params
{
	int                                                SquadId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Succeeded;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadDisentangleFrontLine.OnTeamRoleComplete
struct UBendBTTask_HumanSquadDisentangleFrontLine_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadDisentangleFrontLine.OnSquadMemberRemoved
struct UBendBTTask_HumanSquadDisentangleFrontLine_OnSquadMemberRemoved_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadDisentangleFrontLine.OnSquadMemberAdded
struct UBendBTTask_HumanSquadDisentangleFrontLine_OnSquadMemberAdded_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadHideFromSniper.OnTeamRoleComplete
struct UBendBTTask_HumanSquadHideFromSniper_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadHideFromSniper.OnSquadMemberRemoved
struct UBendBTTask_HumanSquadHideFromSniper_OnSquadMemberRemoved_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_HumanSquadHideFromSniper.OnSquadMemberAdded
struct UBendBTTask_HumanSquadHideFromSniper_OnSquadMemberAdded_Params
{
	class UBendAISquad*                                Squad;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Member;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_NewtTeamDistraction.OnTeamRoleComplete
struct UBendBTTask_NewtTeamDistraction_OnTeamRoleComplete_Params
{
	class ABendAIController*                           MemberAIController;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RoleCompleted;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           RoleId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSuccess;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_ThrowThrowable.OnThrowFinished
struct UBendBTTask_ThrowThrowable_OnThrowFinished_Params
{
};

// Function BendGame.BendBTTask_ThrowThrowable.OnTakeDamage
struct UBendBTTask_ThrowThrowable_OnTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBTTask_ThrowThrowable.OnStepOutFinished
struct UBendBTTask_ThrowThrowable_OnStepOutFinished_Params
{
};

// Function BendGame.BendBTTask_TurnInPlace.OnFinishedTIP
struct UBendBTTask_TurnInPlace_OnFinishedTIP_Params
{
};

// Function BendGame.BendBunkerData.SetTrackingStarted
struct UBendBunkerData_SetTrackingStarted_Params
{
};

// Function BendGame.BendBunkerData.SetTrackingComplete
struct UBendBunkerData_SetTrackingComplete_Params
{
};

// Function BendGame.BendBunkerData.SetMapTaken
struct UBendBunkerData_SetMapTaken_Params
{
};

// Function BendGame.BendBunkerData.SetEnemyCampDiscovered
struct UBendBunkerData_SetEnemyCampDiscovered_Params
{
};

// Function BendGame.BendBunkerData.SetEnemyCampCleared
struct UBendBunkerData_SetEnemyCampCleared_Params
{
};

// Function BendGame.BendBunkerData.SecureBunker
struct UBendBunkerData_SecureBunker_Params
{
};

// Function BendGame.BendBunkerData.ResetBunkerData
struct UBendBunkerData_ResetBunkerData_Params
{
};

// Function BendGame.BendBunkerData.DiscoverBunker
struct UBendBunkerData_DiscoverBunker_Params
{
};

// Function BendGame.BendButtonPressEvent.TimeScaleInputEvent
struct ABendButtonPressEvent_TimeScaleInputEvent_Params
{
};

// Function BendGame.BendButtonPressEvent.StartButtonEvent
struct ABendButtonPressEvent_StartButtonEvent_Params
{
};

// Function BendGame.BendButtonPressEvent.SetInputAction
struct ABendButtonPressEvent_SetInputAction_Params
{
	struct FName                                       InActionName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendButtonPressEvent.SetButtonEventSuccessful
struct ABendButtonPressEvent_SetButtonEventSuccessful_Params
{
};

// Function BendGame.BendButtonPressEvent.SetButtonEventFail
struct ABendButtonPressEvent_SetButtonEventFail_Params
{
};

// Function BendGame.BendButtonPressEvent.NotifyButtonEventReleased
struct ABendButtonPressEvent_NotifyButtonEventReleased_Params
{
};

// Function BendGame.BendButtonPressEvent.NotifyButtonEventDeactivated
struct ABendButtonPressEvent_NotifyButtonEventDeactivated_Params
{
};

// Function BendGame.BendButtonPressEvent.NotifyButtonEventActivated
struct ABendButtonPressEvent_NotifyButtonEventActivated_Params
{
};

// Function BendGame.BendButtonPressEvent.NotifyButtonEvent
struct ABendButtonPressEvent_NotifyButtonEvent_Params
{
};

// Function BendGame.BendButtonPressEvent.IsButtonEventComplete
struct ABendButtonPressEvent_IsButtonEventComplete_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendButtonPressEvent.GetCompletionPercent
struct ABendButtonPressEvent_GetCompletionPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendButtonPressEvent.DeactivateButtonEvent
struct ABendButtonPressEvent_DeactivateButtonEvent_Params
{
};

// Function BendGame.BendButtonPressEvent.ActivateButtonEvent
struct ABendButtonPressEvent_ActivateButtonEvent_Params
{
};

// Function BendGame.BendButtonPressEventBlueprintSupport.UpdatePosition
struct ABendButtonPressEventBlueprintSupport_UpdatePosition_Params
{
};

// Function BendGame.BendButtonPressEventBlueprintSupport.UpdateContextualPosition
struct ABendButtonPressEventBlueprintSupport_UpdateContextualPosition_Params
{
};

// Function BendGame.BendButtonPressEventBlueprintSupport.OnDebuggingActive
struct ABendButtonPressEventBlueprintSupport_OnDebuggingActive_Params
{
};

// Function BendGame.BendButtonPressEventBlueprintSupport.ButtonEventCompletelyDecayed
struct ABendButtonPressEventBlueprintSupport_ButtonEventCompletelyDecayed_Params
{
};

// Function BendGame.BendGrappleButtonPressEvent.OnDebuggingActive
struct ABendGrappleButtonPressEvent_OnDebuggingActive_Params
{
};

// Function BendGame.BendGrappleButtonPressEvent.OnCompletionPercentChanged
struct ABendGrappleButtonPressEvent_OnCompletionPercentChanged_Params
{
};

// Function BendGame.BendCamDebug.SetMultiplier
struct UBendCamDebug_SetMultiplier_Params
{
	float                                              M;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamMenu.SetTransform
struct UBendCamMenu_SetTransform_Params
{
	struct FTransform                                  xform;                                                    // (ConstParm, Parm, IsPlainOldData)
};

// Function BendGame.BendCamFollow.SnapToTarget
struct UBendCamFollow_SnapToTarget_Params
{
	class USceneComponent*                             snapTarget;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamFollow.SetPolarGoalFromTTY
struct UBendCamFollow_SetPolarGoalFromTTY_Params
{
	float                                              pivotX_A;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pivotY_A;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pivotZ_A;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goaldist_A;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goalyaw_A;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goalpitch_A;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pivotX_B;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pivotY_B;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              pivotZ_B;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goaldist_B;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goalyaw_B;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              goalpitch_B;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamFollow.RemoveAllCameraIgnoreExtraTargets
struct UBendCamFollow_RemoveAllCameraIgnoreExtraTargets_Params
{
};

// Function BendGame.BendCamFollow.LookAtVector
struct UBendCamFollow_LookAtVector_Params
{
	struct FVector                                     LookAtVector;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               interruptable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamFollow.LookAtActor
struct UBendCamFollow_LookAtActor_Params
{
	class AActor*                                      LookAtActor;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               interruptable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamFollow.LookAt
struct UBendCamFollow_LookAt_Params
{
	struct FVector                                     lookAtPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               interruptable;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamFollow.CancelSnapTo
struct UBendCamFollow_CancelSnapTo_Params
{
};

// Function BendGame.BendCamFollow.CancelLookAt
struct UBendCamFollow_CancelLookAt_Params
{
};

// Function BendGame.BendCamFollow.AddIgnoreCameraExtraTargets
struct UBendCamFollow_AddIgnoreCameraExtraTargets_Params
{
	class AActor*                                      NewIgnoredActor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManualAim.OnPlayerWasDamaged
struct UBendCamManualAim_OnPlayerWasDamaged_Params
{
	bool                                               EnteredAnim;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamManualAim.OnPlayerRespawned
struct UBendCamManualAim_OnPlayerRespawned_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMapRenderCam.SetTransform
struct UBendMapRenderCam_SetTransform_Params
{
	struct FTransform                                  xform;                                                    // (ConstParm, Parm, IsPlainOldData)
};

// Function BendGame.BendMapRenderCam.SetMultiplier
struct UBendMapRenderCam_SetMultiplier_Params
{
	float                                              M;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetWhiteBalanceTint
struct UBendCamModifier_Post_SetWhiteBalanceTint_Params
{
	float                                              TintIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetWhiteBalanceTemp
struct UBendCamModifier_Post_SetWhiteBalanceTemp_Params
{
	float                                              WhiteTempIn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetVignetteStrength
struct UBendCamModifier_Post_SetVignetteStrength_Params
{
	float                                              VignetteStrengthIn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetVignetteFalloff
struct UBendCamModifier_Post_SetVignetteFalloff_Params
{
	float                                              VignetteFalloffIn;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetVibrancy
struct UBendCamModifier_Post_SetVibrancy_Params
{
	float                                              VibrancyIn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetTransitionSpread
struct UBendCamModifier_Post_SetTransitionSpread_Params
{
	float                                              TransitionSpreadIn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetTransitionDepth
struct UBendCamModifier_Post_SetTransitionDepth_Params
{
	float                                              TransitionDepthIn;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetSaturation
struct UBendCamModifier_Post_SetSaturation_Params
{
	float                                              SaturationIn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetPresetName
struct UBendCamModifier_Post_SetPresetName_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FName                                       PresetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendPhotoModePostPreset                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendCamModifier_Post.SetPostProcessSettings
struct UBendCamModifier_Post_SetPostProcessSettings_Params
{
	struct FPostProcessSettings                        PostProcessSettings;                                      // (Parm, OutParm)
};

// Function BendGame.BendCamModifier_Post.SetOffSet
struct UBendCamModifier_Post_SetOffSet_Params
{
	struct FVector                                     OffsetIn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetNearTint
struct UBendCamModifier_Post_SetNearTint_Params
{
	struct FLinearColor                                NearTintIn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetNearSaturation
struct UBendCamModifier_Post_SetNearSaturation_Params
{
	struct FLinearColor                                NearSaturationIn;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetNearGamma
struct UBendCamModifier_Post_SetNearGamma_Params
{
	struct FLinearColor                                NearGammaIn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetGamma
struct UBendCamModifier_Post_SetGamma_Params
{
	struct FVector                                     GammaIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetGain
struct UBendCamModifier_Post_SetGain_Params
{
	struct FVector                                     GainIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFStop
struct UBendCamModifier_Post_SetFStop_Params
{
	float                                              FStopIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFocalDist
struct UBendCamModifier_Post_SetFocalDist_Params
{
	float                                              FocalDistIn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFilmGrainIntensity
struct UBendCamModifier_Post_SetFilmGrainIntensity_Params
{
	float                                              FilmGrainIntensityIn;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFarTint
struct UBendCamModifier_Post_SetFarTint_Params
{
	struct FLinearColor                                FarTintIn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFarSaturation
struct UBendCamModifier_Post_SetFarSaturation_Params
{
	struct FLinearColor                                FarSaturationIn;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetFarGamma
struct UBendCamModifier_Post_SetFarGamma_Params
{
	struct FLinearColor                                FarGammaIn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetContrast
struct UBendCamModifier_Post_SetContrast_Params
{
	float                                              ContrastIn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetColorContrast
struct UBendCamModifier_Post_SetColorContrast_Params
{
	struct FVector                                     ColorContrastIn;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBrightness
struct UBendCamModifier_Post_SetBrightness_Params
{
	float                                              BrightnessIn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomOutput2MaxIntensity
struct UBendCamModifier_Post_SetBloomOutput2MaxIntensity_Params
{
	float                                              MaxIntenistyIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomOutput1MaxIntensity
struct UBendCamModifier_Post_SetBloomOutput1MaxIntensity_Params
{
	float                                              MaxIntenistyIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomMinIntensityInput2
struct UBendCamModifier_Post_SetBloomMinIntensityInput2_Params
{
	float                                              MinIntensityIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomMinIntensityInput1
struct UBendCamModifier_Post_SetBloomMinIntensityInput1_Params
{
	float                                              MinIntensityIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomMaxIntensityInput2
struct UBendCamModifier_Post_SetBloomMaxIntensityInput2_Params
{
	float                                              MaxIntenistyIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomMaxIntensityInput1
struct UBendCamModifier_Post_SetBloomMaxIntensityInput1_Params
{
	float                                              MaxIntenistyIn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomInput2Scale
struct UBendCamModifier_Post_SetBloomInput2Scale_Params
{
	float                                              ScaleIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloomInput1Scale
struct UBendCamModifier_Post_SetBloomInput1Scale_Params
{
	float                                              ScaleIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloom2Size
struct UBendCamModifier_Post_SetBloom2Size_Params
{
	struct FVector2D                                   SizeIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloom2Color
struct UBendCamModifier_Post_SetBloom2Color_Params
{
	struct FVector                                     ColorIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloom1Size
struct UBendCamModifier_Post_SetBloom1Size_Params
{
	struct FVector2D                                   SizeIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SetBloom1Color
struct UBendCamModifier_Post_SetBloom1Color_Params
{
	struct FVector                                     ColorIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SavePhotoModePresetByIndex
struct UBendCamModifier_Post_SavePhotoModePresetByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SavePhotoModePreset
struct UBendCamModifier_Post_SavePhotoModePreset_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.SaveCurrentSettingsAsPreset
struct UBendCamModifier_Post_SaveCurrentSettingsAsPreset_Params
{
	struct FName                                       PresetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.RemovePhotoModePresetByName
struct UBendCamModifier_Post_RemovePhotoModePresetByName_Params
{
	struct FName                                       PresetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.RemovePhotoModePresetByIndex
struct UBendCamModifier_Post_RemovePhotoModePresetByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.LoadUserCreatedPhotoModePresets
struct UBendCamModifier_Post_LoadUserCreatedPhotoModePresets_Params
{
	TArray<struct FBendPhotoModePostPreset>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendCamModifier_Post.LoadPhotoModePresetByName
struct UBendCamModifier_Post_LoadPhotoModePresetByName_Params
{
	struct FName                                       PresetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendPhotoModePostPreset                    PostPreset;                                               // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.LoadPhotoModePresetByIndex
struct UBendCamModifier_Post_LoadPhotoModePresetByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendPhotoModePostPreset                    PostPreset;                                               // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetVectorValue
struct UBendCamModifier_Post_GetPresetVectorValue_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EPhotoModePresetSetting>               Setting;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetVector2DValue
struct UBendCamModifier_Post_GetPresetVector2DValue_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EPhotoModePresetSetting>               Setting;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OutValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetNameByIndex
struct UBendCamModifier_Post_GetPresetNameByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Name;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetName
struct UBendCamModifier_Post_GetPresetName_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetLinearColorValue
struct UBendCamModifier_Post_GetPresetLinearColorValue_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EPhotoModePresetSetting>               Setting;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                OutValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetFloatValue
struct UBendCamModifier_Post_GetPresetFloatValue_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EPhotoModePresetSetting>               Setting;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetPresetDepthOfFieldMethod
struct UBendCamModifier_Post_GetPresetDepthOfFieldMethod_Params
{
	struct FBendPhotoModePostPreset                    Preset;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EDepthOfFieldMethod>                   OutValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetCurrentSettings
struct UBendCamModifier_Post_GetCurrentSettings_Params
{
	struct FBendPhotoModePostPreset                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendCamModifier_Post.GetContrast
struct UBendCamModifier_Post_GetContrast_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.GetBrightness
struct UBendCamModifier_Post_GetBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.DoesPhotoModePresetNameExist
struct UBendCamModifier_Post_DoesPhotoModePresetNameExist_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCamModifier_Post.ClearPhotoModePresets
struct UBendCamModifier_Post_ClearPhotoModePresets_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionMoveToTurn_RegardlessCanEarlyOutCurrentTurn
struct UBendCharacterMovementComponent_WantsToTransitionMoveToTurn_RegardlessCanEarlyOutCurrentTurn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionMoveToTurn
struct UBendCharacterMovementComponent_WantsToTransitionMoveToTurn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionMoveToIdle_OLD
struct UBendCharacterMovementComponent_WantsToTransitionMoveToIdle_OLD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionMoveToIdle_NEW
struct UBendCharacterMovementComponent_WantsToTransitionMoveToIdle_NEW_Params
{
	float                                              DesiredMoveToStopThreshold;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionIdleToTurn_RegardlessCanEarlyOutCurrentTurn
struct UBendCharacterMovementComponent_WantsToTransitionIdleToTurn_RegardlessCanEarlyOutCurrentTurn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionIdleToTurn
struct UBendCharacterMovementComponent_WantsToTransitionIdleToTurn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.WantsToTransitionIdleToMove
struct UBendCharacterMovementComponent_WantsToTransitionIdleToMove_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.UpdateTurnStatus
struct UBendCharacterMovementComponent_UpdateTurnStatus_Params
{
};

// Function BendGame.BendCharacterMovementComponent.UpdateCanEarlyOutAnyTurnInProgress
struct UBendCharacterMovementComponent_UpdateCanEarlyOutAnyTurnInProgress_Params
{
};

// Function BendGame.BendCharacterMovementComponent.UnregisterProceduralRotationSuppression_ByName
struct UBendCharacterMovementComponent_UnregisterProceduralRotationSuppression_ByName_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.UnregisterProceduralRotationSuppression
struct UBendCharacterMovementComponent_UnregisterProceduralRotationSuppression_Params
{
};

// Function BendGame.BendCharacterMovementComponent.SetUpTurnToIdleAnchors
struct UBendCharacterMovementComponent_SetUpTurnToIdleAnchors_Params
{
	struct FName                                       StartAnchor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndAnchor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetUpTurnAnchors_OLD
struct UBendCharacterMovementComponent_SetUpTurnAnchors_OLD_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetUpTurnAnchors_NEW
struct UBendCharacterMovementComponent_SetUpTurnAnchors_NEW_Params
{
	struct FName                                       StartAnchor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndAnchor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetUpMoveToIdleAnchors
struct UBendCharacterMovementComponent_SetUpMoveToIdleAnchors_Params
{
	struct FName                                       StartAnchor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndAnchor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetCollisionShape
struct UBendCharacterMovementComponent_SetCollisionShape_Params
{
	TEnumAsByte<EBendCharacterCollisionShapeId>        ShapeId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetAllowNavWalking
struct UBendCharacterMovementComponent_SetAllowNavWalking_Params
{
	bool                                               bInAllowNavWalking;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.SetAllowDisableProceduralRotationIfAiming
struct UBendCharacterMovementComponent_SetAllowDisableProceduralRotationIfAiming_Params
{
	bool                                               bNewBehavior;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.RevertToDefaultCollisionShape
struct UBendCharacterMovementComponent_RevertToDefaultCollisionShape_Params
{
};

// Function BendGame.BendCharacterMovementComponent.RegisterProceduralRotationSuppression_ByName
struct UBendCharacterMovementComponent_RegisterProceduralRotationSuppression_ByName_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.RegisterProceduralRotationSuppression
struct UBendCharacterMovementComponent_RegisterProceduralRotationSuppression_Params
{
};

// Function BendGame.BendCharacterMovementComponent.OnTurnStart
struct UBendCharacterMovementComponent_OnTurnStart_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.OnTurnEnd
struct UBendCharacterMovementComponent_OnTurnEnd_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.OnGroundMove_Left
struct UBendCharacterMovementComponent_OnGroundMove_Left_Params
{
};

// Function BendGame.BendCharacterMovementComponent.OnGroundMove_Entered
struct UBendCharacterMovementComponent_OnGroundMove_Entered_Params
{
};

// Function BendGame.BendCharacterMovementComponent.OnGroundIdle_Left
struct UBendCharacterMovementComponent_OnGroundIdle_Left_Params
{
};

// Function BendGame.BendCharacterMovementComponent.OnGroundIdle_Entered
struct UBendCharacterMovementComponent_OnGroundIdle_Entered_Params
{
};

// Function BendGame.BendCharacterMovementComponent.OnAnchoredTurnStart
struct UBendCharacterMovementComponent_OnAnchoredTurnStart_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.OnAnchoredTurnEnd
struct UBendCharacterMovementComponent_OnAnchoredTurnEnd_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.IsWalkingOrNavWalking
struct UBendCharacterMovementComponent_IsWalkingOrNavWalking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.IsTurnInPlaceTapRequestPotentiallyInProgress
struct UBendCharacterMovementComponent_IsTurnInPlaceTapRequestPotentiallyInProgress_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.InterpSmoothedMoveSpeedForAnimationSelectionAndScaling
struct UBendCharacterMovementComponent_InterpSmoothedMoveSpeedForAnimationSelectionAndScaling_Params
{
	float                                              OldSmoothedSpeed;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpRateRampingUp;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpRateRampingDown;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewSmoothedSpeed;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              NewSpeed;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreVerticalSpeedWhenNotUsingRootMotion;               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.HasTurnInPlaceTapRequest
struct UBendCharacterMovementComponent_HasTurnInPlaceTapRequest_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetTurnToIdleAngle
struct UBendCharacterMovementComponent_GetTurnToIdleAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetTurnAngleSnapped
struct UBendCharacterMovementComponent_GetTurnAngleSnapped_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetRotationalVelocityYaw
struct UBendCharacterMovementComponent_GetRotationalVelocityYaw_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetRotationalVelocityPitch
struct UBendCharacterMovementComponent_GetRotationalVelocityPitch_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetMoveSpeedForAnimationSelectionAndScaling
struct UBendCharacterMovementComponent_GetMoveSpeedForAnimationSelectionAndScaling_Params
{
	bool                                               bIgnoreVerticalSpeedWhenNotUsingRootMotion;               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetFloorWaterLocation
struct UBendCharacterMovementComponent_GetFloorWaterLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetFloorWaterDepth
struct UBendCharacterMovementComponent_GetFloorWaterDepth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetDesiredVerticalTurnAngleAsFloat
struct UBendCharacterMovementComponent_GetDesiredVerticalTurnAngleAsFloat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetDesiredTurnAngleSnappedAsFloat
struct UBendCharacterMovementComponent_GetDesiredTurnAngleSnappedAsFloat_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetDesiredTurnAngleSnappedAsEnum
struct UBendCharacterMovementComponent_GetDesiredTurnAngleSnappedAsEnum_Params
{
	TEnumAsByte<EBendCharacterTurnType>                TurnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterTurnAngleSnapped>        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetDesiredTurnAngleAsFloat
struct UBendCharacterMovementComponent_GetDesiredTurnAngleAsFloat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.GetAllowNavWalking
struct UBendCharacterMovementComponent_GetAllowNavWalking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.EnableSuspendPhysicsWhenOutOfBounds
struct UBendCharacterMovementComponent_EnableSuspendPhysicsWhenOutOfBounds_Params
{
	bool                                               bEnableSuspend;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.EnableProceduralRotation
struct UBendCharacterMovementComponent_EnableProceduralRotation_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.ConsumeTurnInPlaceTap
struct UBendCharacterMovementComponent_ConsumeTurnInPlaceTap_Params
{
};

// Function BendGame.BendCharacterMovementComponent.ClearDesiredRotationWhenIdle
struct UBendCharacterMovementComponent_ClearDesiredRotationWhenIdle_Params
{
};

// Function BendGame.BendCharacterMovementComponent.CanEnableMoveToIdleAnchor
struct UBendCharacterMovementComponent_CanEnableMoveToIdleAnchor_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.CanEarlyOutAnyTurnInProgress
struct UBendCharacterMovementComponent_CanEarlyOutAnyTurnInProgress_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.CalcCharacterStartingAnchorTransform
struct UBendCharacterMovementComponent_CalcCharacterStartingAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterMovementComponent.CalcCharacterDesiredRotationAnchorTransform
struct UBendCharacterMovementComponent_CalcCharacterDesiredRotationAnchorTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendClimbingSurfaceCharacterMovementComponent.SetClimbingSurfaceDestination
struct UBendClimbingSurfaceCharacterMovementComponent_SetClimbingSurfaceDestination_Params
{
	struct FVector                                     Destination;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     StartPoint;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendClimbingSurfaceCharacterMovementComponent.IsClimbingSurface
struct UBendClimbingSurfaceCharacterMovementComponent_IsClimbingSurface_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendClimbingSurfaceCharacterMovementComponent.ClearClimbingSurfaceDestination
struct UBendClimbingSurfaceCharacterMovementComponent_ClearClimbingSurfaceDestination_Params
{
};

// Function BendGame.BendClimbingSurfaceCharacterMovementComponent.AllowClimbingSurface
struct UBendClimbingSurfaceCharacterMovementComponent_AllowClimbingSurface_Params
{
	bool                                               bAllow;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAnimalMovementComponent.GetSlopeAngle
struct UBendAnimalMovementComponent_GetSlopeAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimalMovementComponent.GetFutureVelocity
struct UBendAnimalMovementComponent_GetFutureVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCinematicControls.GetMovementInputVector
struct ABendCinematicControls_GetMovementInputVector_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCinematicControls.GetCameraInputVector
struct ABendCinematicControls_GetCameraInputVector_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.UpdateRigPresetStatus
struct ABendCinLightRigBase_UpdateRigPresetStatus_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.TurnOnPostCinematicEvent
struct ABendCinLightRigBase_TurnOnPostCinematicEvent_Params
{
	struct FName                                       CinematicName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.TurnOffPreCinematicEvent
struct ABendCinLightRigBase_TurnOffPreCinematicEvent_Params
{
	struct FName                                       CinematicName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.LinkedCameraStateChanged
struct ABendCinLightRigBase_LinkedCameraStateChanged_Params
{
	class ACameraActor*                                DisabledCamera;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                EnabledCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.InitializeForEditor
struct ABendCinLightRigBase_InitializeForEditor_Params
{
};

// Function BendGame.BendCinLightRigBase.GetActiveCamera
struct ABendCinLightRigBase_GetActiveCamera_Params
{
	class ACameraActor*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCinLightRigBase.CheckEditorInitialSetup
struct ABendCinLightRigBase_CheckEditorInitialSetup_Params
{
};

// Function BendGame.BendCinLightRigBase.CameraStateChangedCheck
struct ABendCinLightRigBase_CameraStateChangedCheck_Params
{
	class ACameraActor*                                DisabledCamActor;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                EnabledCamActor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBikeSpotLightRig.CheckForParentingPreset
struct ABendBikeSpotLightRig_CheckForParentingPreset_Params
{
};

// Function BendGame.BendBikeSpotLightRig.CameraChangeUpdate
struct ABendBikeSpotLightRig_CameraChangeUpdate_Params
{
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinEmergencyLightRig.UpdateRig
struct ABendCinEmergencyLightRig_UpdateRig_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinFlickeringLightRig.UpdateRig
struct ABendCinFlickeringLightRig_UpdateRig_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinFlickeringLightRig.SetActorHiddenInGame
struct ABendCinFlickeringLightRig_SetActorHiddenInGame_Params
{
	bool                                               bNewHidden;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinFlickeringLightRig.CameraStateChangedCheck
struct ABendCinFlickeringLightRig_CameraStateChangedCheck_Params
{
	class ACameraActor*                                DisabledCamActor;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                EnabledCamActor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinTripleFlickeringLightRig.UpdateRig
struct ABendCinTripleFlickeringLightRig_UpdateRig_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinTripleFlickeringLightRig.SetActorHiddenInGame
struct ABendCinTripleFlickeringLightRig_SetActorHiddenInGame_Params
{
	bool                                               bNewHidden;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCinTripleFlickeringLightRig.CameraStateChangedCheck
struct ABendCinTripleFlickeringLightRig_CameraStateChangedCheck_Params
{
	class ACameraActor*                                DisabledCamActor;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                EnabledCamActor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDumpTruckLightRig.UpdateVolEmissiveHelper
struct ABendDumpTruckLightRig_UpdateVolEmissiveHelper_Params
{
	TArray<struct FDumpTruckVolSettings>               TruckEmissive;                                            // (Parm, ZeroConstructor)
	class UMaterialInstanceDynamic*                    CurMat;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              emissiveMult;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDumpTruckLightRig.UpdateLightHelper
struct ABendDumpTruckLightRig_UpdateLightHelper_Params
{
	TArray<struct FDumpTruckSpotSettings>              SpotSettings;                                             // (Parm, ZeroConstructor)
	class UPointLightComponent*                        CurLight;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              lightMult;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDumpTruckLightRig.UpdateEmissiveHelper
struct ABendDumpTruckLightRig_UpdateEmissiveHelper_Params
{
	TArray<struct FDumpTruckEmissiveSettings>          TruckEmissive;                                            // (Parm, ZeroConstructor)
	class UMaterialInstanceDynamic*                    CurMat;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              emissiveMult;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDumpTruckLightRig.CheckForParentingPreset
struct ABendDumpTruckLightRig_CheckForParentingPreset_Params
{
};

// Function BendGame.BendDumpTruckLightRig.CameraChangeUpdate
struct ABendDumpTruckLightRig_CameraChangeUpdate_Params
{
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterBaseRig.UpdateFlickeringCamera
struct ABendHelicopterBaseRig_UpdateFlickeringCamera_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterBaseRig.CheckForParentingPreset
struct ABendHelicopterBaseRig_CheckForParentingPreset_Params
{
	class USkeletalMeshComponent*                      SkelMeshComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               AttachToSkeleton;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterBaseRig.CameraChangeUpdate
struct ABendHelicopterBaseRig_CameraChangeUpdate_Params
{
	class ACameraActor*                                CurrentCamera;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterEmbeddedLightRig.UpdateLightsEnabledStatus
struct ABendHelicopterEmbeddedLightRig_UpdateLightsEnabledStatus_Params
{
};

// Function BendGame.BendHelicopterEmbeddedLightRig.UpdateFlickering
struct ABendHelicopterEmbeddedLightRig_UpdateFlickering_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterEmbeddedLightRig.UpdateBlades
struct ABendHelicopterEmbeddedLightRig_UpdateBlades_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterEmbeddedLightRig.SetupReferences
struct ABendHelicopterEmbeddedLightRig_SetupReferences_Params
{
	class USkeletalMeshComponent*                      SkelMeshComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         HLSpot;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        HLPoint;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        VolShape;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        CenterVolShape;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SideGeoLeft;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SideGeoRight;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        SidePointLightLeft;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        SidePointLightRight;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TailGeoLeft;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TailGeoRight;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        TailPointLightLeft;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPointLightComponent*                        TailPointLightRight;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         OverheadLight;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         InteriorLight;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendHelicopterEmbeddedLightRig.ResetBlades
struct ABendHelicopterEmbeddedLightRig_ResetBlades_Params
{
	bool                                               BladesHoldingStill;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHelicopterEmbeddedLightRig.CheckForParentingPreset
struct ABendHelicopterEmbeddedLightRig_CheckForParentingPreset_Params
{
	class USkeletalMeshComponent*                      SkelMeshComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               AttachToSkeleton;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendClothFXType.BendGetClothFXSoundCue
struct ABendClothFXType_BendGetClothFXSoundCue_Params
{
	TEnumAsByte<EeClothFXType>                         ClothFXType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.UnregisterInvestigator
struct UBendCommunicationComponent_UnregisterInvestigator_Params
{
	class UBendCommunicationComponent*                 InvestigatorComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.UnregisterAwarenessListener
struct UBendCommunicationComponent_UnregisterAwarenessListener_Params
{
	class UBendCommunicationComponent*                 ListenerComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.ShareAwareness
struct UBendCommunicationComponent_ShareAwareness_Params
{
	class UBendAwarenessCommunication*                 AwarenessCommunication;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.RequestInvestigation
struct UBendCommunicationComponent_RequestInvestigation_Params
{
	class UBendInvestigationCommunication*             InvestigationCommunication;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.RegisterInvestigator
struct UBendCommunicationComponent_RegisterInvestigator_Params
{
	class UBendCommunicationComponent*                 InvestigatorComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.RegisterAwarenessListener
struct UBendCommunicationComponent_RegisterAwarenessListener_Params
{
	class UBendCommunicationComponent*                 ListenerComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.OnInvestigationRequested
struct UBendCommunicationComponent_OnInvestigationRequested_Params
{
	class UBendInvestigationCommunication*             InvestigationCommunication;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.OnInvestigationRequestDone
struct UBendCommunicationComponent_OnInvestigationRequestDone_Params
{
	class UBendInvestigationCommunication*             InvestigationCommunication;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponent.OnAwarenessRequested
struct UBendCommunicationComponent_OnAwarenessRequested_Params
{
	class UBendAwarenessCommunication*                 AwarenessCommunication;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCommunicationComponentHelpers.StopInvestigationGroup
struct UBendCommunicationComponentHelpers_StopInvestigationGroup_Params
{
	TArray<class AController*>                         InvestigationMembers;                                     // (Parm, ZeroConstructor)
};

// Function BendGame.BendCommunicationComponentHelpers.StopAwarenessGroup
struct UBendCommunicationComponentHelpers_StopAwarenessGroup_Params
{
	TArray<class AController*>                         AwarenessMembers;                                         // (Parm, ZeroConstructor)
};

// Function BendGame.BendCommunicationComponentHelpers.StartInvestigationGroup
struct UBendCommunicationComponentHelpers_StartInvestigationGroup_Params
{
	TArray<class AController*>                         InvestigationMembers;                                     // (Parm, ZeroConstructor)
};

// Function BendGame.BendCommunicationComponentHelpers.StartAwarenessGroup
struct UBendCommunicationComponentHelpers_StartAwarenessGroup_Params
{
	TArray<class AController*>                         AwarenessMembers;                                         // (Parm, ZeroConstructor)
};

// Function BendGame.BendConditionsObject.TestUseConditions
struct UBendConditionsObject_TestUseConditions_Params
{
	bool                                               bResetConditions;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConditionsObject.TestInfluenceConditions
struct UBendConditionsObject_TestInfluenceConditions_Params
{
	bool                                               bResetConditions;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConditionsObject.AddUseCondition
struct UBendConditionsObject_AddUseCondition_Params
{
	TAssetPtr<class UClass>                            BendUseCondition;                                         // (Parm)
};

// Function BendGame.BendConflictTracker.IsLocationInConflictDeadzone
struct UBendConflictTracker_IsLocationInConflictDeadzone_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConflictTracker.GetIntensityAtLocation
struct UBendConflictTracker_GetIntensityAtLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConflictTracker.AllowConflictEscalation
struct UBendConflictTracker_AllowConflictEscalation_Params
{
	bool                                               isAllowed;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConflictTracker.AddConflictEventCustom
struct UBendConflictTracker_AddConflictEventCustom_Params
{
	float                                              customIntensity;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConflictTracker.AddConflictEvent
struct UBendConflictTracker_AddConflictEvent_Params
{
	TEnumAsByte<EeConflictEventType>                   eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.UpdateConversationData
struct ABendConversation_UpdateConversationData_Params
{
};

// Function BendGame.BendConversation.StopConversations
struct ABendConversation_StopConversations_Params
{
};

// Function BendGame.BendConversation.StopConversation
struct ABendConversation_StopConversation_Params
{
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.SetSpeaker
struct ABendConversation_SetSpeaker_Params
{
	struct FName                                       SoundID;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ManualOrdering;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SpeakingPosition;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConversation.ResumeConversation
struct ABendConversation_ResumeConversation_Params
{
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.PlayConverAtIndex
struct ABendConversation_PlayConverAtIndex_Params
{
	int                                                aIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 aSoundClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           aSpeakers;                                                // (Parm, ZeroConstructor)
	float                                              aMaxPauseBetweenLines;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aMinPauseBetweenLines;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                aNumSecondsAllowedRepeat;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aStopPreviousConversation;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aLoopConversation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aShouldDuckSounds;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aShouldUnduckSounds;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aPriority;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aMaxWaitTimeInQueue;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aUseInterruptSystem;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aCheckThreatsBeforePlaying;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aCheckThreatsBeforeResuming;                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aInterruptWhenShooting;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aInterruptWhenMeleeing;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aPlayResumeVO;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               aStopIfInterrupted;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.PauseConversation
struct ABendConversation_PauseConversation_Params
{
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.HandleConversationComplete
struct ABendConversation_HandleConversationComplete_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.GetConversationID
struct ABendConversation_GetConversationID_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConversation.ClearConversationIDs
struct ABendConversation_ClearConversationIDs_Params
{
};

// Function BendGame.BendConversation.CallConversationStarted
struct ABendConversation_CallConversationStarted_Params
{
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                conversationIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendConversation.CallConversationComplete
struct ABendConversation_CallConversationComplete_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                conversationIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationCharacter.CreateBendDynamicConversationCharacterSingleRole
struct UBendDynamicConversationCharacter_CreateBendDynamicConversationCharacterSingleRole_Params
{
	class UBendDynamicConversationRole*                Role;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOptional;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendDynamicConversationCharacter*           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationCharacter.CreateBendDynamicConversationCharacter
struct UBendDynamicConversationCharacter_CreateBendDynamicConversationCharacter_Params
{
	TArray<class UBendDynamicConversationRole*>        Roles;                                                    // (Parm, ZeroConstructor)
	bool                                               bIsOptional;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendDynamicConversationCharacter*           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversation.StopConversation
struct UBendDynamicConversation_StopConversation_Params
{
	class UBendDynamicConversationComponent*           Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendDynamicConversation.StartConversation
struct UBendDynamicConversation_StartConversation_Params
{
	class UBendDynamicConversationComponent*           Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversation.OnConversationStopped
struct UBendDynamicConversation_OnConversationStopped_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDynamicConversation.CreateBendDynamicConversation
struct UBendDynamicConversation_CreateBendDynamicConversation_Params
{
	struct FBendDynamicConversationParameters          Parameters;                                               // (Parm)
	class UBendDynamicConversation*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversation.ApplyForAnyCharacter
struct UBendDynamicConversation_ApplyForAnyCharacter_Params
{
	class UBendDynamicConversationComponent*           Candidate;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationComponent.OnApply
struct UBendDynamicConversationComponent_OnApply_Params
{
	class UBendDynamicConversationComponent*           Requester;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBendDynamicConversation*                    DynamicConversation;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationComponent.LeaveGroup
struct UBendDynamicConversationComponent_LeaveGroup_Params
{
};

// Function BendGame.BendDynamicConversationComponent.JoinGroup
struct UBendDynamicConversationComponent_JoinGroup_Params
{
	class UBendDynamicConversationGroup*               DynamicConversationGroup;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationComponent.GetGroup
struct UBendDynamicConversationComponent_GetGroup_Params
{
	class UBendDynamicConversationGroup*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicConversationComponentHelpers.StartDynamicConversation
struct UBendDynamicConversationComponentHelpers_StartDynamicConversation_Params
{
	class AActor*                                      Requester;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ConversationDataClass;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendDynamicConversation*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConversationDataBase.Generate
struct UBendConversationDataBase_Generate_Params
{
	struct FBendDynamicConversationParameters          Output;                                                   // (Parm, OutParm)
};

// Function BendGame.BendCorpseMeshActor.SetMeshAndAnimation
struct ABendCorpseMeshActor_SetMeshAndAnimation_Params
{
	class USkeletalMesh*                               Mesh;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCorpseMeshActor.SetLookAndAnimation
struct ABendCorpseMeshActor_SetLookAndAnimation_Params
{
	class UBendSkeletalMeshLookBase*                   Look;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCorpseMeshActor.OnInventoryPickup
struct ABendCorpseMeshActor_OnInventoryPickup_Params
{
	class ABendInventoryPickup*                        InventoryPickup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCorpseMeshActor.FinishedStreaming
struct ABendCorpseMeshActor_FinishedStreaming_Params
{
};

// Function BendGame.BendCoverChildComponent.DisableCoverSlots
struct UBendCoverChildComponent_DisableCoverSlots_Params
{
};

// Function BendGame.BendCoverChildComponent.AddCoverProxies
struct UBendCoverChildComponent_AddCoverProxies_Params
{
	TArray<class UBendCoverProxyComponent*>            CoverProxies;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.BendCrowdPOIComponent.GenerateSlots
struct UBendCrowdPOIComponent_GenerateSlots_Params
{
	bool                                               bOverrideRandomizeRotations;                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OverrideDistributionAreaCutter;                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                OverridNumSlots;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepExistingSlots;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGenericNeedsSystem.Tick
struct UBendGenericNeedsSystem_Tick_Params
{
	float                                              DeltaTime;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGenericNeedsSystem.GetNeedValue
struct UBendGenericNeedsSystem_GetNeedValue_Params
{
	struct FName                                       NeedName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGenericNeedsSystem.AugmentNeedGrowthRate
struct UBendGenericNeedsSystem_AugmentNeedGrowthRate_Params
{
	struct FName                                       NeedName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              AugmentedRate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGenericNeedsSystem.AddNeed
struct UBendGenericNeedsSystem_AddNeed_Params
{
	struct FName                                       NeedName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FBendNeedsData                              NeedsData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SuppressAmbientWanderBehavior
struct ABendCrowdController_SuppressAmbientWanderBehavior_Params
{
	bool                                               bSuppress;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetWaypointSequence
struct ABendCrowdController_SetWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     InWaypointSequence;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetPOIComponent
struct ABendCrowdController_SetPOIComponent_Params
{
	class UBendCrowdPOIComponent*                      InPOI;                                                    // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetPOI
struct ABendCrowdController_SetPOI_Params
{
	class ABendCrowdPOI*                               InPOI;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetIgnoreSounds
struct ABendCrowdController_SetIgnoreSounds_Params
{
	bool                                               bIgnore;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetForceIgnoreAll
struct ABendCrowdController_SetForceIgnoreAll_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetDefendZone
struct ABendCrowdController_SetDefendZone_Params
{
	class ABendDefendZone*                             NewDefendZone;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetCrowdMemberMaxHealth
struct ABendCrowdController_SetCrowdMemberMaxHealth_Params
{
	float                                              MaxHealth;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.SetBehaviorData
struct ABendCrowdController_SetBehaviorData_Params
{
	class UClass*                                      BehaviorData;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.RemoveExclusionaryFocus
struct ABendCrowdController_RemoveExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.RemoveAllExclusionaryFocuses
struct ABendCrowdController_RemoveAllExclusionaryFocuses_Params
{
};

// Function BendGame.BendCrowdController.Possess
struct ABendCrowdController_Possess_Params
{
	struct FBendCrowdMemberHandle                      AdditionalCrowdMember;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bPossess;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.OnPOISlotsGenerated
struct ABendCrowdController_OnPOISlotsGenerated_Params
{
};

// Function BendGame.BendCrowdController.MoveMembersToAnotherController
struct ABendCrowdController_MoveMembersToAnotherController_Params
{
	class ABendCrowdController*                        OtherController;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumberToMove;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.IsAwareOfPawn
struct ABendCrowdController_IsAwareOfPawn_Params
{
	class APawn*                                       Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdController.GetCrowdMemberMaxHealth
struct ABendCrowdController_GetCrowdMemberMaxHealth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdController.GetAnyMember
struct ABendCrowdController_GetAnyMember_Params
{
	struct FBendCrowdMemberHandle                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendCrowdController.ForceAllFrenzied
struct ABendCrowdController_ForceAllFrenzied_Params
{
	bool                                               bEnable;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdController.AddExclusionaryFocus
struct ABendCrowdController_AddExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdAwarenessZoneComponent.StopAwareness
struct UBendCrowdAwarenessZoneComponent_StopAwareness_Params
{
};

// Function BendGame.BendCrowdAwarenessZoneComponent.RestartAwareness
struct UBendCrowdAwarenessZoneComponent_RestartAwareness_Params
{
};

// Function BendGame.BendCrowdAwarenessZoneComponent.IsExpired
struct UBendCrowdAwarenessZoneComponent_IsExpired_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdLiveMemberDetectorComponent.SetThresholdNumberOfLiveMembers
struct UBendCrowdLiveMemberDetectorComponent_SetThresholdNumberOfLiveMembers_Params
{
	int                                                Threshold;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdLiveMemberDetectorComponent.NotifyEndOverlap
struct UBendCrowdLiveMemberDetectorComponent_NotifyEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdLiveMemberDetectorComponent.NotifyBeginOverlap
struct UBendCrowdLiveMemberDetectorComponent_NotifyBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendCrowdLiveMemberDetectorComponent.HasReachedThresholdNumberOfLiveMembers
struct UBendCrowdLiveMemberDetectorComponent_HasReachedThresholdNumberOfLiveMembers_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdBehaviorTriggerComponent.NotifyEndOverlap
struct UBendCrowdBehaviorTriggerComponent_NotifyEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdBehaviorTriggerComponent.NotifyBeginOverlap
struct UBendCrowdBehaviorTriggerComponent_NotifyBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendCrowdDespawnTriggerComponent.NotifyBeginOverlap
struct UBendCrowdDespawnTriggerComponent_NotifyBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendCrowdKillTriggerComponent.NotifyBeginOverlap
struct UBendCrowdKillTriggerComponent_NotifyBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendCrowdFlowBreadcrumbDropper.StopDropping
struct UBendCrowdFlowBreadcrumbDropper_StopDropping_Params
{
};

// Function BendGame.BendCrowdFlowBreadcrumbDropper.StartDropping
struct UBendCrowdFlowBreadcrumbDropper_StartDropping_Params
{
};

// Function BendGame.BendCrowdFlowBreadcrumbDropper.RemoveNearbyBreadcrumbs
struct UBendCrowdFlowBreadcrumbDropper_RemoveNearbyBreadcrumbs_Params
{
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdFlowPrimaryPlayerPosBroadcaster.OnHiddenFromCrowdStateChanged
struct UBendCrowdFlowPrimaryPlayerPosBroadcaster_OnHiddenFromCrowdStateChanged_Params
{
};

// Function BendGame.BendCrowdFlowSoundEmitter.EmitSoundEnd
struct UBendCrowdFlowSoundEmitter_EmitSoundEnd_Params
{
};

// Function BendGame.BendCrowdFlowSoundEmitter.EmitSoundBegin
struct UBendCrowdFlowSoundEmitter_EmitSoundBegin_Params
{
};

// Function BendGame.BendCrowdFlowSoundEmitter.EmitSoundAtLocation
struct UBendCrowdFlowSoundEmitter_EmitSoundAtLocation_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFlowSoundEmitter.EmitSound
struct UBendCrowdFlowSoundEmitter_EmitSound_Params
{
};

// Function BendGame.BendCrowdFunctionLibrary.UnregisterClosestCrowdMemberQuery
struct UBendCrowdFunctionLibrary_UnregisterClosestCrowdMemberQuery_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.RegisterClosestCrowdMemberQuery
struct UBendCrowdFunctionLibrary_RegisterClosestCrowdMemberQuery_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceFirstTimeResultUpToDate;                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.KillCrowdMember
struct UBendCrowdFunctionLibrary_KillCrowdMember_Params
{
	struct FBendCrowdMemberHandle                      Handle;                                                   // (Parm)
};

// Function BendGame.BendCrowdFunctionLibrary.KillAllCrowdMembers
struct UBendCrowdFunctionLibrary_KillAllCrowdMembers_Params
{
};

// Function BendGame.BendCrowdFunctionLibrary.IsPawnPromotedHordeMember
struct UBendCrowdFunctionLibrary_IsPawnPromotedHordeMember_Params
{
	class APawn*                                       Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.IsClosestNonPromotedCrowdMemberWithinDistance
struct UBendCrowdFunctionLibrary_IsClosestNonPromotedCrowdMemberWithinDistance_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceThreshold;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsWithinDistance;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.IsClosestCrowdMemberWithinDistance
struct UBendCrowdFunctionLibrary_IsClosestCrowdMemberWithinDistance_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceThreshold;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsWithinDistance;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetCrowdMemberTransform
struct UBendCrowdFunctionLibrary_GetCrowdMemberTransform_Params
{
	struct FBendCrowdMemberHandle                      Handle;                                                   // (Parm)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetCrowdMemberLocation
struct UBendCrowdFunctionLibrary_GetCrowdMemberLocation_Params
{
	struct FBendCrowdMemberHandle                      Handle;                                                   // (Parm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetCrowdMemberHandle
struct UBendCrowdFunctionLibrary_GetCrowdMemberHandle_Params
{
	int                                                BodyIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdMemberHandle                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestNonPromotedCrowdMemberLocation
struct UBendCrowdFunctionLibrary_GetClosestNonPromotedCrowdMemberLocation_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutputLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceSquared;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestNonPromotedCrowdMemberHandle
struct UBendCrowdFunctionLibrary_GetClosestNonPromotedCrowdMemberHandle_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdMemberHandle                      OutputHandle;                                             // (Parm, OutParm)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestNonPromotedCrowdMemberDistanceSquared
struct UBendCrowdFunctionLibrary_GetClosestNonPromotedCrowdMemberDistanceSquared_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceSquared;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestCrowdMemberLocation
struct UBendCrowdFunctionLibrary_GetClosestCrowdMemberLocation_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutputLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceSquared;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestCrowdMemberHandle
struct UBendCrowdFunctionLibrary_GetClosestCrowdMemberHandle_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdMemberHandle                      OutputHandle;                                             // (Parm, OutParm)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.GetClosestCrowdMemberDistanceSquared
struct UBendCrowdFunctionLibrary_GetClosestCrowdMemberDistanceSquared_Params
{
	class AActor*                                      QueryingActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceSquared;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutputValid;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdFunctionLibrary.DestroyCrowdMember
struct UBendCrowdFunctionLibrary_DestroyCrowdMember_Params
{
	struct FBendCrowdMemberHandle                      Handle;                                                   // (Parm)
};

// Function BendGame.BendCrowdFunctionLibrary.DestroyAllCrowdMembers
struct UBendCrowdFunctionLibrary_DestroyAllCrowdMembers_Params
{
};

// Function BendGame.BendCrowdGenerator.SetPaused
struct ABendCrowdGenerator_SetPaused_Params
{
	bool                                               bPaused;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.SetActive
struct ABendCrowdGenerator_SetActive_Params
{
	bool                                               bActive;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.SetActivationRadiusMin
struct ABendCrowdGenerator_SetActivationRadiusMin_Params
{
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.SetActivationRadius
struct ABendCrowdGenerator_SetActivationRadius_Params
{
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.Reset
struct ABendCrowdGenerator_Reset_Params
{
};

// Function BendGame.BendCrowdGenerator.IsPaused
struct ABendCrowdGenerator_IsPaused_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.IsActive
struct ABendCrowdGenerator_IsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.GetActivationRadius
struct ABendCrowdGenerator_GetActivationRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.GenerateCrowdMember
struct ABendCrowdGenerator_GenerateCrowdMember_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnImmediately;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGenerator.DestroyGeneratedCrowdMembers
struct ABendCrowdGenerator_DestroyGeneratedCrowdMembers_Params
{
};

// Function BendGame.BendCrowdGenerator.Decommission
struct ABendCrowdGenerator_Decommission_Params
{
};

// Function BendGame.BendCrowdGroup.SetWaypointSequence
struct ABendCrowdGroup_SetWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     InWaypointSequence;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetSpawnAtStartingPoiTillPoiSwitches
struct ABendCrowdGroup_SetSpawnAtStartingPoiTillPoiSwitches_Params
{
	bool                                               bSpawnAtPOI;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetPOIActor
struct ABendCrowdGroup_SetPOIActor_Params
{
	class ABendCrowdPOI*                               InPOI;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetPOI
struct ABendCrowdGroup_SetPOI_Params
{
	class UBendCrowdPOIComponent*                      InPOI;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetMaxTotalSpawns
struct ABendCrowdGroup_SetMaxTotalSpawns_Params
{
	int                                                InMaxTotalSpawns;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetIgnoreSounds
struct ABendCrowdGroup_SetIgnoreSounds_Params
{
	bool                                               bIgnore;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.SetDefendZone
struct ABendCrowdGroup_SetDefendZone_Params
{
	class ABendDefendZone*                             NewDefendZone;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.RemoveGenerator
struct ABendCrowdGroup_RemoveGenerator_Params
{
	class ABendCrowdGenerator*                         Generator;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.RemoveExclusionaryFocus
struct ABendCrowdGroup_RemoveExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.RemoveAllGenerators
struct ABendCrowdGroup_RemoveAllGenerators_Params
{
};

// Function BendGame.BendCrowdGroup.RemoveAllExclusionaryFocuses
struct ABendCrowdGroup_RemoveAllExclusionaryFocuses_Params
{
};

// Function BendGame.BendCrowdGroup.HasWaypoints
struct ABendCrowdGroup_HasWaypoints_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetWaypointSequence
struct ABendCrowdGroup_GetWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetSpawnAtStartingPoiTillPoiSwitches
struct ABendCrowdGroup_GetSpawnAtStartingPoiTillPoiSwitches_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetPOI
struct ABendCrowdGroup_GetPOI_Params
{
	class UBendCrowdPOIComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetNumMembersEverSpawned
struct ABendCrowdGroup_GetNumMembersEverSpawned_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetNumMembersDied
struct ABendCrowdGroup_GetNumMembersDied_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetNumMembersAlive
struct ABendCrowdGroup_GetNumMembersAlive_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetNumMembers
struct ABendCrowdGroup_GetNumMembers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetIgnoreSounds
struct ABendCrowdGroup_GetIgnoreSounds_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.GetController
struct ABendCrowdGroup_GetController_Params
{
	class ABendCrowdController*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.ForceIgnoreAll
struct ABendCrowdGroup_ForceIgnoreAll_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.DestroyAllMembers
struct ABendCrowdGroup_DestroyAllMembers_Params
{
};

// Function BendGame.BendCrowdGroup.AddGenerator
struct ABendCrowdGroup_AddGenerator_Params
{
	class ABendCrowdGenerator*                         Generator;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGroup.AddExclusionaryFocus
struct ABendCrowdGroup_AddExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdGeneratorVolume.StartUp
struct ABendCrowdGeneratorVolume_StartUp_Params
{
};

// Function BendGame.BendCrowdGeneratorVolume.Shutoff
struct ABendCrowdGeneratorVolume_Shutoff_Params
{
};

// Function BendGame.BendCrowdGeneratorVolume.SetNumToSpawn
struct ABendCrowdGeneratorVolume_SetNumToSpawn_Params
{
	int                                                Num_To_Spawn;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawn_Infinitely;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdImmobileStaticMeshComponent.UpdateOverlapsCompletion_GameThread
struct UBendCrowdImmobileStaticMeshComponent_UpdateOverlapsCompletion_GameThread_Params
{
};

// Function BendGame.BendCrowdTracker.SetType
struct ABendCrowdTracker_SetType_Params
{
	TEnumAsByte<EBendCrowdTrackerType>                 TrackerType;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendCrowdTracker.SetReferenceObject
struct ABendCrowdTracker_SetReferenceObject_Params
{
	class AActor*                                      Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDefaultSkyProfile.UpdateProfile
struct ABendDefaultSkyProfile_UpdateProfile_Params
{
};

// Function BendGame.BendDefaultSkyProfile.SetTextLabel
struct ABendDefaultSkyProfile_SetTextLabel_Params
{
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDefaultSkyProfile.SetPresetValues
struct ABendDefaultSkyProfile_SetPresetValues_Params
{
	float                                              aMipFogTransitionDistance;                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aDistanceScale;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aMieScatterTerm;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aRayleighScaleTerm;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aMieScaleTerm;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aMieDirectionTerm;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aReferenceAltitudeMeters;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              aAltitudeScale;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     aRayleighScatterTerm;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                aSunColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                aCloudLightingTint;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDefaultSkyProfile.InitializeCodeReferences
struct ABendDefaultSkyProfile_InitializeCodeReferences_Params
{
};

// Function BendGame.BendDefaultSkyProfile.GetGameWorldTime
struct ABendDefaultSkyProfile_GetGameWorldTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDefendZone.IsPointInDefendZone
struct ABendDefendZone_IsPointInDefendZone_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDefendZone.GetClosestPointWithinDefendZone
struct ABendDefendZone_GetClosestPointWithinDefendZone_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDefendZone.GetBrush
struct ABendDefendZone_GetBrush_Params
{
	class UModel*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDefendZone.DeactivateZone
struct ABendDefendZone_DeactivateZone_Params
{
};

// Function BendGame.BendDefendZone.ActivateZone
struct ABendDefendZone_ActivateZone_Params
{
};

// Function BendGame.BendDesignEditorActor.ReceiveBendEditorTick
struct ABendDesignEditorActor_ReceiveBendEditorTick_Params
{
};

// Function BendGame.BendDesignEditorActor.OnDeletedHandler
struct ABendDesignEditorActor_OnDeletedHandler_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDesignEditorActor.OnAddedHandler
struct ABendDesignEditorActor_OnAddedHandler_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDesignEditorActor.OnActorMovedHandler
struct ABendDesignEditorActor_OnActorMovedHandler_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDesignEditorActor.OnActorMoved
struct ABendDesignEditorActor_OnActorMoved_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDesignEditorActor.OnActorDeleted
struct ABendDesignEditorActor_OnActorDeleted_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDesignEditorActor.OnActorAdded
struct ABendDesignEditorActor_OnActorAdded_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetUseDetourCrowsAvoidance
struct UBendDetourCrowdAvoidanceComponent_SetUseDetourCrowsAvoidance_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetCenterOffsetInWorldSpace
struct UBendDetourCrowdAvoidanceComponent_SetCenterOffsetInWorldSpace_Params
{
	bool                                               WorldSpace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetCenterOffset
struct UBendDetourCrowdAvoidanceComponent_SetCenterOffset_Params
{
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetAutoCalculateAgentDimensions
struct UBendDetourCrowdAvoidanceComponent_SetAutoCalculateAgentDimensions_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetAgentRadius
struct UBendDetourCrowdAvoidanceComponent_SetAgentRadius_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDetourCrowdAvoidanceComponent.SetAgentHeight
struct UBendDetourCrowdAvoidanceComponent_SetAgentHeight_Params
{
	float                                              Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.IsAimSnapProfileChangeAllowed
struct UBendDifficultyData_IsAimSnapProfileChangeAllowed_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.IsAimLockProfileChangeAllowed
struct UBendDifficultyData_IsAimLockProfileChangeAllowed_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.IsAimFrictionProfileChangeAllowed
struct UBendDifficultyData_IsAimFrictionProfileChangeAllowed_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.GetAimSnapOn
struct UBendDifficultyData_GetAimSnapOn_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.GetAimLockOn
struct UBendDifficultyData_GetAimLockOn_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDifficultyData.GetAimAssistMaxAngle
struct UBendDifficultyData_GetAimAssistMaxAngle_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendDynamicClimbAnimData.GetClimbAnimation
struct UBendDynamicClimbAnimData_GetClimbAnimation_Params
{
	struct FClimbAnimSelectionData                     SelectionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               WantsExitAnim;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendGenericAnimData                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendHigherDynamicClimbAnimData.GetClimbAnimation
struct UBendHigherDynamicClimbAnimData_GetClimbAnimation_Params
{
	struct FClimbAnimSelectionData                     SelectionData;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               WantsExitAnim;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendGenericAnimData                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendDynamicConversationRole.IsEqual
struct UBendDynamicConversationRole_IsEqual_Params
{
	class UBendDynamicConversationRole*                Role;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEdgeComponent.SetEdgeSet
struct UBendEdgeComponent_SetEdgeSet_Params
{
	class UEdgeSet*                                    NewEdgeSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.UnPauseJob
struct ABendJobManager_UnPauseJob_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.UnlockJobAtID
struct ABendJobManager_UnlockJobAtID_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.UnloadListedLevels
struct ABendJobManager_UnloadListedLevels_Params
{
};

// Function BendGame.BendJobManager.StoreJobPreReqMissionTriggers
struct ABendJobManager_StoreJobPreReqMissionTriggers_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.StaticLoadJobscript
struct ABendJobManager_StaticLoadJobscript_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.StartJobAtID
struct ABendJobManager_StartJobAtID_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyLoadIfUnlocked;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseSelectionScreen;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.StartEndingJob
struct ABendJobManager_StartEndingJob_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionStates>                        State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.SpawnAndSetupJobScript
struct ABendJobManager_SpawnAndSetupJobScript_Params
{
	struct FBendJobData                                JobData;                                                  // (Parm)
	class UClass*                                      ScriptClassReference;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.ResetJobsByResetType
struct ABendJobManager_ResetJobsByResetType_Params
{
	TEnumAsByte<EJobResetTypes>                        TypeOfReset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.PullAndStoreJobDataTableInfo
struct ABendJobManager_PullAndStoreJobDataTableInfo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.PauseJob
struct ABendJobManager_PauseJob_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PauseBecauseMissionActive;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.PauseAllActiveJobsForMission
struct ABendJobManager_PauseAllActiveJobsForMission_Params
{
	bool                                               Pause;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.OnFinishLoad
struct ABendJobManager_OnFinishLoad_Params
{
	class UClass*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.LoadInLevelTickCheck
struct ABendJobManager_LoadInLevelTickCheck_Params
{
	bool                                               ForceBlockingLoad;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.JobStreamRequestFinished
struct ABendJobManager_JobStreamRequestFinished_Params
{
};

// Function BendGame.BendJobManager.GiveJobRewardsNew
struct ABendJobManager_GiveJobRewardsNew_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.GetJobScript
struct ABendJobManager_GetJobScript_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendJobScript*                              TheScript;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.GetIsJobComplete
struct ABendJobManager_GetIsJobComplete_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.GetIsJobActive
struct ABendJobManager_GetIsJobActive_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.GetCurrentFocusedJob
struct ABendJobManager_GetCurrentFocusedJob_Params
{
	class UJobClassInfo*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.GetAllActiveJobsData
struct ABendJobManager_GetAllActiveJobsData_Params
{
	TArray<struct FBendJobData>                        JobData;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendJobManager.GetAllActiveJobDatas
struct ABendJobManager_GetAllActiveJobDatas_Params
{
	TArray<class UJobClassInfo*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendJobManager.FinishEndingJob
struct ABendJobManager_FinishEndingJob_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionStates>                        State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.DoCheckOnMapData
struct ABendJobManager_DoCheckOnMapData_Params
{
	struct FJobMapDetails                              MapData;                                                  // (Parm, OutParm)
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PointToCheckAround;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceBlockingLoad;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.DebugSetJobActive
struct ABendJobManager_DebugSetJobActive_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                OverrideInt;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.DebugSetAllJobPreReqsToComplete
struct ABendJobManager_DebugSetAllJobPreReqsToComplete_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncludeSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.DebugCompleteAllJobObjectives
struct ABendJobManager_DebugCompleteAllJobObjectives_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckTimeWaitToUnlockPreRequisite
struct ABendJobManager_CheckTimeWaitToUnlockPreRequisite_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckReLockReUnlockPreReqs
struct ABendJobManager_CheckReLockReUnlockPreReqs_Params
{
	class UJobClassInfo*                               JobData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckJobPreRequisites
struct ABendJobManager_CheckJobPreRequisites_Params
{
	TArray<class UJobClassInfo*>                       JobIDs;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckIfNeedToResetJobObjectFromJobReset
struct ABendJobManager_CheckIfNeedToResetJobObjectFromJobReset_Params
{
	TEnumAsByte<EJobResetTypes>                        TypeOfReset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   LastTimeCheckedOnObject;                                  // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckIfAutoFailJob
struct ABendJobManager_CheckIfAutoFailJob_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Failed;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               Empty;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckIfAnyJobIsAvailable
struct ABendJobManager_CheckIfAnyJobIsAvailable_Params
{
	TArray<class UJobClassInfo*>                       JobIDs;                                                   // (Parm, ZeroConstructor)
	class UJobClassInfo*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckForJobsOnHourChange
struct ABendJobManager_CheckForJobsOnHourChange_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckForAnyNewActiveJobs
struct ABendJobManager_CheckForAnyNewActiveJobs_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.CheckAllPReRequisites
struct ABendJobManager_CheckAllPReRequisites_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionPreReqFailureReasons>          FailureReason;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobManager.ActivateJobAtIndex
struct ABendJobManager_ActivateJobAtIndex_Params
{
	bool                                               IgnoreState;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JobClassInfo.SetDoOnceVariableAtIndex
struct UJobClassInfo_SetDoOnceVariableAtIndex_Params
{
	struct FName                                       Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JobClassInfo.GetIdentifierInStringForm
struct UJobClassInfo_GetIdentifierInStringForm_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.JobClassInfo.GetDoOnceVariableAtIndex
struct UJobClassInfo_GetDoOnceVariableAtIndex_Params
{
	struct FName                                       Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JobClassInfo.GetAllCurrentObjectiveConditionsRequirements
struct UJobClassInfo_GetAllCurrentObjectiveConditionsRequirements_Params
{
	struct FName                                       ObjectiveID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FText>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.JobClassInfo.GetActiveJobObjectiveText
struct UJobClassInfo_GetActiveJobObjectiveText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.JobClassInfo.Get
struct UJobClassInfo_Get_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JobClassInfo.ClearDoOnceVariables
struct UJobClassInfo_ClearDoOnceVariables_Params
{
};

// Function BendGame.JobClassInfo.CheckIfPassObjectiveConditions
struct UJobClassInfo_CheckIfPassObjectiveConditions_Params
{
	struct FName                                       ObjectiveID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       FailureText;                                              // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobCinematicPreLoader.PlayerEndOverlap
struct ABendJobCinematicPreLoader_PlayerEndOverlap_Params
{
};

// Function BendGame.BendJobCinematicPreLoader.PlayerBeginOverlap
struct ABendJobCinematicPreLoader_PlayerBeginOverlap_Params
{
};

// Function BendGame.BendJobCinematicPreLoader.CinematicStarted
struct ABendJobCinematicPreLoader_CinematicStarted_Params
{
	struct FName                                       CinName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendJobCinematicPreLoader.ActivateCinematicPreLoader
struct ABendJobCinematicPreLoader_ActivateCinematicPreLoader_Params
{
	bool                                               Activate;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.SpendCredits
struct UBendEncampmentData_SpendCredits_Params
{
	int                                                toSpend;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.SetTrust
struct UBendEncampmentData_SetTrust_Params
{
	int                                                Trust;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.SetJobValuesToDefaults
struct UBendEncampmentData_SetJobValuesToDefaults_Params
{
};

// Function BendGame.BendEncampmentData.SetGiverActiveJob
struct UBendEncampmentData_SetGiverActiveJob_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UJobClassInfo*                               NewJobData;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.SetEncampmentGateToState
struct UBendEncampmentData_SetEncampmentGateToState_Params
{
	int                                                GateIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Lock;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LockToOpenState;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayTheAnimation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.ResetGateStates
struct UBendEncampmentData_ResetGateStates_Params
{
};

// Function BendGame.BendEncampmentData.ResetEncampmentData
struct UBendEncampmentData_ResetEncampmentData_Params
{
};

// Function BendGame.BendEncampmentData.ModifyTrust
struct UBendEncampmentData_ModifyTrust_Params
{
	int                                                modification;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Notify;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.GetTrustLevel
struct UBendEncampmentData_GetTrustLevel_Params
{
	TEnumAsByte<ETrustTier>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.GetTrustData
struct UBendEncampmentData_GetTrustData_Params
{
	struct FTrustData                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendEncampmentData.GetTrust
struct UBendEncampmentData_GetTrust_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.GetEncampmentJobcompletionCount
struct UBendEncampmentData_GetEncampmentJobcompletionCount_Params
{
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.GetCompletionPercent
struct UBendEncampmentData_GetCompletionPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEncampmentData.GetAllEncampmentJobs
struct UBendEncampmentData_GetAllEncampmentJobs_Params
{
	TArray<class UJobClassInfo*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendEncampmentData.GenerateVoLines
struct UBendEncampmentData_GenerateVoLines_Params
{
	struct FString                                     JobType;                                                  // (Parm, ZeroConstructor)
	struct FString                                     JobLocation;                                              // (Parm, ZeroConstructor)
	bool                                               Radio;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RecievingJob;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendEncampmentData.GainCredits
struct UBendEncampmentData_GainCredits_Params
{
	int                                                toGain;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendEnclosedSpaceOverrideVolume.ContainsPoint
struct ABendEnclosedSpaceOverrideVolume_ContainsPoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_Instant.ServerNotifyMiss
struct ABendWeapon_Instant_ServerNotifyMiss_Params
{
	struct FVector                                     ShootDir;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                RandomSeed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReticleSpread;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon_Instant.ServerNotifyHit
struct ABendWeapon_Instant_ServerNotifyHit_Params
{
	struct FHitResult                                  Impact;                                                   // (ConstParm, Parm)
	struct FVector                                     ShootDir;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                RandomSeed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReticleSpread;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon_Instant.OnRep_HitNotify
struct ABendWeapon_Instant_OnRep_HitNotify_Params
{
};

// Function BendGame.BendWeapon_Projectile.GetCurrentOverheatedCooldownTimeRemaining
struct ABendWeapon_Projectile_GetCurrentOverheatedCooldownTimeRemaining_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_Projectile.GetCurrentMinDamage
struct ABendWeapon_Projectile_GetCurrentMinDamage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_Projectile.GetCurrentMaxDamage
struct ABendWeapon_Projectile_GetCurrentMaxDamage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_Projectile.GetCurrentHeatPercent
struct ABendWeapon_Projectile_GetCurrentHeatPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_Projectile.GetCurrentHeat
struct ABendWeapon_Projectile_GetCurrentHeat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponMeleeBase.OnDebuggingActive
struct ABendWeaponMeleeBase_OnDebuggingActive_Params
{
};

// Function BendGame.BendWeapon_Flamethrower.GetTransform
struct ABendWeapon_Flamethrower_GetTransform_Params
{
	float                                              RelativeTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrap.WillLureToThrownNoise
struct ABendTrap_WillLureToThrownNoise_Params
{
	bool                                               WillHear;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.TriggerWeapon
struct ABendTrap_TriggerWeapon_Params
{
	class ABendPawn*                                   TriggeringPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreDelayTimer;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.TrapPlacementAnimFinished
struct ABendTrap_TrapPlacementAnimFinished_Params
{
};

// Function BendGame.BendTrap.SetTripwireEndpoints
struct ABendTrap_SetTripwireEndpoints_Params
{
	struct FVector                                     Point1;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Point2;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Point1Rot;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Point2Rot;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.SetTriggerLimit
struct ABendTrap_SetTriggerLimit_Params
{
	unsigned char                                      NewTriggerLimit;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.ResetTriggerCount
struct ABendTrap_ResetTriggerCount_Params
{
};

// Function BendGame.BendTrap.ResetTrap
struct ABendTrap_ResetTrap_Params
{
	class ABendPawn*                                   ResettingPawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.PawnTriggerEndOverlap
struct ABendTrap_PawnTriggerEndOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.PawnTriggerBeginOverlap
struct ABendTrap_PawnTriggerBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendTrap.OnWeaponTripped
struct ABendTrap_OnWeaponTripped_Params
{
	class ABendPawn*                                   TriggeringPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.OnTriggerEndOverlap
struct ABendTrap_OnTriggerEndOverlap_Params
{
};

// Function BendGame.BendTrap.OnTriggerBeginOverlap
struct ABendTrap_OnTriggerBeginOverlap_Params
{
};

// Function BendGame.BendTrap.OnTrigger
struct ABendTrap_OnTrigger_Params
{
	class ABendPawn*                                   TriggeringPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.OnTrapReset
struct ABendTrap_OnTrapReset_Params
{
	class ABendPawn*                                   ResettingPawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.OnPostTrigger
struct ABendTrap_OnPostTrigger_Params
{
};

// Function BendGame.BendTrap.OnHitMaxTriggerCount
struct ABendTrap_OnHitMaxTriggerCount_Params
{
	class ABendPawn*                                   TriggeringPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrap.HordeTriggerBeginOverlap
struct ABendTrap_HordeTriggerBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendTrap.HordeCriticalTriggerBeginOverlap
struct ABendTrap_HordeCriticalTriggerBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendTrap.GetTrapRadius
struct ABendTrap_GetTrapRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrap.GetCurrentTriggerCount
struct ABendTrap_GetCurrentTriggerCount_Params
{
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTrap.DetonateWeapon
struct ABendTrap_DetonateWeapon_Params
{
	class ABendPawn*                                   TriggeringPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendBearTrap.CheckForValidNavMeshPoint
struct ABendBearTrap_CheckForValidNavMeshPoint_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PointToProjectTo;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PointOnNavigation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_TrapPlacer.OnTrapSpawned
struct ABendWeapon_TrapPlacer_OnTrapSpawned_Params
{
	class ABendTrap*                                   NewlySpawnedTrap;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeapon_TrapPlacer.ChoosePlacementAnim
struct ABendWeapon_TrapPlacer_ChoosePlacementAnim_Params
{
	struct FTransform                                  placementLocation;                                        // (Parm, IsPlainOldData)
	class UAnimMontage*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeapon_TrapPlacer.CanPlaceOnSurface
struct ABendWeapon_TrapPlacer_CanPlaceOnSurface_Params
{
	struct FHitResult                                  AimPoint;                                                 // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.RequestExtraction
struct UBendExtractionGroup_RequestExtraction_Params
{
};

// Function BendGame.BendExtractionGroup.RequestCover
struct UBendExtractionGroup_RequestCover_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.RemoveUser
struct UBendExtractionGroup_RemoveUser_Params
{
	class ABendAIController*                           User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.EnterHeliEntrance
struct UBendExtractionGroup_EnterHeliEntrance_Params
{
	class ABendAIController*                           User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.EnterHeli
struct UBendExtractionGroup_EnterHeli_Params
{
	class ABendAIController*                           User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.EnterExtractionArea
struct UBendExtractionGroup_EnterExtractionArea_Params
{
	class ABendAIController*                           User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.CreateBendExtractionGroup
struct UBendExtractionGroup_CreateBendExtractionGroup_Params
{
	class AActor*                                      ExtractionPoint;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              CoverPoints;                                              // (Parm, ZeroConstructor)
	class UBendExtractionGroup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendExtractionGroup.AddUser
struct UBendExtractionGroup_AddUser_Params
{
	class ABendAIController*                           User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendExtractionGroupComponent.LeaveGroup
struct UBendExtractionGroupComponent_LeaveGroup_Params
{
};

// Function BendGame.BendExtractionGroupComponent.JoinGroup
struct UBendExtractionGroupComponent_JoinGroup_Params
{
	class UBendExtractionGroup*                        ExtractionGroup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendExtractionGroupComponent.GetGroup
struct UBendExtractionGroupComponent_GetGroup_Params
{
	class UBendExtractionGroup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFactionConversation.PlayConverAtIndex
struct ABendFactionConversation_PlayConverAtIndex_Params
{
	int                                                aIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           aSpeakers;                                                // (Parm, ZeroConstructor)
	class USoundClass*                                 aSoundClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFactionConversation.MakeConver
struct ABendFactionConversation_MakeConver_Params
{
	int                                                aIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFactionConversation.DetermineFactionVal
struct ABendFactionConversation_DetermineFactionVal_Params
{
	struct FName                                       InSoundID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFocusModeOutlineComponent.UpdateStencil
struct UBendFocusModeOutlineComponent_UpdateStencil_Params
{
	int                                                NewStencil;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFocusModeOutlineComponent.OnFocusModeToggle
struct UBendFocusModeOutlineComponent_OnFocusModeToggle_Params
{
	bool                                               EnteredFocusMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFocusModeOutlineComponent.OnFocusFadingFinished
struct UBendFocusModeOutlineComponent_OnFocusFadingFinished_Params
{
};

// Function BendGame.BendFocusModeOutlineComponent.InteractStartedHideFocusUI
struct UBendFocusModeOutlineComponent_InteractStartedHideFocusUI_Params
{
};

// Function BendGame.BendFocusModeOutlineComponent.EnableFocusOutlines
struct UBendFocusModeOutlineComponent_EnableFocusOutlines_Params
{
	TArray<class UMeshComponent*>                      Components;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.BendFocusModeOutlineComponent.DisableFocusOutlines
struct UBendFocusModeOutlineComponent_DisableFocusOutlines_Params
{
};

// Function BendGame.BendFocusModeOutlineComponent.CollectRefsAndResetStencil
struct UBendFocusModeOutlineComponent_CollectRefsAndResetStencil_Params
{
};

// Function BendGame.BendFocusModeOutlineComponent.AreSkillsAcquired
struct UBendFocusModeOutlineComponent_AreSkillsAcquired_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFortificationZone.GetBrush
struct ABendFortificationZone_GetBrush_Params
{
	class UModel*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFortificationZone.ContainsPoint
struct ABendFortificationZone_ContainsPoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFortificationZoneRenderingComponent.OnObjectSelection
struct UBendFortificationZoneRenderingComponent_OnObjectSelection_Params
{
	class UObject*                                     SelectedObject;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetWindowEdge
struct ABendWorldEdge_SetWindowEdge_Params
{
	bool                                               NewWindowEdge;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetSkipAutoNavLinkCreation
struct ABendWorldEdge_SetSkipAutoNavLinkCreation_Params
{
	bool                                               NewSkipAutoNavLinkCreation;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetRoofEdge
struct ABendWorldEdge_SetRoofEdge_Params
{
	bool                                               NewRoofEdge;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetPlayerClimbable
struct ABendWorldEdge_SetPlayerClimbable_Params
{
	bool                                               NewPlayerClimbable;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetLadderRungType
struct ABendWorldEdge_SetLadderRungType_Params
{
	TEnumAsByte<ELadderRungType>                       NewLadderRungType;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetLadderEdge
struct ABendWorldEdge_SetLadderEdge_Params
{
	bool                                               NewLadderEdge;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetGuardrail
struct ABendWorldEdge_SetGuardrail_Params
{
	bool                                               NewGuardrail;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.SetClimbable
struct ABendWorldEdge_SetClimbable_Params
{
	bool                                               NewClimbable;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdge.FlipEdgeDirection
struct ABendWorldEdge_FlipEdgeDirection_Params
{
};

// Function BendGame.BendGameEventManager.OnGameEvent
struct UBendGameEventManager_OnGameEvent_Params
{
	struct FBendGameEventBase                          Event;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendGameEventManager.HandleEvent
struct UBendGameEventManager_HandleEvent_Params
{
	struct FBendGameEventBase                          Event;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendGameEventManager.GetGameEventManager
struct UBendGameEventManager_GetGameEventManager_Params
{
	class UBendGameEventManager*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameEventManager.BikeRepairEvent
struct UBendGameEventManager_BikeRepairEvent_Params
{
	int                                                Cost;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageRepaired;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameEventManager.BikeRefuelEvent
struct UBendGameEventManager_BikeRefuelEvent_Params
{
	int                                                Cost;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FuelAdded;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameInstance.SerializePersistentStreamedObjects
struct UBendGameInstance_SerializePersistentStreamedObjects_Params
{
	class ULevel*                                      Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameInstance.DeSerializePersistentStreamedObjects
struct UBendGameInstance_DeSerializePersistentStreamedObjects_Params
{
	class ULevel*                                      Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameInstance.DeSerializePersistentStreamedActor
struct UBendGameInstance_DeSerializePersistentStreamedActor_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameInstance.BindStreamedObjectSerializationToAllLevels
struct UBendGameInstance_BindStreamedObjectSerializationToAllLevels_Params
{
};

// Function BendGame.BendPlayerRespawnManager.ResetRespawnManager
struct ABendPlayerRespawnManager_ResetRespawnManager_Params
{
};

// Function BendGame.BendPlayerRespawnManager.RemoveRespawnPointByID
struct ABendPlayerRespawnManager_RemoveRespawnPointByID_Params
{
	int                                                RespawnID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.RemoveRespawnPoint
struct ABendPlayerRespawnManager_RemoveRespawnPoint_Params
{
	struct FRespawnPoint                               RespawnPoint;                                             // (Parm)
};

// Function BendGame.BendPlayerRespawnManager.RemoveRespawnOverride
struct ABendPlayerRespawnManager_RemoveRespawnOverride_Params
{
	int                                                RespawnID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.RemoveRespawnLoc
struct ABendPlayerRespawnManager_RemoveRespawnLoc_Params
{
	class ABendRespawnLoc*                             RespawnLoc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.RemoveLastRespawnLoc
struct ABendPlayerRespawnManager_RemoveLastRespawnLoc_Params
{
};

// Function BendGame.BendPlayerRespawnManager.OnPlayerTeleported
struct ABendPlayerRespawnManager_OnPlayerTeleported_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.OnPlayerRespawned
struct ABendPlayerRespawnManager_OnPlayerRespawned_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.OnPlayerDied
struct ABendPlayerRespawnManager_OnPlayerDied_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.MakeRespawnPoint
struct ABendPlayerRespawnManager_MakeRespawnPoint_Params
{
	struct FTransform                                  PlayerTransform;                                          // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  VehicleTransform;                                         // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               RespawnOnBike;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRespawnPoint                               ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPlayerRespawnManager.HasVehicleRespawnLocation
struct ABendPlayerRespawnManager_HasVehicleRespawnLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.GetRespawnPointMinDistanceFromDeathRadius
struct ABendPlayerRespawnManager_GetRespawnPointMinDistanceFromDeathRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.GetRespawnPointAcceptanceRadius
struct ABendPlayerRespawnManager_GetRespawnPointAcceptanceRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.GetRespawnLocOffset
struct ABendPlayerRespawnManager_GetRespawnLocOffset_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.GetMostRecentRespawnPoint
struct ABendPlayerRespawnManager_GetMostRecentRespawnPoint_Params
{
	bool                                               AllowBackupPointCheck;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRespawnPoint                               ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPlayerRespawnManager.GetAllRespawnPoints
struct ABendPlayerRespawnManager_GetAllRespawnPoints_Params
{
	TArray<struct FRespawnPoint>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPlayerRespawnManager.GetAllRespawnLocations
struct ABendPlayerRespawnManager_GetAllRespawnLocations_Params
{
	TArray<struct FVector>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendPlayerRespawnManager.ClearAllRespawnLocs
struct ABendPlayerRespawnManager_ClearAllRespawnLocs_Params
{
};

// Function BendGame.BendPlayerRespawnManager.AddRespawnPointOverride
struct ABendPlayerRespawnManager_AddRespawnPointOverride_Params
{
	struct FRespawnPoint                               SpawnPoint;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.AddRespawnOverride
struct ABendPlayerRespawnManager_AddRespawnOverride_Params
{
	struct FTransform                                  PlayerTransform;                                          // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  VehicleTransform;                                         // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               RespawnOnBike;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPlayerRespawnManager.AddRespawnLoc
struct ABendPlayerRespawnManager_AddRespawnLoc_Params
{
	class ABendRespawnLoc*                             RespawnLoc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.UpdateTriggersWorldDisplay
struct ABendGameMissionTrigger_UpdateTriggersWorldDisplay_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.PlayerEndOverlapInner
struct ABendGameMissionTrigger_PlayerEndOverlapInner_Params
{
};

// Function BendGame.BendGameMissionTrigger.PlayerEndOverlap
struct ABendGameMissionTrigger_PlayerEndOverlap_Params
{
};

// Function BendGame.BendGameMissionTrigger.PlayerBeginOverlapInner
struct ABendGameMissionTrigger_PlayerBeginOverlapInner_Params
{
};

// Function BendGame.BendGameMissionTrigger.PlayerBeginOverlap
struct ABendGameMissionTrigger_PlayerBeginOverlap_Params
{
};

// Function BendGame.BendGameMissionTrigger.MarkMissionAsActiveTracked
struct ABendGameMissionTrigger_MarkMissionAsActiveTracked_Params
{
	bool                                               Tracked;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.MarkCloseToMissionTrigger
struct ABendGameMissionTrigger_MarkCloseToMissionTrigger_Params
{
	bool                                               IsClose;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.DoAutoTracking
struct ABendGameMissionTrigger_DoAutoTracking_Params
{
	bool                                               Enter;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.CheckIfValidForStartMission
struct ABendGameMissionTrigger_CheckIfValidForStartMission_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMissionTrigger.ChangeMiniMapMarkerState
struct ABendGameMissionTrigger_ChangeMiniMapMarkerState_Params
{
	bool                                               IsRegion;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSphereComponentManager.PlayerTeleported
struct UBendSphereComponentManager_PlayerTeleported_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponentManager.PlayerStoppedZenMode
struct UBendSphereComponentManager_PlayerStoppedZenMode_Params
{
	bool                                               InZenMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponentManager.PlayerRespawned
struct UBendSphereComponentManager_PlayerRespawned_Params
{
	class ABendPlayerController*                       Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSphereComponentManager.PlayerDied
struct UBendSphereComponentManager_PlayerDied_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRegionsData.ResetAllDataAssets
struct UBendRegionsData_ResetAllDataAssets_Params
{
};

// Function BendGame.BendRegionsData.GetTourismCollectiblesCompletedCount
struct UBendRegionsData_GetTourismCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetRIPSermonCollectiblesCompletedCount
struct UBendRegionsData_GetRIPSermonCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetRegionNameFromID
struct UBendRegionsData_GetRegionNameFromID_Params
{
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendRegionsData.GetRegion
struct UBendRegionsData_GetRegion_Params
{
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRegionData                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendRegionsData.GetNestingZoneCompletedCount
struct UBendRegionsData_GetNestingZoneCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetNeroSitesCompletedCount
struct UBendRegionsData_GetNeroSitesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetNeroRecorderCollectiblesCompletedCount
struct UBendRegionsData_GetNeroRecorderCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetNeroCheckpointsCompletedCount
struct UBendRegionsData_GetNeroCheckpointsCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetHordeCompletedCount
struct UBendRegionsData_GetHordeCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetHistoricalMarkerCollectiblesCompletedCount
struct UBendRegionsData_GetHistoricalMarkerCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetHerbologyCollectiblesCompletedCount
struct UBendRegionsData_GetHerbologyCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetEncampmentJobCompletedCount
struct UBendRegionsData_GetEncampmentJobCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetEncampmentDiscoveredCount
struct UBendRegionsData_GetEncampmentDiscoveredCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetCompletionPercentage
struct UBendRegionsData_GetCompletionPercentage_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                CompletedCount;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetCharacterCollectiblesCompletedCount
struct UBendRegionsData_GetCharacterCollectiblesCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetBunkersCompletedCount
struct UBendRegionsData_GetBunkersCompletedCount_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TotalCount;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Percentage;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionsData.GetAllTourismCollectibles
struct UBendRegionsData_GetAllTourismCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllRIPSermonCollectibles
struct UBendRegionsData_GetAllRIPSermonCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllNestingZones
struct UBendRegionsData_GetAllNestingZones_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UBendNestingZone*>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllNeroSites
struct UBendRegionsData_GetAllNeroSites_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UBendNeroCheckpointData*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllNeroRecorderCollectibles
struct UBendRegionsData_GetAllNeroRecorderCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllNeroCheckpoints
struct UBendRegionsData_GetAllNeroCheckpoints_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UBendNeroCheckpointData*>             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllHordeJobs
struct UBendRegionsData_GetAllHordeJobs_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UJobClassInfo*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllHistoricalMarkerCollectibles
struct UBendRegionsData_GetAllHistoricalMarkerCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllHerbologyCollectibles
struct UBendRegionsData_GetAllHerbologyCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllEncampmentDatas
struct UBendRegionsData_GetAllEncampmentDatas_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UBendEncampmentData*>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllCharacterCollectibles
struct UBendRegionsData_GetAllCharacterCollectibles_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendRegionsData.GetAllBunkers
struct UBendRegionsData_GetAllBunkers_Params
{
	bool                                               GetFromSpecificRegion;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERegions>                              regionID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UBendBunkerData*>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.PopupMenuWidget.SetPopupDetails
struct UPopupMenuWidget_SetPopupDetails_Params
{
	struct FSlatePopupDetails                          InDetails;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.PopupMenuWidget.SetButtonSelected
struct UPopupMenuWidget_SetButtonSelected_Params
{
	TEnumAsByte<ESlatePopupButton>                     Button;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsSelected;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PopupMenuWidget.Configure
struct UPopupMenuWidget_Configure_Params
{
	struct FSlatePopupDetails                          PopupDetails;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.PopupContactingServerWidget.SetPopupType
struct UPopupContactingServerWidget_SetPopupType_Params
{
	TEnumAsByte<EContactingServerPopupType>            Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PopupContactingServerWidget.OnSetPoupType
struct UPopupContactingServerWidget_OnSetPoupType_Params
{
	TEnumAsByte<EContactingServerPopupType>            NewType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PopupContactingServerWidget.GetPopupType
struct UPopupContactingServerWidget_GetPopupType_Params
{
	TEnumAsByte<EContactingServerPopupType>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.SignedInAndSystemsActivated
struct ABendLeaderboardManager_SignedInAndSystemsActivated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.OnFinishedWriteMyScore
struct ABendLeaderboardManager_OnFinishedWriteMyScore_Params
{
	struct FBendRankInfo                               RankInfo;                                                 // (Parm)
};

// Function BendGame.BendLeaderboardManager.OnFinishedReadMyRank
struct ABendLeaderboardManager_OnFinishedReadMyRank_Params
{
	TEnumAsByte<EBendLeaderboardID>                    BendBoardID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetMyScore
struct ABendLeaderboardManager_OnFinishedGetMyScore_Params
{
	TEnumAsByte<EBendLeaderboardID>                    BendBoardID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetGlobalLeaderboard
struct ABendLeaderboardManager_OnFinishedGetGlobalLeaderboard_Params
{
	TEnumAsByte<EBendLeaderboardID>                    BendBoardID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetFriendsLeaderboard
struct ABendLeaderboardManager_OnFinishedGetFriendsLeaderboard_Params
{
	TEnumAsByte<EBendLeaderboardID>                    BendBoardID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetEventsUnlocked
struct ABendLeaderboardManager_OnFinishedGetEventsUnlocked_Params
{
	TArray<struct FBendTusScore>                       Slots;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetAllMyScores
struct ABendLeaderboardManager_OnFinishedGetAllMyScores_Params
{
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetAllGlobalLeaderboards
struct ABendLeaderboardManager_OnFinishedGetAllGlobalLeaderboards_Params
{
};

// Function BendGame.BendLeaderboardManager.OnFinishedGetAllFriendsLeaderboards
struct ABendLeaderboardManager_OnFinishedGetAllFriendsLeaderboards_Params
{
};

// Function BendGame.BendLeaderboardManager.OnExitChallengeMode
struct ABendLeaderboardManager_OnExitChallengeMode_Params
{
};

// Function BendGame.BendLeaderboardManager.OnEnterChallengeMode
struct ABendLeaderboardManager_OnEnterChallengeMode_Params
{
};

// Function BendGame.BendLeaderboardManager.OnContactingServerPopupClosed
struct ABendLeaderboardManager_OnContactingServerPopupClosed_Params
{
};

// Function BendGame.BendLeaderboardManager.IsContactingServerPopupActive
struct ABendLeaderboardManager_IsContactingServerPopupActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLeaderboardManager.GetLeaderboardManager
struct ABendLeaderboardManager_GetLeaderboardManager_Params
{
	class ABendLeaderboardManager*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCMetaManager.RespondToLeaderboardSystemsActivated
struct UDLCMetaManager_RespondToLeaderboardSystemsActivated_Params
{
};

// Function BendGame.DLCMetaManager.RespondToChallengeUnlock
struct UDLCMetaManager_RespondToChallengeUnlock_Params
{
	TArray<struct FBendTusScore>                       Challenges;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.DLCMetaManager.RequestChallengeUnlockStates
struct UDLCMetaManager_RequestChallengeUnlockStates_Params
{
};

// Function BendGame.BendGameMode.UnloadStreamLevelArrayWithGC
struct ABendGameMode_UnloadStreamLevelArrayWithGC_Params
{
	TArray<struct FName>                               LevelNames;                                               // (Parm, ZeroConstructor)
	float                                              Delay;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMode.SetSavingBlockedByBlueprint
struct ABendGameMode_SetSavingBlockedByBlueprint_Params
{
	bool                                               SavingBlocked;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMode.ResetJobCategory
struct ABendGameMode_ResetJobCategory_Params
{
	TEnumAsByte<EJobResetTypes>                        TypeToReset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ResetAll;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMode.RequestFastTravel
struct ABendGameMode_RequestFastTravel_Params
{
	struct FTransform                                  PlayerTransform;                                          // (Parm, IsPlainOldData)
	struct FTransform                                  BikeTransform;                                            // (Parm, IsPlainOldData)
	struct FName                                       TravelDestination;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMode.ORWorldLoadedIn
struct ABendGameMode_ORWorldLoadedIn_Params
{
};

// Function BendGame.BendGameMode.OnAsyncLoadingEnded
struct ABendGameMode_OnAsyncLoadingEnded_Params
{
};

// Function BendGame.BendGameMode.IsSavingBlockedByBlueprint
struct ABendGameMode_IsSavingBlockedByBlueprint_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.IsSafeToSavePlayerOnBike
struct ABendGameMode_IsSafeToSavePlayerOnBike_Params
{
	TEnumAsByte<ESaveGameFailureReasons>               ReasonForFailing;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveGameRequestTypes>                 TypeOfRequest;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.IsSafeForOWSave
struct ABendGameMode_IsSafeForOWSave_Params
{
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveGameRequestTypes>                 TypeOfRequest;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveGameFailureReasons>               ReasonForFailing;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               requiresProximityToSaveInteract;                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               checkBikeState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.IsInNewGamePlus
struct ABendGameMode_IsInNewGamePlus_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GoToMainMenuForceNGP
struct ABendGameMode_GoToMainMenuForceNGP_Params
{
};

// Function BendGame.BendGameMode.GoToMainMenuForceDLC
struct ABendGameMode_GoToMainMenuForceDLC_Params
{
};

// Function BendGame.BendGameMode.GoToMainMenu
struct ABendGameMode_GoToMainMenu_Params
{
};

// Function BendGame.BendGameMode.GetVehicle
struct ABendGameMode_GetVehicle_Params
{
	class UClass*                                      VehicleClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GetProfileDatabase
struct ABendGameMode_GetProfileDatabase_Params
{
	class UBendGameplayDatabase*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GetPlayerDataManger
struct ABendGameMode_GetPlayerDataManger_Params
{
	class UPlayerDataManager*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GetLocalizedDifficultyString
struct ABendGameMode_GetLocalizedDifficultyString_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameMode.GetIsShowingLoadingScreenFromSaveGameLoad
struct ABendGameMode_GetIsShowingLoadingScreenFromSaveGameLoad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GetGameplayDatabase
struct ABendGameMode_GetGameplayDatabase_Params
{
	class UBendGameplayDatabase*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.GetGameCheatMenu
struct ABendGameMode_GetGameCheatMenu_Params
{
	class AGameCheatMenu*                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.ForceGCAfter
struct ABendGameMode_ForceGCAfter_Params
{
};

// Function BendGame.BendGameMode.DestroyEndCreditsWidget
struct ABendGameMode_DestroyEndCreditsWidget_Params
{
};

// Function BendGame.BendGameMode.DeactivateVehicle
struct ABendGameMode_DeactivateVehicle_Params
{
	class UClass*                                      VehicleClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyVehicle;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameMode.CreateVehicle
struct ABendGameMode_CreateVehicle_Params
{
	class UClass*                                      VehicleClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.CreateEndCreditsWidget
struct ABendGameMode_CreateEndCreditsWidget_Params
{
	struct FText                                       CreditsText;                                              // (Parm)
};

// Function BendGame.BendGameMode.CanRenderGore
struct ABendGameMode_CanRenderGore_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.BeginFastTravel
struct ABendGameMode_BeginFastTravel_Params
{
	struct FTransform                                  PlayerTransform;                                          // (Parm, IsPlainOldData)
	struct FTransform                                  BikeTransform;                                            // (Parm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameMode.ActivateVehicle
struct ABendGameMode_ActivateVehicle_Params
{
	class UClass*                                      VehicleClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UsePreviousPosition;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DestLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    DestRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.UpgradeHealth
struct UBendVehicleDamage_UpgradeHealth_Params
{
	float                                              newMax;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetWaterDamageResistance
struct UBendVehicleDamage_SetWaterDamageResistance_Params
{
	float                                              NewWaterDamageResistance;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetMaxHealthAndScaleCurrentHealth
struct UBendVehicleDamage_SetMaxHealthAndScaleCurrentHealth_Params
{
	float                                              NewMaxHealth;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetMaxHealth
struct UBendVehicleDamage_SetMaxHealth_Params
{
	float                                              NewMaxHealth;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetHitDamageEnabled
struct UBendVehicleDamage_SetHitDamageEnabled_Params
{
	bool                                               bHitDamageEnabled;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetHealth
struct UBendVehicleDamage_SetHealth_Params
{
	float                                              Health;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetDebugEnabled
struct UBendVehicleDamage_SetDebugEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.SetDamageEnabled
struct UBendVehicleDamage_SetDamageEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.ResetHealth
struct UBendVehicleDamage_ResetHealth_Params
{
};

// Function BendGame.BendVehicleDamage.IsHitDamageEnabled
struct UBendVehicleDamage_IsHitDamageEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.IsDebugEnabled
struct UBendVehicleDamage_IsDebugEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.IsDamagedEnoughForSpeedNerf
struct UBendVehicleDamage_IsDamagedEnoughForSpeedNerf_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.HasValidDamageInfo
struct UBendVehicleDamage_HasValidDamageInfo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.GetWaterDamageResistance
struct UBendVehicleDamage_GetWaterDamageResistance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.GetMaxHealth
struct UBendVehicleDamage_GetMaxHealth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.GetHealthPercent
struct UBendVehicleDamage_GetHealthPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.GetHealth
struct UBendVehicleDamage_GetHealth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleDamage.ApplyMiscellaneousDamage
struct UBendVehicleDamage_ApplyMiscellaneousDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpotLightComponent.TurnOnLight
struct UBendSpotLightComponent_TurnOnLight_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSpotLightComponent.IsTurnedOn
struct UBendSpotLightComponent_IsTurnedOn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.UpdateSound
struct AVehiclePawn_UpdateSound_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.UnReserveSeat
struct AVehiclePawn_UnReserveSeat_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ToggleRideAssist
struct AVehiclePawn_ToggleRideAssist_Params
{
};

// Function BendGame.VehiclePawn.TiresInAir
struct AVehiclePawn_TiresInAir_Params
{
	TEnumAsByte<EeTiresInAir>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SuppressBikeStartupSound
struct AVehiclePawn_SuppressBikeStartupSound_Params
{
};

// Function BendGame.VehiclePawn.StopVehicleAI
struct AVehiclePawn_StopVehicleAI_Params
{
	float                                              stopForce;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.StopFuelConsumptionWhenLow
struct AVehiclePawn_StopFuelConsumptionWhenLow_Params
{
	bool                                               ShouldStopConsumptionWhenLow;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.StopFuelConsumption
struct AVehiclePawn_StopFuelConsumption_Params
{
	bool                                               ShouldStopConsumption;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.StopFollowing
struct AVehiclePawn_StopFollowing_Params
{
};

// Function BendGame.VehiclePawn.StopDamageWhenLow
struct AVehiclePawn_StopDamageWhenLow_Params
{
	bool                                               StopDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.StopDamageForMission
struct AVehiclePawn_StopDamageForMission_Params
{
	bool                                               StopDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SoundSlippage
struct AVehiclePawn_SoundSlippage_Params
{
};

// Function BendGame.VehiclePawn.SoundSetSpeedAndEngineIdle
struct AVehiclePawn_SoundSetSpeedAndEngineIdle_Params
{
};

// Function BendGame.VehiclePawn.SoundSetBurnout
struct AVehiclePawn_SoundSetBurnout_Params
{
};

// Function BendGame.VehiclePawn.SoundRoadWetness
struct AVehiclePawn_SoundRoadWetness_Params
{
};

// Function BendGame.VehiclePawn.SoundOnGravel
struct AVehiclePawn_SoundOnGravel_Params
{
};

// Function BendGame.VehiclePawn.SoundIsThrottlePressed
struct AVehiclePawn_SoundIsThrottlePressed_Params
{
};

// Function BendGame.VehiclePawn.SoundDrawDebug
struct AVehiclePawn_SoundDrawDebug_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SoundCalculateNormalizedRPM
struct AVehiclePawn_SoundCalculateNormalizedRPM_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SimulateEngineRev
struct AVehiclePawn_SimulateEngineRev_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ShouldApplyBlockingForceToAll
struct AVehiclePawn_ShouldApplyBlockingForceToAll_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ShouldApplyBlockingForceTo
struct AVehiclePawn_ShouldApplyBlockingForceTo_Params
{
	class AVehiclePawn*                                OtherVehiclePawn;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetVehiclesToApplyBlockForce
struct AVehiclePawn_SetVehiclesToApplyBlockForce_Params
{
	TArray<class AVehiclePawn*>                        VehicleList;                                              // (Parm, ZeroConstructor)
};

// Function BendGame.VehiclePawn.SetVehiclePartSpecsClass
struct AVehiclePawn_SetVehiclePartSpecsClass_Params
{
	class UClass*                                      Specs;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetVehiclePartSpecs
struct AVehiclePawn_SetVehiclePartSpecs_Params
{
	class UBendVehicleMeshAttachmentSpecs*             Specs;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetVehiclePartsLevel
struct AVehiclePawn_SetVehiclePartsLevel_Params
{
	TEnumAsByte<EBendVehiclePartLevel>                 Level;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetVehiclePartsDatabase
struct AVehiclePawn_SetVehiclePartsDatabase_Params
{
	class UBendVehiclePartsDatabase*                   InVehiclePartsDatabase;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetUpEntryAnchor
struct AVehiclePawn_SetUpEntryAnchor_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetupDynBikeMaterials
struct AVehiclePawn_SetupDynBikeMaterials_Params
{
	TEnumAsByte<EMotorcyclePartType>                   InMotorPartType;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              InMesh;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetRPMSound
struct AVehiclePawn_SetRPMSound_Params
{
	float                                              NormalizedRPM;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetPreviewPartsFlag
struct AVehiclePawn_SetPreviewPartsFlag_Params
{
	bool                                               IsPreviewingParts;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetNoLean
struct AVehiclePawn_SetNoLean_Params
{
	bool                                               bNoLean;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetMaxHandBrakeTorque
struct AVehiclePawn_SetMaxHandBrakeTorque_Params
{
	float                                              MaxHandBrakeTorque;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetMaxBrakeTorque
struct AVehiclePawn_SetMaxBrakeTorque_Params
{
	float                                              MaxBrakeTorque;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetMaxAcceleration
struct AVehiclePawn_SetMaxAcceleration_Params
{
	float                                              MaxAcceleration;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetMaterial
struct AVehiclePawn_SetMaterial_Params
{
	class UMaterialInterface*                          InMaterial;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                InMaterialIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMotorcyclePartType>                   InMotorPartType;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetIsPlayerRidable
struct AVehiclePawn_SetIsPlayerRidable_Params
{
	bool                                               bIsPlayerRidable;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetIgnoreBrakeInput
struct AVehiclePawn_SetIgnoreBrakeInput_Params
{
	bool                                               IgnoreBrakeInput;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreRearWheelSlip;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetHighBeams
struct AVehiclePawn_SetHighBeams_Params
{
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetFuelIfLow
struct AVehiclePawn_SetFuelIfLow_Params
{
	float                                              MinimumFuel;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetFormation
struct AVehiclePawn_SetFormation_Params
{
	TEnumAsByte<EVehicleAI>                            formation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetDesiredSpeed
struct AVehiclePawn_SetDesiredSpeed_Params
{
	float                                              desiredSpeed;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetDesiredLane
struct AVehiclePawn_SetDesiredLane_Params
{
	int                                                lane;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetCanBePushedOver
struct AVehiclePawn_SetCanBePushedOver_Params
{
	bool                                               bCan;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetBroken
struct AVehiclePawn_SetBroken_Params
{
	bool                                               bIsBroken;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.SetBikeToRevInPlace
struct AVehiclePawn_SetBikeToRevInPlace_Params
{
	bool                                               RevInPlace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RevTime;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnRevvingFinished;                                        // (Parm, ZeroConstructor)
};

// Function BendGame.VehiclePawn.SetAllowAutoCornerSpeed
struct AVehiclePawn_SetAllowAutoCornerSpeed_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ResetVehicleWithSingleRiderAtLocation
struct AVehiclePawn_ResetVehicleWithSingleRiderAtLocation_Params
{
	class ABendPawn*                                   Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ResetVehicleWithRidersAtLocation
struct AVehiclePawn_ResetVehicleWithRidersAtLocation_Params
{
	TArray<class ABendPawn*>                           Riders;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               SeatNames;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     NewLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ResetVehicleAI
struct AVehiclePawn_ResetVehicleAI_Params
{
};

// Function BendGame.VehiclePawn.ResetHeadlightAimAt
struct AVehiclePawn_ResetHeadlightAimAt_Params
{
};

// Function BendGame.VehiclePawn.ReserveSeat
struct AVehiclePawn_ReserveSeat_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.RemoveVehicleFromBlockForceList
struct AVehiclePawn_RemoveVehicleFromBlockForceList_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.RemoveRider
struct AVehiclePawn_RemoveRider_Params
{
	class AActor*                                      RiderActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.RemoveAllVehiclesFromBlockForceList
struct AVehiclePawn_RemoveAllVehiclesFromBlockForceList_Params
{
};

// Function BendGame.VehiclePawn.RefreshHealth
struct AVehiclePawn_RefreshHealth_Params
{
};

// Function BendGame.VehiclePawn.ReceiveTireHit
struct AVehiclePawn_ReceiveTireHit_Params
{
	int                                                TireIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.Park
struct AVehiclePawn_Park_Params
{
	bool                                               bPark;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnVehiclePartUpdated
struct AVehiclePawn_OnVehiclePartUpdated_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBendVehicleMeshAttachmentSpecs*             Specs;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnTriggerAISound
struct AVehiclePawn_OnTriggerAISound_Params
{
};

// Function BendGame.VehiclePawn.OnTiltForward
struct AVehiclePawn_OnTiltForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnSwitchedOnLights
struct AVehiclePawn_OnSwitchedOnLights_Params
{
};

// Function BendGame.VehiclePawn.OnSwitchedOffLights
struct AVehiclePawn_OnSwitchedOffLights_Params
{
};

// Function BendGame.VehiclePawn.OnStopExplicitBraking
struct AVehiclePawn_OnStopExplicitBraking_Params
{
};

// Function BendGame.VehiclePawn.OnStopEngineFailed
struct AVehiclePawn_OnStopEngineFailed_Params
{
};

// Function BendGame.VehiclePawn.OnStopEngine
struct AVehiclePawn_OnStopEngine_Params
{
};

// Function BendGame.VehiclePawn.OnStopBraking
struct AVehiclePawn_OnStopBraking_Params
{
};

// Function BendGame.VehiclePawn.OnStopBoosting
struct AVehiclePawn_OnStopBoosting_Params
{
};

// Function BendGame.VehiclePawn.OnStartExplicitBraking
struct AVehiclePawn_OnStartExplicitBraking_Params
{
};

// Function BendGame.VehiclePawn.OnStartEngineFailed
struct AVehiclePawn_OnStartEngineFailed_Params
{
};

// Function BendGame.VehiclePawn.OnStartEngine
struct AVehiclePawn_OnStartEngine_Params
{
};

// Function BendGame.VehiclePawn.OnStartBraking
struct AVehiclePawn_OnStartBraking_Params
{
};

// Function BendGame.VehiclePawn.OnStartBoosting
struct AVehiclePawn_OnStartBoosting_Params
{
};

// Function BendGame.VehiclePawn.OnSimulateEngineRevSound
struct AVehiclePawn_OnSimulateEngineRevSound_Params
{
};

// Function BendGame.VehiclePawn.OnReceivedDamage
struct AVehiclePawn_OnReceivedDamage_Params
{
	TEnumAsByte<EBendVehicleDamageType>                DamageType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              damageTaken;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnNotifyRepairEngine
struct AVehiclePawn_OnNotifyRepairEngine_Params
{
};

// Function BendGame.VehiclePawn.OnNotifyEngineDestroyed
struct AVehiclePawn_OnNotifyEngineDestroyed_Params
{
};

// Function BendGame.VehiclePawn.OnNotifyBrokenNPCVehicleTutorial
struct AVehiclePawn_OnNotifyBrokenNPCVehicleTutorial_Params
{
};

// Function BendGame.VehiclePawn.OnMoveRight
struct AVehiclePawn_OnMoveRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnMoveForward
struct AVehiclePawn_OnMoveForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnMoveBackward
struct AVehiclePawn_OnMoveBackward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnLanded
struct AVehiclePawn_OnLanded_Params
{
	int                                                NumTiresOnGround;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnImpactedEnemy
struct AVehiclePawn_OnImpactedEnemy_Params
{
	class ABendPawn*                                   OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnHealthRestored
struct AVehiclePawn_OnHealthRestored_Params
{
};

// Function BendGame.VehiclePawn.OnHandbrakeReleased
struct AVehiclePawn_OnHandbrakeReleased_Params
{
};

// Function BendGame.VehiclePawn.OnHandbrakePressed
struct AVehiclePawn_OnHandbrakePressed_Params
{
};

// Function BendGame.VehiclePawn.OnFullyDamaged
struct AVehiclePawn_OnFullyDamaged_Params
{
};

// Function BendGame.VehiclePawn.OnEndVignette
struct AVehiclePawn_OnEndVignette_Params
{
};

// Function BendGame.VehiclePawn.OnDriverFinishedExitingVehicle
struct AVehiclePawn_OnDriverFinishedExitingVehicle_Params
{
	TEnumAsByte<EBendVehicleExitReason>                InExitReason;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnDriverFinishedEnteringVehicle
struct AVehiclePawn_OnDriverFinishedEnteringVehicle_Params
{
};

// Function BendGame.VehiclePawn.OnDriverExitedVehicle
struct AVehiclePawn_OnDriverExitedVehicle_Params
{
	TEnumAsByte<EBendVehicleExitReason>                InExitReason;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnDriverEnteredVehicle
struct AVehiclePawn_OnDriverEnteredVehicle_Params
{
};

// Function BendGame.VehiclePawn.OnDamageEnemyTriggerOverlapEnd
struct AVehiclePawn_OnDamageEnemyTriggerOverlapEnd_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnDamageEnemyTriggerOverlapBegin
struct AVehiclePawn_OnDamageEnemyTriggerOverlapBegin_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.VehiclePawn.OnChangeTailLightState
struct AVehiclePawn_OnChangeTailLightState_Params
{
	TEnumAsByte<EBendVehicleTailLightState>            NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.OnBoostReleased
struct AVehiclePawn_OnBoostReleased_Params
{
};

// Function BendGame.VehiclePawn.OnBoostPressed
struct AVehiclePawn_OnBoostPressed_Params
{
};

// Function BendGame.VehiclePawn.OnBeginVignette
struct AVehiclePawn_OnBeginVignette_Params
{
};

// Function BendGame.VehiclePawn.On180Finished
struct AVehiclePawn_On180Finished_Params
{
};

// Function BendGame.VehiclePawn.LowerKickstand
struct AVehiclePawn_LowerKickstand_Params
{
	bool                                               bLower;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.LeavingEncampment
struct AVehiclePawn_LeavingEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsRiderLocalPlayer
struct AVehiclePawn_IsRiderLocalPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsRideAssistEnabled
struct AVehiclePawn_IsRideAssistEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsRidableBy
struct AVehiclePawn_IsRidableBy_Params
{
	class ABendPawn*                                   Character;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsPreviewingParts
struct AVehiclePawn_IsPreviewingParts_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsPlayerThrottleButtonPressed
struct AVehiclePawn_IsPlayerThrottleButtonPressed_Params
{
	float                                              Threshold;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsPlayerInVehicle
struct AVehiclePawn_IsPlayerInVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsKickstandLowered
struct AVehiclePawn_IsKickstandLowered_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsInWater
struct AVehiclePawn_IsInWater_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsHighCentered
struct AVehiclePawn_IsHighCentered_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsDriverSeat
struct AVehiclePawn_IsDriverSeat_Params
{
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsBroken
struct AVehiclePawn_IsBroken_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsBoostInputBlocked
struct AVehiclePawn_IsBoostInputBlocked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsBoostActive
struct AVehiclePawn_IsBoostActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.IsAutoCornerSpeedAllowed
struct AVehiclePawn_IsAutoCornerSpeedAllowed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.InitNavigationPathList
struct AVehiclePawn_InitNavigationPathList_Params
{
	TArray<class AAIVehicleWaypoint*>                  WaypointList;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EVehicleAILoopType>                    LoopType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.InitNavigationPath
struct AVehiclePawn_InitNavigationPath_Params
{
	class AAIVehicleWaypoint*                          Start;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AAIVehicleWaypoint*                          End;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.HasVehiclePart
struct AVehiclePawn_HasVehiclePart_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.HasRider
struct AVehiclePawn_HasRider_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetVehiclePartSpecs
struct AVehiclePawn_GetVehiclePartSpecs_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendVehicleMeshAttachmentSpecs*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetVehiclePartMesh
struct AVehiclePawn_GetVehiclePartMesh_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetVehiclePart
struct AVehiclePawn_GetVehiclePart_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVehicleAttachedPart                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.VehiclePawn.GetRiderBendPawn
struct AVehiclePawn_GetRiderBendPawn_Params
{
	struct FName                                       SeatName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetRiderActor
struct AVehiclePawn_GetRiderActor_Params
{
	struct FName                                       SeatName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetMaxHandBrakeTorque
struct AVehiclePawn_GetMaxHandBrakeTorque_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetMaxBrakeTorque
struct AVehiclePawn_GetMaxBrakeTorque_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetMaxAcceleration
struct AVehiclePawn_GetMaxAcceleration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetLaneRestrictionComponent
struct AVehiclePawn_GetLaneRestrictionComponent_Params
{
	class UBendLaneRestrictionComponent*               ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetHeadlightComponent
struct AVehiclePawn_GetHeadlightComponent_Params
{
	class UBendSpotLightComponent*                     ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetFloorWaterDepth
struct AVehiclePawn_GetFloorWaterDepth_Params
{
	bool                                               bUseWheelGPUDepthCheck;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetFirstRiderActor
struct AVehiclePawn_GetFirstRiderActor_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetDriverBendPawn
struct AVehiclePawn_GetDriverBendPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetDriver
struct AVehiclePawn_GetDriver_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetDesiredSpeed
struct AVehiclePawn_GetDesiredSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetCurrentLane
struct AVehiclePawn_GetCurrentLane_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetAIVehicleDebugComponent
struct AVehiclePawn_GetAIVehicleDebugComponent_Params
{
	class UBendAIVehicleDebugComponent*                ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.GetAIDriveComponent
struct AVehiclePawn_GetAIDriveComponent_Params
{
	class UBendAIDriveComponent*                       ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ForceVehicleDamageUpdate
struct AVehiclePawn_ForceVehicleDamageUpdate_Params
{
};

// Function BendGame.VehiclePawn.ForceLane
struct AVehiclePawn_ForceLane_Params
{
	int                                                lane;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.EnteredEncampment
struct AVehiclePawn_EnteredEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.EnableVehicleInputBlocking
struct AVehiclePawn_EnableVehicleInputBlocking_Params
{
};

// Function BendGame.VehiclePawn.EnableRideAssistWithUserThrottle
struct AVehiclePawn_EnableRideAssistWithUserThrottle_Params
{
};

// Function BendGame.VehiclePawn.EnableRideAssist
struct AVehiclePawn_EnableRideAssist_Params
{
};

// Function BendGame.VehiclePawn.EnablePhysics
struct AVehiclePawn_EnablePhysics_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.EnableCollision
struct AVehiclePawn_EnableCollision_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyToRiders;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromParkKnockDown;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.EnableBlockingForceAllVehicles
struct AVehiclePawn_EnableBlockingForceAllVehicles_Params
{
};

// Function BendGame.VehiclePawn.EjectRiders
struct AVehiclePawn_EjectRiders_Params
{
};

// Function BendGame.VehiclePawn.DisableVehicleInputBlocking
struct AVehiclePawn_DisableVehicleInputBlocking_Params
{
};

// Function BendGame.VehiclePawn.DisableRideAssist
struct AVehiclePawn_DisableRideAssist_Params
{
};

// Function BendGame.VehiclePawn.DisableBlockingForceForAllVehicles
struct AVehiclePawn_DisableBlockingForceForAllVehicles_Params
{
};

// Function BendGame.VehiclePawn.ClearPath
struct AVehiclePawn_ClearPath_Params
{
};

// Function BendGame.VehiclePawn.CanSeatBeReservedBy
struct AVehiclePawn_CanSeatBeReservedBy_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.CanSeatBeOccupiedBy
struct AVehiclePawn_CanSeatBeOccupiedBy_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.Burnout
struct AVehiclePawn_Burnout_Params
{
	bool                                               start_stop;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.BlockBoostInput
struct AVehiclePawn_BlockBoostInput_Params
{
	bool                                               bBlock;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.AssignToPlayer
struct AVehiclePawn_AssignToPlayer_Params
{
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.AssignToFirstPlayer
struct AVehiclePawn_AssignToFirstPlayer_Params
{
};

// Function BendGame.VehiclePawn.AimHeadlightAt
struct AVehiclePawn_AimHeadlightAt_Params
{
	struct FVector                                     TargetLocation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.AddVehicleToBlockForceList
struct AVehiclePawn_AddVehicleToBlockForceList_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehiclePawn.AddRider
struct AVehiclePawn_AddRider_Params
{
	class AActor*                                      RiderActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehiclePawn.ActivateBoostForTime
struct AVehiclePawn_ActivateBoostForTime_Params
{
	float                                              HowLong;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreBoostDrain;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NeedsBoostUnlocked;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.WeatherUpdateAudioComponent
struct UBendGameplayStatics_WeatherUpdateAudioComponent_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       CCTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopSound;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsWind;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.WasLastInputKeyFromKeyboard
struct UBendGameplayStatics_WasLastInputKeyFromKeyboard_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.UnderHeightMap
struct UBendGameplayStatics_UnderHeightMap_Params
{
	class UBendGraphicsBufferQueryComponent*           GraphicsBufferQueryComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                QueryCount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.TeleportActorsToMatineeEnd
struct UBendGameplayStatics_TeleportActorsToMatineeEnd_Params
{
	class AMatineeActor*                               MatineeActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ShowLoadingScreen
struct UBendGameplayStatics_ShowLoadingScreen_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WaitForManualClose;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ShouldSkipMainMenu
struct UBendGameplayStatics_ShouldSkipMainMenu_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ShouldSkipAllTutorials
struct UBendGameplayStatics_ShouldSkipAllTutorials_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ShouldResetDoOnceForLevelScriptActor
struct UBendGameplayStatics_ShouldResetDoOnceForLevelScriptActor_Params
{
	class UObject*                                     LevelScriptSelf;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NumTicks;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetWorldLevelStreamingFrozen
struct UBendGameplayStatics_SetWorldLevelStreamingFrozen_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLevelStreamingFrozen;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetSynchronousStreamingNoLoadOrFlush
struct UBendGameplayStatics_SetSynchronousStreamingNoLoadOrFlush_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NoLoadingScreen;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetSynchronousStreaming
struct UBendGameplayStatics_SetSynchronousStreaming_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreDistanceCheck;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHideLoadingScreenUI;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetStreamingPosition
struct UBendGameplayStatics_SetStreamingPosition_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldUpdateStreamingState;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetStreamingMode
struct UBendGameplayStatics_SetStreamingMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Mode;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.SetStreamingDistance
struct UBendGameplayStatics_SetStreamingDistance_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Params;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.SetIndoors
struct UBendGameplayStatics_SetIndoors_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsIndoors;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetGameDifficulty
struct UBendGameplayStatics_SetGameDifficulty_Params
{
	TEnumAsByte<EGameDifficulty>                       InGameDifficulty;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetFlashbackIndexByKeyNoStreamingUpdate
struct UBendGameplayStatics_SetFlashbackIndexByKeyNoStreamingUpdate_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FlashbackKey;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetFlashbackIndexByKey
struct UBendGameplayStatics_SetFlashbackIndexByKey_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FlashbackKey;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NoLoadingScreen;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetDestroyActorOnSaveGameTag
struct UBendGameplayStatics_SetDestroyActorOnSaveGameTag_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetCurrentShotNum
struct UBendGameplayStatics_SetCurrentShotNum_Params
{
	int                                                shotnum;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetBendTimeDilation
struct UBendGameplayStatics_SetBendTimeDilation_Params
{
	float                                              TimeDilation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                DilationID;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetBasicInteractSettings
struct UBendGameplayStatics_SetBasicInteractSettings_Params
{
	class USlateInputInteractComponent*                SlateInput;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FString                                     PreText;                                                  // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     Text;                                                     // (ConstParm, Parm, ZeroConstructor)
	struct FTransform                                  FollowTransform;                                          // (ConstParm, Parm, IsPlainOldData)
	bool                                               SecondaryInteract;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendInventoryPickup*                        InventoryPickup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SinglePressInput;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EIconTypes>                            IconType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ThirdInteractType;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetActorSaveGameTag
struct UBendGameplayStatics_SetActorSaveGameTag_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForceTagSet;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SetActorActive
struct UBendGameplayStatics_SetActorActive_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewActive;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveSlotExists
struct UBendGameplayStatics_SaveSlotExists_Params
{
	TEnumAsByte<ESaveGameType>                         SlotNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SavePlayerProfile
struct UBendGameplayStatics_SavePlayerProfile_Params
{
	class USaveGame*                                   BendSaveGame;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveGameToFile
struct UBendGameplayStatics_SaveGameToFile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FileName;                                                 // (Parm, ZeroConstructor)
	TEnumAsByte<ESaveGameFileIOResult>                 IOResult;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Message;                                                  // (Parm, OutParm)
};

// Function BendGame.BendGameplayStatics.SaveGameOWWithPlayerOnVehicle
struct UBendGameplayStatics_SaveGameOWWithPlayerOnVehicle_Params
{
	struct FTransform                                  VehicleLocation;                                          // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                RespawnID;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveGameOWWithLocAndVehicle
struct UBendGameplayStatics_SaveGameOWWithLocAndVehicle_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  VehicleTransform;                                         // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                RespawnID;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               requiresProximityToSaveInteract;                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               checkBikeState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveGameOWWithLoc
struct UBendGameplayStatics_SaveGameOWWithLoc_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                RespawnID;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveGameOW
struct UBendGameplayStatics_SaveGameOW_Params
{
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveGame
struct UBendGameplayStatics_SaveGame_Params
{
	class USaveGame*                                   SaveGame;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveGameType>                         SlotNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOWSave;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.SaveCheckpoint
struct UBendGameplayStatics_SaveCheckpoint_Params
{
	class USaveGame*                                   BendSaveGame;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SaveGameID;                                               // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RestoreStreamingDistance
struct UBendGameplayStatics_RestoreStreamingDistance_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Params;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.RestoreAllStreamingDistances
struct UBendGameplayStatics_RestoreAllStreamingDistances_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Params;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.ResetBendTimeDilation
struct UBendGameplayStatics_ResetBendTimeDilation_Params
{
	int                                                DilationID;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ResetAllBendTimeDilation
struct UBendGameplayStatics_ResetAllBendTimeDilation_Params
{
};

// Function BendGame.BendGameplayStatics.RequestSaveScreenShot
struct UBendGameplayStatics_RequestSaveScreenShot_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RequestNGPDataAndReturnToMenu
struct UBendGameplayStatics_RequestNGPDataAndReturnToMenu_Params
{
	class USaveGame*                                   SaveToLoad;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RemoveSaveGameTag
struct UBendGameplayStatics_RemoveSaveGameTag_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RemoveRespawnOverrideLoc
struct UBendGameplayStatics_RemoveRespawnOverrideLoc_Params
{
	int                                                RespawnID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RemoteEventOneStringParameter
struct UBendGameplayStatics_RemoteEventOneStringParameter_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     EventParameter;                                           // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.RemoteEventNoParams
struct UBendGameplayStatics_RemoteEventNoParams_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ReleaseRequestedSaveScreenShot
struct UBendGameplayStatics_ReleaseRequestedSaveScreenShot_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ReadTextFromDisk
struct UBendGameplayStatics_ReadTextFromDisk_Params
{
	struct FString                                     InFilePath;                                               // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.PauseOnFocusLost
struct UBendGameplayStatics_PauseOnFocusLost_Params
{
};

// Function BendGame.BendGameplayStatics.OpenScreenShotFolder
struct UBendGameplayStatics_OpenScreenShotFolder_Params
{
	struct FString                                     Path;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.MoveWorldOrigin
struct UBendGameplayStatics_MoveWorldOrigin_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FIntVector                                  InPosition;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.LoadPlayerProfile
struct UBendGameplayStatics_LoadPlayerProfile_Params
{
	class USaveGame*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.LoadPawnMeshList
struct UBendGameplayStatics_LoadPawnMeshList_Params
{
	class UClass*                                      PawnClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendSkeletalMeshArrayData*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.LoadMissionStartDeferred
struct UBendGameplayStatics_LoadMissionStartDeferred_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.LoadGameFromFile
struct UBendGameplayStatics_LoadGameFromFile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FileName;                                                 // (Parm, ZeroConstructor)
	TEnumAsByte<ESaveGameFileIOResult>                 IOResult;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class USaveGame*                                   SaveGame;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Message;                                                  // (Parm, OutParm)
};

// Function BendGame.BendGameplayStatics.LoadGame
struct UBendGameplayStatics_LoadGame_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESaveGameType>                         SlotNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseUIOnFailure;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class USaveGame*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.LoadCheckpoint
struct UBendGameplayStatics_LoadCheckpoint_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class USaveGame*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ListLoadedLevels
struct UBendGameplayStatics_ListLoadedLevels_Params
{
	TArray<struct FString>                             OutLevels;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.IsWorldLevelStreamingFrozen
struct UBendGameplayStatics_IsWorldLevelStreamingFrozen_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsUsingGamepad
struct UBendGameplayStatics_IsUsingGamepad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsTelemetryEnabled
struct UBendGameplayStatics_IsTelemetryEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsSwipeSupported
struct UBendGameplayStatics_IsSwipeSupported_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsShippingBuild
struct UBendGameplayStatics_IsShippingBuild_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsSaveGameCorrupted
struct UBendGameplayStatics_IsSaveGameCorrupted_Params
{
	TEnumAsByte<ESaveGameType>                         SlotNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDisplayCorruptDialog;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsRunningGame
struct UBendGameplayStatics_IsRunningGame_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsPhotoModeUICaptureComplete
struct UBendGameplayStatics_IsPhotoModeUICaptureComplete_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsPhotoModeCaptureSaveComplete
struct UBendGameplayStatics_IsPhotoModeCaptureSaveComplete_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsLoadingScreenEnabled
struct UBendGameplayStatics_IsLoadingScreenEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsLoadingMovieDisabled
struct UBendGameplayStatics_IsLoadingMovieDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsInFlashbackMode
struct UBendGameplayStatics_IsInFlashbackMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NotReallyAFlashback;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsEditorBuild
struct UBendGameplayStatics_IsEditorBuild_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsCooking
struct UBendGameplayStatics_IsCooking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.IsAsyncLoadingActive
struct UBendGameplayStatics_IsAsyncLoadingActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.HideTheAdvertiseIcon
struct UBendGameplayStatics_HideTheAdvertiseIcon_Params
{
	class UBendWidgetComponent*                        WidgetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.HasRecentMouseInput
struct UBendGameplayStatics_HasRecentMouseInput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.HasMouseInputThisTick
struct UBendGameplayStatics_HasMouseInputThisTick_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.HandleExplosion
struct UBendGameplayStatics_HandleExplosion_Params
{
	class AActor*                                      ExplodingActor;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FBendExplosionParams                        Params;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                              IgnoreActors;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class ABendPawn*>                           PawnsHit;                                                 // (Parm, OutParm, ZeroConstructor)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedByController;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     DamagePreventionChannel;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetWorldLevelStrings
struct UBendGameplayStatics_GetWorldLevelStrings_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetTransformFromAnimationsAlign
struct UBendGameplayStatics_GetTransformFromAnimationsAlign_Params
{
	struct FName                                       AnchorRef;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorLocation;                                           // (Parm, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetTimeSincePlaythroughStart
struct UBendGameplayStatics_GetTimeSincePlaythroughStart_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetPlaythroughGUID
struct UBendGameplayStatics_GetPlaythroughGUID_Params
{
	struct FGuid                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetPlayerProfile
struct UBendGameplayStatics_GetPlayerProfile_Params
{
	class UBendSavePlayerProfile*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetPhotoModeCaptureProgress
struct UBendGameplayStatics_GetPhotoModeCaptureProgress_Params
{
	int                                                outPercentage;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetParticleSystemEmitterNames
struct UBendGameplayStatics_GetParticleSystemEmitterNames_Params
{
	class UParticleSystem*                             ParticleSystem;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetParticleSystemEmitterEnabledIndex
struct UBendGameplayStatics_GetParticleSystemEmitterEnabledIndex_Params
{
	class UParticleSystem*                             ParticleSystem;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               EmitterExists;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetParticleSystemEmitterEnabled
struct UBendGameplayStatics_GetParticleSystemEmitterEnabled_Params
{
	class UParticleSystem*                             ParticleSystem;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EmitterName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetOwningLevel
struct UBendGameplayStatics_GetOwningLevel_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ULevel*                                      OutLevel;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetOverlappingLevels
struct UBendGameplayStatics_GetOverlappingLevels_Params
{
	struct FString                                     InLevel;                                                  // (Parm, ZeroConstructor)
	TArray<struct FString>                             OutLevels;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.GetNewGamePlusDataFromSave
struct UBendGameplayStatics_GetNewGamePlusDataFromSave_Params
{
	struct FString                                     FileName;                                                 // (Parm, ZeroConstructor)
	struct FNewGamePlusCarryOverData                   NewGamePlusCarryOverData;                                 // (Parm, OutParm)
	class USaveGame*                                   SelectedSaveOnFailure;                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetIsUsingBookmarkedLevel
struct UBendGameplayStatics_GetIsUsingBookmarkedLevel_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetIndexedColor
struct UBendGameplayStatics_GetIndexedColor_Params
{
	TEnumAsByte<EColorIndex>                           ColorIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ColorMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetGameDifficulty
struct UBendGameplayStatics_GetGameDifficulty_Params
{
	TEnumAsByte<EGameDifficulty>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetFlashbackIndexByKey
struct UBendGameplayStatics_GetFlashbackIndexByKey_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FlashbackKey;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetCurrentShotNum
struct UBendGameplayStatics_GetCurrentShotNum_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetCurrentNumTicks
struct UBendGameplayStatics_GetCurrentNumTicks_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetCurrentInputDevice
struct UBendGameplayStatics_GetCurrentInputDevice_Params
{
	TEnumAsByte<EConsoleForGamepadLabels>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetCreditsState
struct UBendGameplayStatics_GetCreditsState_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBikeOffset
struct UBendGameplayStatics_GetBikeOffset_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendSaveGameFilename
struct UBendGameplayStatics_GetBendSaveGameFilename_Params
{
	TEnumAsByte<ESaveGameType>                         SaveGameType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetBendPlayerPawn
struct UBendGameplayStatics_GetBendPlayerPawn_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPlayerPawn*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendPlayerController
struct UBendGameplayStatics_GetBendPlayerController_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPlayerController*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendMissionManager
struct UBendGameplayStatics_GetBendMissionManager_Params
{
	class ABendGameMission*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendJobManager
struct UBendGameplayStatics_GetBendJobManager_Params
{
	class ABendJobManager*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendGameState
struct UBendGameplayStatics_GetBendGameState_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendGameState*                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetBendGameMode
struct UBendGameplayStatics_GetBendGameMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendGameMode*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetAverageFPS
struct UBendGameplayStatics_GetAverageFPS_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.GetAllObjectPathsInCollection
struct UBendGameplayStatics_GetAllObjectPathsInCollection_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CollectionName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetAllLevelReferencers
struct UBendGameplayStatics_GetAllLevelReferencers_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AssetName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetAllActorsOfClassInLevel
struct UBendGameplayStatics_GetAllActorsOfClassInLevel_Params
{
	class ULevel*                                      Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              OutActors;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendGameplayStatics.GetAimAssistSettingsCurDifficulty
struct UBendGameplayStatics_GetAimAssistSettingsCurDifficulty_Params
{
	struct FAimAssistSettings                          ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameplayStatics.GetAimAssistSettings
struct UBendGameplayStatics_GetAimAssistSettings_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FAimAssistSettings                          ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameplayStatics.FormatFNamesAsString
struct UBendGameplayStatics_FormatFNamesAsString_Params
{
	TArray<struct FName>                               FNamesAsString;                                           // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.FlushPlayerInput
struct UBendGameplayStatics_FlushPlayerInput_Params
{
};

// Function BendGame.BendGameplayStatics.FindGameObject
struct UBendGameplayStatics_FindGameObject_Params
{
	struct FString                                     ObjectName;                                               // (Parm, ZeroConstructor)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.FindClosestRoadSplinePositionFromLocation
struct UBendGameplayStatics_FindClosestRoadSplinePositionFromLocation_Params
{
	struct FVector                                     TargetLocation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.FindClosestRoadSplinePosition
struct UBendGameplayStatics_FindClosestRoadSplinePosition_Params
{
	class AActor*                                      TargetActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.EnableWorldHUD
struct UBendGameplayStatics_EnableWorldHUD_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnabled;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.EnablePhysicsAroundPoint
struct UBendGameplayStatics_EnablePhysicsAroundPoint_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              ActorsToIgnore;                                           // (Parm, ZeroConstructor)
	float                                              ForceRagdollDuration;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.EnablePhotoMode
struct UBendGameplayStatics_EnablePhotoMode_Params
{
	bool                                               IsEnabled;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.EnableFlashbackMode
struct UBendGameplayStatics_EnableFlashbackMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     MissionID;                                                // (Parm, ZeroConstructor)
	bool                                               NotReallyAFlashback;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.EnableCredits
struct UBendGameplayStatics_EnableCredits_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DoesPlayerHaveLOSToInteract
struct UBendGameplayStatics_DoesPlayerHaveLOSToInteract_Params
{
	class AActor*                                      ActorToIgnore;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UInteractComponent*                          InteractComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     LastCheckedPlayerPos;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LastCheckResult;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OutDidCast;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OverrideCheckLocation;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DoesActorBelongToRootWorld
struct UBendGameplayStatics_DoesActorBelongToRootWorld_Params
{
	class AActor*                                      Actor;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DisplayTheAdvertiseIcon
struct UBendGameplayStatics_DisplayTheAdvertiseIcon_Params
{
	class UBendWidgetComponent*                        WidgetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               UseWideLayout;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              InventoryItem;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsAmmoPickup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EIconTypes>                            IconType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Durability;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DisplaySystemCorruptSaveDialog
struct UBendGameplayStatics_DisplaySystemCorruptSaveDialog_Params
{
};

// Function BendGame.BendGameplayStatics.DisableLoadingScreenMovie
struct UBendGameplayStatics_DisableLoadingScreenMovie_Params
{
	bool                                               bIsDisabled;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DisableFlashbackMode
struct UBendGameplayStatics_DisableFlashbackMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDoSynchronousStreaming;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DidNotCompleteInteractHold
struct UBendGameplayStatics_DidNotCompleteInteractHold_Params
{
	class USlateInputInteractComponent*                SlateInteract;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInteractComponent*                          InteractComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.DetermineCurrentSector
struct UBendGameplayStatics_DetermineCurrentSector_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.DeformatFNamesString
struct UBendGameplayStatics_DeformatFNamesString_Params
{
	struct FString                                     FNamesAsString;                                           // (Parm, ZeroConstructor)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.DefaultTraversalEdge
struct UBendGameplayStatics_DefaultTraversalEdge_Params
{
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameplayStatics.DebugDestroyAllNests
struct UBendGameplayStatics_DebugDestroyAllNests_Params
{
};

// Function BendGame.BendGameplayStatics.CreateDistanceTextFromLocations
struct UBendGameplayStatics_CreateDistanceTextFromLocations_Params
{
	struct FVector                                     Location1;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location2;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InnerDistanceLimitInMeters;                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OuterDistanceLimitInMeters;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WithinLimits;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              DistanceInMeters;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.ConstructReferenceReport
struct UBendGameplayStatics_ConstructReferenceReport_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AssetName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.ClearAppliedVehicleData
struct UBendGameplayStatics_ClearAppliedVehicleData_Params
{
};

// Function BendGame.BendGameplayStatics.CapturePhotoModeScreenShot
struct UBendGameplayStatics_CapturePhotoModeScreenShot_Params
{
	bool                                               UseMegaScreenshot;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ResolutionMultiplier;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameplayStatics.CanRequestNewScreenshot
struct UBendGameplayStatics_CanRequestNewScreenshot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.BendQuickSave
struct UBendGameplayStatics_BendQuickSave_Params
{
	bool                                               bCriticalSave;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               requiresProximityToSaveInteract;                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               checkBikeState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.AutoDetectUsingKeyboardAndMouse
struct UBendGameplayStatics_AutoDetectUsingKeyboardAndMouse_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.AutoDetectLastInputIsGamepad
struct UBendGameplayStatics_AutoDetectLastInputIsGamepad_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.ApplyVehicleDataFromProfile
struct UBendGameplayStatics_ApplyVehicleDataFromProfile_Params
{
	class UBendSavePlayerProfile*                      ProfileSave;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameplayStatics.AddWindowFrames
struct UBendGameplayStatics_AddWindowFrames_Params
{
	class AStaticMeshActor*                            StaticMeshActor;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UStaticMesh*>                         Meshes;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FTransform>                          Transforms;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UMaterialInterface*>                  Materials;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendGameplayStatics.AddActorToMatineeGroup
struct UBendGameplayStatics_AddActorToMatineeGroup_Params
{
	class AMatineeActor*                               MatineeActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      NewActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                GroupIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.UpdateObjectiveProgression
struct ABendGameScriptBase_UpdateObjectiveProgression_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.UpdateHealthBar
struct ABendGameScriptBase_UpdateHealthBar_Params
{
	bool                                               RemoveBar;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewHealth;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               inverseBar;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.SetUpBuddyDeathTracking
struct ABendGameScriptBase_SetUpBuddyDeathTracking_Params
{
	bool                                               Active;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShowBuddyHealthBar;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.OnBuddyTakeAnyDamage
struct ABendGameScriptBase_OnBuddyTakeAnyDamage_Params
{
	float                                              TheDamage;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.OnBuddyDied
struct ABendGameScriptBase_OnBuddyDied_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.LoadThePreviousCheckpoint
struct ABendGameScriptBase_LoadThePreviousCheckpoint_Params
{
	struct FString                                     MessageToDisplay;                                         // (Parm, ZeroConstructor)
};

// Function BendGame.BendGameScriptBase.LoadPreviousCheckpointWithMessage
struct ABendGameScriptBase_LoadPreviousCheckpointWithMessage_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.GetSideObjectives
struct ABendGameScriptBase_GetSideObjectives_Params
{
	TArray<class ABendObjective*>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameScriptBase.GetMissionEndingPositions
struct ABendGameScriptBase_GetMissionEndingPositions_Params
{
	struct FTransform                                  PlayerPosition;                                           // (Parm, OutParm, IsPlainOldData)
	struct FTransform                                  BikePosition;                                             // (Parm, OutParm, IsPlainOldData)
	bool                                               OnBike;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.GetManualReloadingCheckpoint
struct ABendGameScriptBase_GetManualReloadingCheckpoint_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.GetMainObjectives
struct ABendGameScriptBase_GetMainObjectives_Params
{
	TArray<class ABendObjective*>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameScriptBase.GetCurrentScoringVariables
struct ABendGameScriptBase_GetCurrentScoringVariables_Params
{
	float                                              Time;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Deaths;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                kills;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.GetAllObjectives
struct ABendGameScriptBase_GetAllObjectives_Params
{
	TArray<class ABendObjective*>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameScriptBase.GenerateFailingText
struct ABendGameScriptBase_GenerateFailingText_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendGameScriptBase.GenerateFailingLocalizedText
struct ABendGameScriptBase_GenerateFailingLocalizedText_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendGameScriptBase.ClearTheMissionFailing
struct ABendGameScriptBase_ClearTheMissionFailing_Params
{
	TEnumAsByte<EMissionFailureOptions>                FailureType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.ChangeOverrideSphereDistanceFailureMessagingType
struct ABendGameScriptBase_ChangeOverrideSphereDistanceFailureMessagingType_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseOverride;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.ChangeDistanceFailureMessagingType
struct ABendGameScriptBase_ChangeDistanceFailureMessagingType_Params
{
	TEnumAsByte<EMissionFailureSubject>                Subject;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionFailureType>                   Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendGameScriptBase.BeginTheMissionFailing
struct ABendGameScriptBase_BeginTheMissionFailing_Params
{
	TEnumAsByte<EMissionFailureOptions>                FailureType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendImpactIncendiaryEffect.UnbindOverlapEvents
struct ABendImpactIncendiaryEffect_UnbindOverlapEvents_Params
{
	class UPrimitiveComponent*                         PrimitiveComponent;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendImpactIncendiaryEffect.PreRemoveCollision
struct ABendImpactIncendiaryEffect_PreRemoveCollision_Params
{
};

// Function BendGame.BendImpactIncendiaryEffect.OnComponentOverlapEnd
struct ABendImpactIncendiaryEffect_OnComponentOverlapEnd_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendImpactIncendiaryEffect.OnComponentOverlapBegin
struct ABendImpactIncendiaryEffect_OnComponentOverlapBegin_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               FromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendImpactIncendiaryEffect.CollisionRemoved
struct ABendImpactIncendiaryEffect_CollisionRemoved_Params
{
};

// Function BendGame.BendImpactIncendiaryEffect.BindOverlapEvents
struct ABendImpactIncendiaryEffect_BindOverlapEvents_Params
{
	class UPrimitiveComponent*                         PrimitiveComponent;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendInputManager.SetMouseSmoothing
struct ABendInputManager_SetMouseSmoothing_Params
{
	bool                                               bSmooth;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.SetMouseSensitivityModifier
struct ABendInputManager_SetMouseSensitivityModifier_Params
{
	TEnumAsByte<EBendMouseSettingType>                 MouseSettingType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SensitivityModifier;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.SetMouseSensitivity
struct ABendInputManager_SetMouseSensitivity_Params
{
	TEnumAsByte<EBendMouseSettingAxis>                 MouseAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Sensitivity;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.SetMouseInvertSetting
struct ABendInputManager_SetMouseInvertSetting_Params
{
	TEnumAsByte<EBendMouseSettingType>                 MouseSettingType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendMouseSettingAxis>                 MouseAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInvert;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.SaveMouseSettings
struct ABendInputManager_SaveMouseSettings_Params
{
};

// Function BendGame.BendInputManager.RestoreDefaultMouseSettings
struct ABendInputManager_RestoreDefaultMouseSettings_Params
{
};

// Function BendGame.BendInputManager.IncreaseMouseSensitivity
struct ABendInputManager_IncreaseMouseSensitivity_Params
{
	float                                              StepAmount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetMouseSmoothing
struct ABendInputManager_GetMouseSmoothing_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetMouseSensitivityModifier
struct ABendInputManager_GetMouseSensitivityModifier_Params
{
	TEnumAsByte<EBendMouseSettingType>                 MouseSettingType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetMouseSensitivity
struct ABendInputManager_GetMouseSensitivity_Params
{
	TEnumAsByte<EBendMouseSettingAxis>                 MouseAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetMouseInvertSetting
struct ABendInputManager_GetMouseInvertSetting_Params
{
	TEnumAsByte<EBendMouseSettingType>                 MouseSettingType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendMouseSettingAxis>                 MouseAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetInputModeActor
struct ABendInputManager_GetInputModeActor_Params
{
	int                                                Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetBendInputMapper
struct ABendInputManager_GetBendInputMapper_Params
{
	class ABendInputMapper*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.GetBendInputManager
struct ABendInputManager_GetBendInputManager_Params
{
	class ABendInputManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.EnableInputModeActorByName
struct ABendInputManager_EnableInputModeActorByName_Params
{
	struct FName                                       PriorityName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.EnableInputModeActor
struct ABendInputManager_EnableInputModeActor_Params
{
	int                                                Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.DisableInputModeActorByName
struct ABendInputManager_DisableInputModeActorByName_Params
{
	struct FName                                       PriorityName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.DisableInputModeActor
struct ABendInputManager_DisableInputModeActor_Params
{
	int                                                Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputManager.DecreaseMouseSensitivity
struct ABendInputManager_DecreaseMouseSensitivity_Params
{
	float                                              StepAmount;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputManager.DebugDrawDebugControlsActive
struct ABendInputManager_DebugDrawDebugControlsActive_Params
{
};

// Function BendGame.BendInputManager.BendInputManager
struct ABendInputManager_BendInputManager_Params
{
	class ABendInputManager*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.IsPrimary
struct UBendInputMapping_IsPrimary_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.IsKeyValid
struct UBendInputMapping_IsKeyValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.IsGamePadKey
struct UBendInputMapping_IsGamePadKey_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.IsAlternate
struct UBendInputMapping_IsAlternate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.GetKeyName
struct UBendInputMapping_GetKeyName_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendInputMapping.GetKey
struct UBendInputMapping_GetKey_Params
{
	struct FKey                                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendInputMapping.GetAxisScale
struct UBendInputMapping_GetAxisScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.GetActionName
struct UBendInputMapping_GetActionName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapping.GetActionDisplayName
struct UBendInputMapping_GetActionDisplayName_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendInputMapper.UpdateInputMapping
struct ABendInputMapper_UpdateInputMapping_Params
{
	class UBendInputMapping*                           BendInputMapping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FKey                                        NewKey;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapper.RestoreDefaults
struct ABendInputMapper_RestoreDefaults_Params
{
};

// Function BendGame.BendInputMapper.IsKeyAllowedForMapping
struct ABendInputMapper_IsKeyAllowedForMapping_Params
{
	class UBendInputMapping*                           BendInputMapping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FKey                                        InKey;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapper.IsKeyAllowedForBinding
struct ABendInputMapper_IsKeyAllowedForBinding_Params
{
	struct FKey                                        InKey;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendInputMapper.GetDismissBindingKey
struct ABendInputMapper_GetDismissBindingKey_Params
{
	struct FKey                                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendInputMapper.GetClearBindingKey
struct ABendInputMapper_GetClearBindingKey_Params
{
	struct FKey                                        ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendInputMapper.ClearInputMapping
struct ABendInputMapper_ClearInputMapping_Params
{
	class UBendInputMapping*                           BendInputMapping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendInputMapper.CheckForConflicts
struct ABendInputMapper_CheckForConflicts_Params
{
	class UBendInputMapping*                           BendInputMapping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FKey                                        NewKey;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<class UBendInputMapping*>                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendJobScript.UpdateObjectiveToUnlocked
struct ABendJobScript_UpdateObjectiveToUnlocked_Params
{
	struct FBendJobObjectives                          Objective;                                                // (Parm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForcedChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateObjectiveToLocked
struct ABendJobScript_UpdateObjectiveToLocked_Params
{
	struct FBendJobObjectives                          Objective;                                                // (Parm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForcedChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateObjectiveToFailed
struct ABendJobScript_UpdateObjectiveToFailed_Params
{
	struct FBendJobObjectives                          Objective;                                                // (Parm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForcedChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateObjectiveToComplete
struct ABendJobScript_UpdateObjectiveToComplete_Params
{
	struct FBendJobObjectives                          Objective;                                                // (Parm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ForcedChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateObjectiveText
struct ABendJobScript_UpdateObjectiveText_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       NewFText;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               DisplayToScreen;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateJobObjectiveStatusAndProgression
struct ABendJobScript_UpdateJobObjectiveStatusAndProgression_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EObjectiveStates>                      ObjState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateJobObjectiveStatus
struct ABendJobScript_UpdateJobObjectiveStatus_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EObjectiveStates>                      ObjState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateJobObjectiveProgression
struct ABendJobScript_UpdateJobObjectiveProgression_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.UpdateJobObjectiveCounter
struct ABendJobScript_UpdateJobObjectiveCounter_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncrementOne;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CustomCount;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayToScreen;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.TryRemoveObjectiveFromScreen
struct ABendJobScript_TryRemoveObjectiveFromScreen_Params
{
	TEnumAsByte<EObjectiveStates>                      NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ObjectiveIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.TryAddObjectiveToScreen
struct ABendJobScript_TryAddObjectiveToScreen_Params
{
	struct FText                                       NewText;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               sideObjective;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ObjectiveIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.StoreMapMarkers
struct ABendJobScript_StoreMapMarkers_Params
{
	TArray<class UChildActorComponent*>                MapMarkers;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.StoreJobScriptVariables
struct ABendJobScript_StoreJobScriptVariables_Params
{
	class UJobClassInfo*                               JobsID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                OverrideIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.StopJobFailDistanceCheck
struct ABendJobScript_StopJobFailDistanceCheck_Params
{
};

// Function BendGame.BendJobScript.StartJobFailDistanceCheck
struct ABendJobScript_StartJobFailDistanceCheck_Params
{
	class AActor*                                      ActorToDistanceCheckFrom;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreZAxis;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LoadCheckPointOnFail;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.SetUpMapMarkersForObjective
struct ABendJobScript_SetUpMapMarkersForObjective_Params
{
	bool                                               AddMarkers;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ObjectiveIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ObjDescriptionText;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FBendJobObjectiveMarkers>            MarkerData;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FBendJobObjectiveMarkers>            NewMarkerData;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendJobScript.SetupLateVO
struct ABendJobScript_SetupLateVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.SendGenericJobScriptMessage
struct ABendJobScript_SendGenericJobScriptMessage_Params
{
	struct FString                                     Message;                                                  // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.PauseTheJobScript
struct ABendJobScript_PauseTheJobScript_Params
{
	bool                                               Pause;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.OverrideJobMapImages
struct ABendJobScript_OverrideJobMapImages_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OverrideAllInObjective;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OverrideIcon;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  OverrideImage;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.MarkJobAsActiveFocus
struct ABendJobScript_MarkJobAsActiveFocus_Params
{
	bool                                               TheFocus;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.JobScriptCheckpointLoaded
struct ABendJobScript_JobScriptCheckpointLoaded_Params
{
	TArray<struct FName>                               UnlockedObjectiveIDs;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendJobScript.InitJobObjectives
struct ABendJobScript_InitJobObjectives_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.InitializeJob
struct ABendJobScript_InitializeJob_Params
{
	TArray<class UChildActorComponent*>                MiniMapMarkers;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               EndWhenObjectivesComplete;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.GoBackToJobObjectiveStage
struct ABendJobScript_GoBackToJobObjectiveStage_Params
{
	int                                                TheStage;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.GetObjectiveState
struct ABendJobScript_GetObjectiveState_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EObjectiveStates>                      CurrentState;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.GetObjectiveFromID
struct ABendJobScript_GetObjectiveFromID_Params
{
	struct FName                                       ObjID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendJobObjectives                          Objective;                                                // (Parm, OutParm)
	int                                                Index;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.GetCurrentCounterCount
struct ABendJobScript_GetCurrentCounterCount_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TheCount;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.GetActiveJobObjectivesData
struct ABendJobScript_GetActiveJobObjectivesData_Params
{
	TArray<struct FBendJobObjectives>                  Objectives;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendJobScript.FailTheJob
struct ABendJobScript_FailTheJob_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.DetachJobMapMarker
struct ABendJobScript_DetachJobMapMarker_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.CompleteTheJob
struct ABendJobScript_CompleteTheJob_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.ChangeJobMiniMapMarkerVisibility
struct ABendJobScript_ChangeJobMiniMapMarkerVisibility_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HideOnMap;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HideOnMiniMap;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.ChangeJobMiniMapLocation
struct ABendJobScript_ChangeJobMiniMapLocation_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.ChangeJobMapMarkerType
struct ABendJobScript_ChangeJobMapMarkerType_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsObjectiveRegion;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RegionSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.ChangeJobInWorldMarkerVisibility
struct ABendJobScript_ChangeJobInWorldMarkerVisibility_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Hide;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.AttemptToPlayLateVO
struct ABendJobScript_AttemptToPlayLateVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendJobScript.AttachJobMapMarkerToPawn
struct ABendJobScript_AttachJobMapMarkerToPawn_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ThePawn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HideOnDeathOrDespawn;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DetachOnDeath;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendJobScript.AttachJobMapMarkerToItem
struct ABendJobScript_AttachJobMapMarkerToItem_Params
{
	struct FName                                       ObjIdentifier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MapIconIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      TheActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCChallengeScriptActor.SetSubchallengeValue
struct ADLCChallengeScriptActor_SetSubchallengeValue_Params
{
	struct FGameplayTag                                SubchallengeTag;                                          // (Parm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeScriptActor.IsTimedChallenge
struct ADLCChallengeScriptActor_IsTimedChallenge_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCChallengeScriptActor.GetCurrentTime
struct ADLCChallengeScriptActor_GetCurrentTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCChallengeScriptActor.EndChallenge
struct ADLCChallengeScriptActor_EndChallenge_Params
{
	bool                                               bChallengeFailed;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeScriptActor.DisableSubChallenge
struct ADLCChallengeScriptActor_DisableSubChallenge_Params
{
	struct FGameplayTag                                SubchallengeTag;                                          // (Parm)
};

// Function BendGame.DLCChallengeScriptActor.AdjustElapsedTime
struct ADLCChallengeScriptActor_AdjustElapsedTime_Params
{
	float                                              Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLightRigBlueprintLibrary.UpdateTimeOfDayStatus
struct UBendLightRigBlueprintLibrary_UpdateTimeOfDayStatus_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELightTimeOfDay>                       TimeOfDaySetting;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             LightRigBase;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              LightIntensity;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ProvidedTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLightRigBlueprintLibrary.UpdateLightIntensity
struct UBendLightRigBlueprintLibrary_UpdateLightIntensity_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ULightComponent*                             LightRef;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              NewColorIntensity;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendLightRigBlueprintLibrary.UpdateFlickerSpotPointLight
struct UBendLightRigBlueprintLibrary_UpdateFlickerSpotPointLight_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendLightFlicker                           InputFlickerStruct;                                       // (Parm, OutParm, ReferenceParm)
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ULightComponent*                             LightRef;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               UpdateGoalIntensity;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendLightFlicker                           ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendLightRigBlueprintLibrary.HelperUpdateFlickerGoal
struct UBendLightRigBlueprintLibrary_HelperUpdateFlickerGoal_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendLightFlicker                           InputFlickerStruct;                                       // (Parm, OutParm, ReferenceParm)
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendLightFlicker                           ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendLightRigBlueprintLibrary.HelperUpdateFlickerColor
struct UBendLightRigBlueprintLibrary_HelperUpdateFlickerColor_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendLightFlicker                           InputFlickerStruct;                                       // (Parm, OutParm, ReferenceParm)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMapControls.InputFlickUp
struct ABendMapControls_InputFlickUp_Params
{
};

// Function BendGame.BendMapControls.InputFlickRight
struct ABendMapControls_InputFlickRight_Params
{
};

// Function BendGame.BendMapControls.InputFlickLeft
struct ABendMapControls_InputFlickLeft_Params
{
};

// Function BendGame.BendMapControls.InputFlickDown
struct ABendMapControls_InputFlickDown_Params
{
};

// Function BendGame.BendMapControls.InputFlick
struct ABendMapControls_InputFlick_Params
{
	float                                              GestureAngle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.UpdateRubberbandParams
struct UBendMotorcycleRiderGroup_UpdateRubberbandParams_Params
{
	struct FRubberbandParams                           RubberbandParams;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderGroup.UpdatePaceParams
struct UBendMotorcycleRiderGroup_UpdatePaceParams_Params
{
	struct FPaceParams                                 PaceParams;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderGroup.StopRubberbanding
struct UBendMotorcycleRiderGroup_StopRubberbanding_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.StopPacing
struct UBendMotorcycleRiderGroup_StopPacing_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.StopGroup
struct UBendMotorcycleRiderGroup_StopGroup_Params
{
	float                                              brakeForce;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.StartRubberbanding
struct UBendMotorcycleRiderGroup_StartRubberbanding_Params
{
	class ABendPawn*                                   followPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRubberbandParams                           RubberbandParams;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderGroup.SetGroupDriveDestinationPath
struct UBendMotorcycleRiderGroup_SetGroupDriveDestinationPath_Params
{
	TArray<class AAIVehicleWaypoint*>                  WaypointList;                                             // (Parm, ZeroConstructor)
	TEnumAsByte<EVehicleAILoopType>                    LoopType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.SetGroupDriveDestinationBendSpline
struct UBendMotorcycleRiderGroup_SetGroupDriveDestinationBendSpline_Params
{
	class ABendSplinePath*                             BendSplinePath;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.SetGroupDriveDestination
struct UBendMotorcycleRiderGroup_SetGroupDriveDestination_Params
{
	class AAIVehicleWaypoint*                          Destination;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.SetAllowAutoCornerSpeed
struct UBendMotorcycleRiderGroup_SetAllowAutoCornerSpeed_Params
{
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.Reset
struct UBendMotorcycleRiderGroup_Reset_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.RemoveDriverFromGroup
struct UBendMotorcycleRiderGroup_RemoveDriverFromGroup_Params
{
	class ABendPawn*                                   driver;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.RemoveAllDrivers
struct UBendMotorcycleRiderGroup_RemoveAllDrivers_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.Pace
struct UBendMotorcycleRiderGroup_Pace_Params
{
	class ABendPawn*                                   targetPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPaceParams                                 PaceParams;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderGroup.IsDriverInGroup
struct UBendMotorcycleRiderGroup_IsDriverInGroup_Params
{
	class ABendPawn*                                   driver;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.GetNumDrivers
struct UBendMotorcycleRiderGroup_GetNumDrivers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.GetGroupLeaderEntry
struct UBendMotorcycleRiderGroup_GetGroupLeaderEntry_Params
{
	class UMotoGroupEntry*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.GetFrontRunnerEntry
struct UBendMotorcycleRiderGroup_GetFrontRunnerEntry_Params
{
	class UMotoGroupEntry*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.GetDriverEntryAt
struct UBendMotorcycleRiderGroup_GetDriverEntryAt_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UMotoGroupEntry*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.GetBackRunnerEntry
struct UBendMotorcycleRiderGroup_GetBackRunnerEntry_Params
{
	class UMotoGroupEntry*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.DriveToDestination
struct UBendMotorcycleRiderGroup_DriveToDestination_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.DriveNoPath
struct UBendMotorcycleRiderGroup_DriveNoPath_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.ClearBendSplinePath
struct UBendMotorcycleRiderGroup_ClearBendSplinePath_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.CancelDrive
struct UBendMotorcycleRiderGroup_CancelDrive_Params
{
};

// Function BendGame.BendMotorcycleRiderGroup.AddGroupList
struct UBendMotorcycleRiderGroup_AddGroupList_Params
{
	TArray<class UMotoGroupEntry*>                     groupList;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.BendMotorcycleRiderGroup.AddGroupEntry
struct UBendMotorcycleRiderGroup_AddGroupEntry_Params
{
	class UMotoGroupEntry*                             groupEntry;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMotorcycleRiderGroup.AddDriverToGroup
struct UBendMotorcycleRiderGroup_AddDriverToGroup_Params
{
	class ABendPawn*                                   driver;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendMovementFXType.BendGetMovementFXSoundCue
struct ABendMovementFXType_BendGetMovementFXSoundCue_Params
{
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNavLinkCollectionComponent.ClimbCompleted
struct UBendNavLinkCollectionComponent_ClimbCompleted_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNavLinkCustomComponent.PawnDied
struct UBendNavLinkCustomComponent_PawnDied_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNavModifierBox.ToggleNavRelevancy
struct ABendNavModifierBox_ToggleNavRelevancy_Params
{
	bool                                               navRelevant;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNeroCheckpoint.SetCheckpointClear
struct ABendNeroCheckpoint_SetCheckpointClear_Params
{
};

// Function BendGame.BendNeroCheckpoint.IsCheckpointCleared
struct ABendNeroCheckpoint_IsCheckpointCleared_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNeroCheckpointData.SetInjectorUsed
struct UBendNeroCheckpointData_SetInjectorUsed_Params
{
};

// Function BendGame.BendNeroCheckpointData.SetCheckpointDiscovered
struct UBendNeroCheckpointData_SetCheckpointDiscovered_Params
{
};

// Function BendGame.BendNeroCheckpointData.SetCheckpointClear
struct UBendNeroCheckpointData_SetCheckpointClear_Params
{
	bool                                               IsCleared;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNeroCheckpointData.ResetNeroCheckpointData
struct UBendNeroCheckpointData_ResetNeroCheckpointData_Params
{
};

// Function BendGame.BendNeroCheckpointData.IsCheckpointCleared
struct UBendNeroCheckpointData_IsCheckpointCleared_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestComponent.SetStructureBox
struct UBendNestComponent_SetStructureBox_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponent.AddWindowPointArray
struct UBendNestComponent_AddWindowPointArray_Params
{
	TArray<class UChildActorComponent*>                childActorComps;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddWindowPoint
struct UBendNestComponent_AddWindowPoint_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponent.AddSmokeLocationArray
struct UBendNestComponent_AddSmokeLocationArray_Params
{
	TArray<class UChildActorComponent*>                childActorComps;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddSmokeLocation
struct UBendNestComponent_AddSmokeLocation_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponent.AddSmokeEmitterArray
struct UBendNestComponent_AddSmokeEmitterArray_Params
{
	TArray<class UParticleSystemComponent*>            smokeEmitterComps;                                        // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddObjectToDestroyArray
struct UBendNestComponent_AddObjectToDestroyArray_Params
{
	TArray<class UChildActorComponent*>                childActorComps;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddObjectToDestroy
struct UBendNestComponent_AddObjectToDestroy_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponent.AddFireGenericArray
struct UBendNestComponent_AddFireGenericArray_Params
{
	TArray<class UChildActorComponent*>                childActorComps;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddFireGeneric
struct UBendNestComponent_AddFireGeneric_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponent.AddFireBaseArray
struct UBendNestComponent_AddFireBaseArray_Params
{
	TArray<class UChildActorComponent*>                childActorComps;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestComponent.AddFireBase
struct UBendNestComponent_AddFireBase_Params
{
	class UChildActorComponent*                        childActorComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendNestComponentBase.OnFinishedBurning
struct ABendNestComponentBase_OnFinishedBurning_Params
{
};

// Function BendGame.BendNestComponentBase.OnDisableCollision
struct ABendNestComponentBase_OnDisableCollision_Params
{
};

// Function BendGame.BendNestComponentBase.FinishedBurning
struct ABendNestComponentBase_FinishedBurning_Params
{
};

// Function BendGame.BendNestComponentBase.DisableCollision
struct ABendNestComponentBase_DisableCollision_Params
{
};

// Function BendGame.BendNestingZone.ResetAllNestsToNotBurnt
struct UBendNestingZone_ResetAllNestsToNotBurnt_Params
{
};

// Function BendGame.BendNestingZone.RegionCleared
struct UBendNestingZone_RegionCleared_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestingZone.NotifyNestStartedBurning
struct UBendNestingZone_NotifyNestStartedBurning_Params
{
	struct FString                                     NestID;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestingZone.NotifyNestDestroyed
struct UBendNestingZone_NotifyNestDestroyed_Params
{
	struct FString                                     NestID;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.BendNestingZone.GetNestCount
struct UBendNestingZone_GetNestCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestingZone.DebugDestroyAllNestsInZone
struct UBendNestingZone_DebugDestroyAllNestsInZone_Params
{
};

// Function BendGame.MapLocationFastTravelActor.GetPlayerFastTravelLocation
struct AMapLocationFastTravelActor_GetPlayerFastTravelLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocationFastTravelActor.GetBikeFastTravelLocation
struct AMapLocationFastTravelActor_GetBikeFastTravelLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocationFastTravelActor.AvailableForFastTravel
struct AMapLocationFastTravelActor_AvailableForFastTravel_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestingZoneActor.PlayerEndOverlap
struct ABendNestingZoneActor_PlayerEndOverlap_Params
{
};

// Function BendGame.BendNestingZoneActor.PlayerBeginOverlap
struct ABendNestingZoneActor_PlayerBeginOverlap_Params
{
};

// Function BendGame.BendObjective.UpdateSphereRadius
struct ABendObjective_UpdateSphereRadius_Params
{
	float                                              NewRadius;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.UpdateObjectiveText
struct ABendObjective_UpdateObjectiveText_Params
{
	struct FText                                       NewText;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.UpdateObjectiveStatus
struct ABendObjective_UpdateObjectiveStatus_Params
{
	TEnumAsByte<EObjectiveStates>                      NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AlsoUpdateProgression;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.UpdateObjectiveCounter
struct ABendObjective_UpdateObjectiveCounter_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncrementByOne;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.UpdateMiniMapMarkerVisibility
struct ABendObjective_UpdateMiniMapMarkerVisibility_Params
{
	bool                                               VisibleOnMap;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               VisibleOnMiniMap;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.UpdateLocationImage
struct ABendObjective_UpdateLocationImage_Params
{
	class UTexture2D*                                  NewImage;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendObjective.SetNewObjectiveStateInData
struct ABendObjective_SetNewObjectiveStateInData_Params
{
	TEnumAsByte<EObjectiveStates>                      NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.SetNewObjectiveNameTextInData
struct ABendObjective_SetNewObjectiveNameTextInData_Params
{
	struct FText                                       NewText;                                                  // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.SetNewObjectiveNameInData
struct ABendObjective_SetNewObjectiveNameInData_Params
{
	struct FString                                     NewName;                                                  // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.HasParentCounter
struct ABendObjective_HasParentCounter_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.HandleObjectiveIcon
struct ABendObjective_HandleObjectiveIcon_Params
{
	bool                                               TurnOn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               HideDontDestroy;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.HandleGPSToObjectiveFunctionality
struct ABendObjective_HandleGPSToObjectiveFunctionality_Params
{
	bool                                               Active;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StoreSetting;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.HandleBreadCrumbFunctionality
struct ABendObjective_HandleBreadCrumbFunctionality_Params
{
	bool                                               Active;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                OverrideCurrentIndex;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetSideObjectiveStage
struct ABendObjective_GetSideObjectiveStage_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetOriginalObjectiveNameText
struct ABendObjective_GetOriginalObjectiveNameText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendObjective.GetObjectiveStage
struct ABendObjective_GetObjectiveStage_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetObjectiveNameText
struct ABendObjective_GetObjectiveNameText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendObjective.GetIsMainObjective
struct ABendObjective_GetIsMainObjective_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetCurrentObjectiveState
struct ABendObjective_GetCurrentObjectiveState_Params
{
	TEnumAsByte<EObjectiveStates>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetCompletedAutoObjCount
struct ABendObjective_GetCompletedAutoObjCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetAutoActivateSideObjective
struct ABendObjective_GetAutoActivateSideObjective_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.GetAutoActivateMainObjective
struct ABendObjective_GetAutoActivateMainObjective_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.EnableObjective
struct ABendObjective_EnableObjective_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.DisableObjective
struct ABendObjective_DisableObjective_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.ChangeMiniMapMarkerType
struct ABendObjective_ChangeMiniMapMarkerType_Params
{
	bool                                               IsObjectiveRegion;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RegionSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.CalculateObjectivesDistance
struct ABendObjective_CalculateObjectivesDistance_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendObjective.BreadCrumbBeginOverlap
struct ABendObjective_BreadCrumbBeginOverlap_Params
{
	class AActor*                                      TriggerOverlapping;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ActorOverlapping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendObjective.AttachObjectiveToActor
struct ABendObjective_AttachObjectiveToActor_Params
{
	TEnumAsByte<EObjectiveAttachTypes>                 ObjectiveAttachType;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ActorToAttachTo;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Detach;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.ToggleOpenWorldVOManager
struct ABendOpenWorldVOManager_ToggleOpenWorldVOManager_Params
{
	int                                                Token;                                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               Pause;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptVO;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.ToggleCanPlayConvos
struct ABendOpenWorldVOManager_ToggleCanPlayConvos_Params
{
};

// Function BendGame.BendOpenWorldVOManager.SkipCurrentConvo
struct ABendOpenWorldVOManager_SkipCurrentConvo_Params
{
};

// Function BendGame.BendOpenWorldVOManager.RetryFailedUnlockVO
struct ABendOpenWorldVOManager_RetryFailedUnlockVO_Params
{
};

// Function BendGame.BendOpenWorldVOManager.RepopulatePlayerPawnInConversations
struct ABendOpenWorldVOManager_RepopulatePlayerPawnInConversations_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.RecheckFirstVO
struct ABendOpenWorldVOManager_RecheckFirstVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.QuickCheck
struct ABendOpenWorldVOManager_QuickCheck_Params
{
};

// Function BendGame.BendOpenWorldVOManager.PullAndStoreDataTableInfo
struct ABendOpenWorldVOManager_PullAndStoreDataTableInfo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.PostSaveGameLoaded
struct ABendOpenWorldVOManager_PostSaveGameLoaded_Params
{
	bool                                               bIsCheckpoint;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.PlayNextConversation
struct ABendOpenWorldVOManager_PlayNextConversation_Params
{
};

// Function BendGame.BendOpenWorldVOManager.PlayerOnBike
struct ABendOpenWorldVOManager_PlayerOnBike_Params
{
	class ABendPawn*                                   Character;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.PlayerOffBike
struct ABendOpenWorldVOManager_PlayerOffBike_Params
{
	class ABendPawn*                                   Character;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendVehicleExitReason>                ExitReason;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.PauseEverything
struct ABendOpenWorldVOManager_PauseEverything_Params
{
};

// Function BendGame.BendOpenWorldVOManager.OnPlayVOComplete
struct ABendOpenWorldVOManager_OnPlayVOComplete_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Conversation_ID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.OnPlayRFO
struct ABendOpenWorldVOManager_OnPlayRFO_Params
{
};

// Function BendGame.BendOpenWorldVOManager.OnPlayerRespawned
struct ABendOpenWorldVOManager_OnPlayerRespawned_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.OnFinishRFO
struct ABendOpenWorldVOManager_OnFinishRFO_Params
{
};

// Function BendGame.BendOpenWorldVOManager.NewCheck
struct ABendOpenWorldVOManager_NewCheck_Params
{
};

// Function BendGame.BendOpenWorldVOManager.MissionUnlocked
struct ABendOpenWorldVOManager_MissionUnlocked_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.MissionStarted
struct ABendOpenWorldVOManager_MissionStarted_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.MissionComplete
struct ABendOpenWorldVOManager_MissionComplete_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.ManuallyCallConvoNow
struct ABendOpenWorldVOManager_ManuallyCallConvoNow_Params
{
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.ManuallyCallConvo
struct ABendOpenWorldVOManager_ManuallyCallConvo_Params
{
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.LeftEncampment
struct ABendOpenWorldVOManager_LeftEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.JobUnlocked
struct ABendOpenWorldVOManager_JobUnlocked_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.JobEnded
struct ABendOpenWorldVOManager_JobEnded_Params
{
	class UJobClassInfo*                               JobID;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Failed;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.InsertNewConversation
struct ABendOpenWorldVOManager_InsertNewConversation_Params
{
	struct FBendOpenWorldVOData                        NewVOToAdd;                                               // (Parm, OutParm)
};

// Function BendGame.BendOpenWorldVOManager.FastTravelStarted
struct ABendOpenWorldVOManager_FastTravelStarted_Params
{
	struct FName                                       TravelDestination;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.FastTravelDone
struct ABendOpenWorldVOManager_FastTravelDone_Params
{
	struct FName                                       TravelDestination;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.FastTimer
struct ABendOpenWorldVOManager_FastTimer_Params
{
};

// Function BendGame.BendOpenWorldVOManager.DisableRFO
struct ABendOpenWorldVOManager_DisableRFO_Params
{
};

// Function BendGame.BendOpenWorldVOManager.DealWithDemoJumpPoint
struct ABendOpenWorldVOManager_DealWithDemoJumpPoint_Params
{
};

// Function BendGame.BendOpenWorldVOManager.CompleteAndUnlockViaVO
struct ABendOpenWorldVOManager_CompleteAndUnlockViaVO_Params
{
	struct FBendOpenWorldVOData                        RecentlyFinishedVO;                                       // (Parm)
};

// Function BendGame.BendOpenWorldVOManager.CinematicStarted
struct ABendOpenWorldVOManager_CinematicStarted_Params
{
	struct FName                                       CinematicLevel;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CinematicEnded
struct ABendOpenWorldVOManager_CinematicEnded_Params
{
	struct FName                                       Message;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckWaitingVO
struct ABendOpenWorldVOManager_CheckWaitingVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckTimeToUnlockPreReq
struct ABendOpenWorldVOManager_CheckTimeToUnlockPreReq_Params
{
	TArray<TEnumAsByte<EMissionIDs>>                   MissionData;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UJobClassInfo*>                       JobIDs;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              TimeToWait;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                HourToCall;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckMissionUnlockPreReq
struct ABendOpenWorldVOManager_CheckMissionUnlockPreReq_Params
{
	TEnumAsByte<EMissionIDs>                           MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckMissionDataPreReqs
struct ABendOpenWorldVOManager_CheckMissionDataPreReqs_Params
{
	TArray<TEnumAsByte<EMissionIDs>>                   MissionData;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckIfCanPlayVO
struct ABendOpenWorldVOManager_CheckIfCanPlayVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckGameplayDatabase
struct ABendOpenWorldVOManager_CheckGameplayDatabase_Params
{
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName_Completed;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName_Failed;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckForAnyNewVO
struct ABendOpenWorldVOManager_CheckForAnyNewVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckAutoFailVO
struct ABendOpenWorldVOManager_CheckAutoFailVO_Params
{
	TEnumAsByte<EMissionIDs>                           CompleteMissionData;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UJobClassInfo*                               CompleteJobID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UJobClassInfo*                               UnlockJobID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FailVO;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CheckAllPreReqs
struct ABendOpenWorldVOManager_CheckAllPreReqs_Params
{
	struct FBendOpenWorldVOData                        VOData;                                                   // (Parm, OutParm)
	bool                                               Failed;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnResult;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.CancelConvoByName
struct ABendOpenWorldVOManager_CancelConvoByName_Params
{
	struct FName                                       ConversationToCancel;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.BindPlayerBinds
struct ABendOpenWorldVOManager_BindPlayerBinds_Params
{
};

// Function BendGame.BendOpenWorldVOManager.AttemptToUnlockMission
struct ABendOpenWorldVOManager_AttemptToUnlockMission_Params
{
	struct FBendOpenWorldVOData                        MissionToUnlockVO;                                        // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendOpenWorldVOManager.AttemptToUnlockJob
struct ABendOpenWorldVOManager_AttemptToUnlockJob_Params
{
	struct FBendOpenWorldVOData                        JobToUnlockVO;                                            // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendFreakerPawn.HandleDroppedEarPickup
struct ABendFreakerPawn_HandleDroppedEarPickup_Params
{
	class ABendInventoryPickup*                        InventoryPickup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendFreakerPawn.GenerateLootDrop
struct ABendFreakerPawn_GenerateLootDrop_Params
{
	class ABendInventoryPickup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSwarmerPawn.SetSwarmerColors
struct ABendSwarmerPawn_SetSwarmerColors_Params
{
};

// Function BendGame.BendSkeletalMeshArrayData.GetRandomLook
struct UBendSkeletalMeshArrayData_GetRandomLook_Params
{
	class UBendSkeletalMeshLook*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshArrayData.GetRandom
struct UBendSkeletalMeshArrayData_GetRandom_Params
{
	class USkeletalMesh*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshArrayData.GetLook
struct UBendSkeletalMeshArrayData_GetLook_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendSkeletalMeshLook*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshArrayData.Get
struct UBendSkeletalMeshArrayData_Get_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendConditionalSkeletalMeshArrayData.GetConditionalLookNow
struct UBendConditionalSkeletalMeshArrayData_GetConditionalLookNow_Params
{
	class UBendSkeletalMeshLook*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleClasses.GetRandom
struct UBendVehicleClasses_GetRandom_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleClasses.Get
struct UBendVehicleClasses_Get_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawnClasses.GetRandom
struct UBendPawnClasses_GetRandom_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawnClasses.Get
struct UBendPawnClasses_Get_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleClassRef.Get
struct UBendVehicleClassRef_Get_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawnClassRef.Get
struct UBendPawnClassRef_Get_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPerformActionHelper.ConfigureActionSequence
struct UBendPerformActionHelper_ConfigureActionSequence_Params
{
	struct FBendActionSequence                         Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              MainActionLoopingTime;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendActionSequence                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendPhysicsSurfaceConditionsManager.GetBendPhysicsSurfaceConditionsManager
struct ABendPhysicsSurfaceConditionsManager_GetBendPhysicsSurfaceConditionsManager_Params
{
	class ABendPhysicsSurfaceConditionsManager*        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPingLocationComponent.StopPinging
struct UBendPingLocationComponent_StopPinging_Params
{
};

// Function BendGame.BendPingLocationComponent.StartPinging
struct UBendPingLocationComponent_StartPinging_Params
{
};

// Function BendGame.BendPingLocationComponent.PingOnce
struct UBendPingLocationComponent_PingOnce_Params
{
};

// Function BendGame.BendPingLocationComponent.GetLocation
struct UBendPingLocationComponent_GetLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPingWidget.TweenPulseB
struct UBendPingWidget_TweenPulseB_Params
{
};

// Function BendGame.BendPingWidget.TweenPulseA
struct UBendPingWidget_TweenPulseA_Params
{
};

// Function BendGame.BendPingWidget.StartTweenPulseB
struct UBendPingWidget_StartTweenPulseB_Params
{
};

// Function BendGame.BendPingWidget.PulseOnce
struct UBendPingWidget_PulseOnce_Params
{
};

// Function BendGame.BendPOI.SetPriority
struct ABendPOI_SetPriority_Params
{
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.SetChosenSlot
struct ABendPOI_SetChosenSlot_Params
{
	class ABendPOISlot*                                Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.RequestUsePOI
struct ABendPOI_RequestUsePOI_Params
{
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               skipTests;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               forceLeavePrevPOI;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.RequestLeavePOIForAllUsers
struct ABendPOI_RequestLeavePOIForAllUsers_Params
{
};

// Function BendGame.BendPOI.RequestLeavePOI
struct ABendPOI_RequestLeavePOI_Params
{
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIReasonForLeaving>                 reasonForLeaving;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.OnRequestUsePOI
struct ABendPOI_OnRequestUsePOI_Params
{
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                closestOpenSlot;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.OnPathComplete
struct ABendPOI_OnPathComplete_Params
{
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.OnGetPriority
struct ABendPOI_OnGetPriority_Params
{
	float                                              defaultPriority;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.IsUsingDefaultSlot
struct ABendPOI_IsUsingDefaultSlot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.IsSlotAvailable
struct ABendPOI_IsSlotAvailable_Params
{
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.GetPriority
struct ABendPOI_GetPriority_Params
{
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     POIType;                                                  // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.GetOccupiedSlots
struct ABendPOI_GetOccupiedSlots_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.GetNumOpenSlots
struct ABendPOI_GetNumOpenSlots_Params
{
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOI.ForceLeavePOI
struct ABendPOI_ForceLeavePOI_Params
{
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIReasonForLeaving>                 reasonForLeaving;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.AddSlot
struct ABendPOI_AddSlot_Params
{
	class ABendPOISlot*                                NewSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOI.AddAndReplaceDefaultSlot
struct ABendPOI_AddAndReplaceDefaultSlot_Params
{
	class ABendPOISlot*                                NewSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.TemporaryDestroyNestForChallenge
struct ABendNest_TemporaryDestroyNestForChallenge_Params
{
};

// Function BendGame.BendNest.StartBurningNest
struct ABendNest_StartBurningNest_Params
{
};

// Function BendGame.BendNest.SmokeStartUpdate
struct ABendNest_SmokeStartUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.SmokeStartFinished
struct ABendNest_SmokeStartFinished_Params
{
};

// Function BendGame.BendNest.SmokeInUpdate
struct ABendNest_SmokeInUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.PlayerEndOverlap
struct ABendNest_PlayerEndOverlap_Params
{
};

// Function BendGame.BendNest.PlayerBeginOverlap
struct ABendNest_PlayerBeginOverlap_Params
{
};

// Function BendGame.BendNest.OnVolumeTakeDamage
struct ABendNest_OnVolumeTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.OnNoiseNearNest
struct ABendNest_OnNoiseNearNest_Params
{
	class APawn*                                       NoiseMaker;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.NotifyOnRegister
struct ABendNest_NotifyOnRegister_Params
{
	class ABendNestSpawnLocation*                      Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.MinimapScaleUpdate
struct ABendNest_MinimapScaleUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.MinimapAlphaUpdate
struct ABendNest_MinimapAlphaUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.FireStartUpdate
struct ABendNest_FireStartUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.FireStartFinished
struct ABendNest_FireStartFinished_Params
{
};

// Function BendGame.BendNest.FireImpacted
struct ABendNest_FireImpacted_Params
{
	class AActor*                                      FireStarter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 FireStarterOwner;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.FireDeathUpdate
struct ABendNest_FireDeathUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.FireDeathFinished
struct ABendNest_FireDeathFinished_Params
{
};

// Function BendGame.BendNest.DestroyNest
struct ABendNest_DestroyNest_Params
{
};

// Function BendGame.BendNest.BurnObjects
struct ABendNest_BurnObjects_Params
{
};

// Function BendGame.BendNest.ActorHit
struct ABendNest_ActorHit_Params
{
	class AActor*                                      SelfActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendNest.ActorEndedOverlap
struct ABendNest_ActorEndedOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendNest.ActorBeganOverlap
struct ABendNest_ActorBeganOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIGore.SetBody
struct ABendPOIGore_SetBody_Params
{
	class ABendPawn*                                   Body;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIGore.GetBody
struct ABendPOIGore_GetBody_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOIGoreClassRef.Get
struct UBendPOIGoreClassRef_Get_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOIGoreSector.RemoveGoreLocation
struct ABendPOIGoreSector_RemoveGoreLocation_Params
{
};

// Function BendGame.BendPOIGoreSector.AddGoreLocation
struct ABendPOIGoreSector_AddGoreLocation_Params
{
};

// Function BendGame.BendPOIPatrol.HasUser
struct ABendPOIPatrol_HasUser_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOIPatrol.GetCurrentUser
struct ABendPOIPatrol_GetCurrentUser_Params
{
	class AController*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOIPatrol.AdvanceToNextSlot
struct ABendPOIPatrol_AdvanceToNextSlot_Params
{
};

// Function BendGame.BendPOISlot.UserTakesSlot
struct ABendPOISlot_UserTakesSlot_Params
{
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.UserLeavesSlot
struct ABendPOISlot_UserLeavesSlot_Params
{
	TEnumAsByte<EePOIReasonForLeaving>                 reasonForLeaving;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.UserChangesSlot
struct ABendPOISlot_UserChangesSlot_Params
{
	class ABendPOISlot*                                NewSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIReasonForLeaving>                 reasonForLeaving;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.SetSlotActive
struct ABendPOISlot_SetSlotActive_Params
{
	bool                                               Active;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.OnUserTakesSlot
struct ABendPOISlot_OnUserTakesSlot_Params
{
};

// Function BendGame.BendPOISlot.OnUserLeavesSlot
struct ABendPOISlot_OnUserLeavesSlot_Params
{
};

// Function BendGame.BendPOISlot.OnRequestLeaveSlot
struct ABendPOISlot_OnRequestLeaveSlot_Params
{
};

// Function BendGame.BendPOISlot.OnPathComplete
struct ABendPOISlot_OnPathComplete_Params
{
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.OnBecomeUnaware
struct ABendPOISlot_OnBecomeUnaware_Params
{
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.OnBecomeSemiAware
struct ABendPOISlot_OnBecomeSemiAware_Params
{
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.OnBecomeAware
struct ABendPOISlot_OnBecomeAware_Params
{
	TEnumAsByte<EAIAwareState>                         prevAwareness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOISlot.IsSlotOpen
struct ABendPOISlot_IsSlotOpen_Params
{
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.IsSlotActive
struct ABendPOISlot_IsSlotActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetTimeSinceUse
struct ABendPOISlot_GetTimeSinceUse_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetSlotUseTime
struct ABendPOISlot_GetSlotUseTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetSlotUserconst
struct ABendPOISlot_GetSlotUserconst_Params
{
	class AController*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetSlotUser
struct ABendPOISlot_GetSlotUser_Params
{
	class AController*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetPOIconst
struct ABendPOISlot_GetPOIconst_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetPOI
struct ABendPOISlot_GetPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetIsLeavingSlot
struct ABendPOISlot_GetIsLeavingSlot_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.GetAutoNavGoal
struct ABendPOISlot_GetAutoNavGoal_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOISlot.AdvanceOrLeave
struct ABendPOISlot_AdvanceOrLeave_Params
{
	TEnumAsByte<EePOIReasonForLeaving>                 reasonForLeaving;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawnSpawnLocation.SetSpawnType
struct ABendPawnSpawnLocation_SetSpawnType_Params
{
	struct FBendAmbientSpawnType                       SpawnType;                                                // (Parm)
};

// Function BendGame.BendPawnSpawnLocation.ResetSpawnCount
struct ABendPawnSpawnLocation_ResetSpawnCount_Params
{
	bool                                               resetToKilled;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawnSpawnLocation.ResetKillCount
struct ABendPawnSpawnLocation_ResetKillCount_Params
{
};

// Function BendGame.BendPawnSpawnLocation.OnFinishedSpawnOnVehicleSeat
struct ABendPawnSpawnLocation_OnFinishedSpawnOnVehicleSeat_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                SpawnedVehiclePawn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPawnSpawnLocation.GetSpawnCount
struct ABendPawnSpawnLocation_GetSpawnCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawnSpawnLocation.GetKillCount
struct ABendPawnSpawnLocation_GetKillCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPawnSpawnLocation.GetActiveCount
struct ABendPawnSpawnLocation_GetActiveCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSpawnCheck.OffScreenCheckWithRayCast
struct UXpecSpawnCheck_OffScreenCheckWithRayCast_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     loc;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               drawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      additionalIgnoreActor;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSpawnCheck.OffScreenCheck
struct UXpecSpawnCheck_OffScreenCheck_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSpawnCheck.CanSpawn
struct UXpecSpawnCheck_CanSpawn_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAnimationFunctions.SyncAnimationPosition
struct UXpecAnimationFunctions_SyncAnimationPosition_Params
{
	class AActor*                                      pSyncMaster;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSyncSlave;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAnimationFunctions.SetAnimationPosition
struct UXpecAnimationFunctions_SetAnimationPosition_Params
{
	class AActor*                                      pInActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fInPosition;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAnimationFunctions.GetAnimationPosition
struct UXpecAnimationFunctions_GetAnimationPosition_Params
{
	class AActor*                                      pInActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEnum.GetWeaponTypeString
struct UXpecEnum_GetWeaponTypeString_Params
{
	TEnumAsByte<EUnaimedAnimMoveStyle>                 E;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecEnum.GetPawnLODEnumName
struct UXpecEnum_GetPawnLODEnumName_Params
{
	TEnumAsByte<EXpecPawnLODLevel>                     E;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecEditorFunctions.SetActorLabel
struct UXpecEditorFunctions_SetActorLabel_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     newActorLabel;                                            // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlueprintCommonFunction.SetWeaponCurrentAmmoInClip
struct UXpecBlueprintCommonFunction_SetWeaponCurrentAmmoInClip_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EEquippableSlot;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iAmmoNum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlueprintCommonFunction.ForceFireWeapon
struct UXpecBlueprintCommonFunction_ForceFireWeapon_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEquippableSlot>                       EEquippableSlot;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iFireRound;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecConversationData.FindVONameByTrust
struct UXpecConversationData_FindVONameByTrust_Params
{
	TEnumAsByte<ETrustTier>                            TrustTier;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOName;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecAnimationMap.FindAnimationDataByName
struct UXpecAnimationMap_FindAnimationDataByName_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FXpecAnimationData                          Data;                                                     // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IWeatherChanged
struct UXpecPOIInterface_IWeatherChanged_Params
{
	TEnumAsByte<EWeatherType>                          eOldWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eNewWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.ITimeZoneChanged
struct UXpecPOIInterface_ITimeZoneChanged_Params
{
	TEnumAsByte<EXpecTimeZone>                         eOldTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eNewTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IPreorder
struct UXpecPOIInterface_IPreorder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecUsePOIResult>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IOnReceiveAnimNotify
struct UXpecPOIInterface_IOnReceiveAnimNotify_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IOnLeaveSlot
struct UXpecPOIInterface_IOnLeaveSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IOnEnterSlot
struct UXpecPOIInterface_IOnEnterSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IOnDebugTriggerPOI
struct UXpecPOIInterface_IOnDebugTriggerPOI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IIsForceHighLOD
struct UXpecPOIInterface_IIsForceHighLOD_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IIsDebugMode
struct UXpecPOIInterface_IIsDebugMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IIsAllowedToUse
struct UXpecPOIInterface_IIsAllowedToUse_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IIsAllowedDummyToUse
struct UXpecPOIInterface_IIsAllowedDummyToUse_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IInitialize
struct UXpecPOIInterface_IInitialize_Params
{
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecVOManager*                              pVOManager;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eWeather;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetZoneManager
struct UXpecPOIInterface_IGetZoneManager_Params
{
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetUserType
struct UXpecPOIInterface_IGetUserType_Params
{
	TEnumAsByte<EXpecPOIUserType>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetUserGender
struct UXpecPOIInterface_IGetUserGender_Params
{
	TEnumAsByte<EXpecPOIUserGender>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetSlotForUser
struct UXpecPOIInterface_IGetSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bPreorder;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetScenarioName
struct UXpecPOIInterface_IGetScenarioName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetPOIName
struct UXpecPOIInterface_IGetPOIName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetDummySpawnPosition
struct UXpecPOIInterface_IGetDummySpawnPosition_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraPosition;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraDirection;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fMinDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMaxDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetDummyInfo
struct UXpecPOIInterface_IGetDummyInfo_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    dummyGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecVOClass>                          eUserVOClass;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                preOrderedSlot;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  loopPosition;                                             // (Parm, OutParm, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                commandIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lowLODAnimGroup;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fTransitionTime;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 m_eWeaponType;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetBestSlotForUser
struct UXpecPOIInterface_IGetBestSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IGetBestSlotForDummy
struct UXpecPOIInterface_IGetBestSlotForDummy_Params
{
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.ICanSpawnDummy
struct UXpecPOIInterface_ICanSpawnDummy_Params
{
	struct FName                                       dummyPawnName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.ICancelOrder
struct UXpecPOIInterface_ICancelOrder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.ICalculatePriority
struct UXpecPOIInterface_ICalculatePriority_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pBestSlot;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIInterface.IAddDedicatedUser
struct UXpecPOIInterface_IAddDedicatedUser_Params
{
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.ITryResumeScenario
struct UXpecScenarioClientInterface_ITryResumeScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IScenarioCondition
struct UXpecScenarioClientInterface_IScenarioCondition_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       conditionName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideTimerTime
struct UXpecScenarioClientInterface_IOverrideTimerTime_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultTimerTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideRotateAlignTarget
struct UXpecScenarioClientInterface_IOverrideRotateAlignTarget_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverridePerformActionParameter
struct UXpecScenarioClientInterface_IOverridePerformActionParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       defaultAnimGroup;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  defaultAnchorTransform;                                   // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               defaultUseAnchor;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendInTime;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendOutTime;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DefaultPlayRate;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 defaultWeaponType;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       animGroup;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorTransform;                                          // (Parm, OutParm, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fPlayRate;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideMoveToParameter
struct UXpecScenarioClientInterface_IOverrideMoveToParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultMoveToSpeed;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultApplySpeedMultiply;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultRadius;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultApproachOuterRadius;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultSlowApproach;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, OutParm, IsPlainOldData)
	float                                              fMoveToSpeed;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedMultiply;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fApproachOuterRadius;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowApproach;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideLookAtParameter
struct UXpecScenarioClientInterface_IOverrideLookAtParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bDefaultOverrideAngleLimits;                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rDefaultAngleLimitsOverride;                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          eDefaultPartialSet;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDefaultInterpolationRate;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultDuration;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rAngleLimitsOverride;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          ePartialSet;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fInterpolationRate;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fDuration;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideGateParameter
struct UXpecScenarioClientInterface_IOverrideGateParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                defaultGateMin;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                defaultGateMax;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMin;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMax;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOverrideDelayParameter
struct UXpecScenarioClientInterface_IOverrideDelayParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultDelayTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOnScenarioSetup
struct UXpecScenarioClientInterface_IOnScenarioSetup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOnScenarioCleanup
struct UXpecScenarioClientInterface_IOnScenarioCleanup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IOnRunScenario
struct UXpecScenarioClientInterface_IOnRunScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pMainActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultScenarioName;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGrant
struct UXpecScenarioClientInterface_IGrant_Params
{
	float                                              fRewardPercentage;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fCostPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetVO
struct UXpecScenarioClientInterface_IGetVO_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultVOName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetSearchCenterForScenarioActor
struct UXpecScenarioClientInterface_IGetSearchCenterForScenarioActor_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetScenarioActorCandidates
struct UXpecScenarioClientInterface_IGetScenarioActorCandidates_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TArray<class ABendPawn*>                           candidates;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetNextScenario
struct UXpecScenarioClientInterface_IGetNextScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lastScenarioName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            eLastScenarioResult;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetFirstScenario
struct UXpecScenarioClientInterface_IGetFirstScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IGetConversationData
struct UXpecScenarioClientInterface_IGetConversationData_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pTalkPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pTalkToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecScenarioClientInterface.IGetAnchorTransform
struct UXpecScenarioClientInterface_IGetAnchorTransform_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.ICanActorJoinScenario
struct UXpecScenarioClientInterface_ICanActorJoinScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pNewActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioClientInterface.IAboutToSwitchToLowLOD
struct UXpecScenarioClientInterface_IAboutToSwitchToLowLOD_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTriggerableInterface.IUntrigger
struct UXpecTriggerableInterface_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTriggerableInterface.ITrigger
struct UXpecTriggerableInterface_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecLODToPOIInterface.IOnLODStateChanged
struct UXpecLODToPOIInterface_IOnLODStateChanged_Params
{
	struct FXpecLODPawn                                pPawnInfo;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EXpecPawnLODChangeState>               ChangeState;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecLODToPOIInterface.IIsAllowedSwitchToHighLOD
struct UXpecLODToPOIInterface_IIsAllowedSwitchToHighLOD_Params
{
	bool                                               bIsOutOffHighLODQuickSwitchDistance;                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOffScreenCheckPass;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAnimPlayOver;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecLODToPOIInterface.IIsAllowedLODInterrupt
struct UXpecLODToPOIInterface_IIsAllowedLODInterrupt_Params
{
	class ABendPawn*                                   pPawnToInterrupt;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.UpdateLocationProxyAfterLocationChanged
struct UXpecDebugComponent_UpdateLocationProxyAfterLocationChanged_Params
{
	class ABendLocationProxy*                          locationProxy;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.SetupLocationProxyToReference
struct UXpecDebugComponent_SetupLocationProxyToReference_Params
{
	class ABendLocationProxy*                          locationProxy;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       locationName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ActorName;                                                // (ConstParm, Parm, ZeroConstructor)
	struct FBendLocationReference                      ref;                                                      // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.SetPOI_M_Name
struct UXpecDebugComponent_SetPOI_M_Name_Params
{
	class AXpecPOI*                                    POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NewName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.SaveStringToFile
struct UXpecDebugComponent_SaveStringToFile_Params
{
	struct FString                                     String;                                                   // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     FileName;                                                 // (ConstParm, Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.OnPostEditChangeProperty
struct UXpecDebugComponent_OnPostEditChangeProperty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.GetSoundNamesFromSoundClass
struct UXpecDebugComponent_GetSoundNamesFromSoundClass_Params
{
	class USoundClass*                                 pSoundClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnArray;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecDebugComponent.GetProxyNameInTransitionInfo
struct UXpecDebugComponent_GetProxyNameInTransitionInfo_Params
{
	struct FXpecTransitionInfo                         transitionInfo;                                           // (ConstParm, Parm)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecDebugComponent.GetActorLevelName
struct UXpecDebugComponent_GetActorLevelName_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecDebugComponent.FindOtherActorsReferenceTheActor
struct UXpecDebugComponent_FindOtherActorsReferenceTheActor_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              OutReferencingActors;                                     // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.FindActorsImplementTheFunction
struct UXpecDebugComponent_FindActorsImplementTheFunction_Params
{
	struct FName                                       FunctionName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               blackClassList;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.DoesSoundBankContainsVo
struct UXpecDebugComponent_DoesSoundBankContainsVo_Params
{
	class USoundClass*                                 pSoundBank;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     sVoTag;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugComponent.CheckPOIHasWrongReward
struct UXpecDebugComponent_CheckPOIHasWrongReward_Params
{
	class AXpecZoneManager*                            Zone;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ShouldTick
struct AXpecPOI_ShouldTick_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.SetPropVisible
struct AXpecPOI_SetPropVisible_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.RequestDummyPOI
struct AXpecPOI_RequestDummyPOI_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecVOClass>                          eUserVOClass;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ASkeletalMeshActor*                          dummyMesh;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FXpecScenarioSave                           Save;                                                     // (Parm, OutParm)
	struct FTransform                                  dummyTransform;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.QuickSwitchToLowLOD
struct AXpecPOI_QuickSwitchToLowLOD_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  OriginLoopTransform;                                      // (Parm, IsPlainOldData)
};

// Function BendGame.XpecPOI.OnRequestUsePOIInternal
struct AXpecPOI_OnRequestUsePOIInternal_Params
{
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                closestOpenSlot;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.OnGetPriorityInternal
struct AXpecPOI_OnGetPriorityInternal_Params
{
	float                                              defaultPriority;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         userType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 User;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IWeatherChanged
struct AXpecPOI_IWeatherChanged_Params
{
	TEnumAsByte<EWeatherType>                          eOldWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eNewWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IUntrigger
struct AXpecPOI_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ITryResumeScenario
struct AXpecPOI_ITryResumeScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ITrigger
struct AXpecPOI_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ITimeZoneChanged
struct AXpecPOI_ITimeZoneChanged_Params
{
	TEnumAsByte<EXpecTimeZone>                         eOldTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eNewTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IScenarioCondition
struct AXpecPOI_IScenarioCondition_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       conditionName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IPreserveSlotForDummy
struct AXpecPOI_IPreserveSlotForDummy_Params
{
	struct FName                                       pawnName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IPreorder
struct AXpecPOI_IPreorder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecUsePOIResult>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideTimerTime
struct AXpecPOI_IOverrideTimerTime_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultTimerTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideRotateAlignTarget
struct AXpecPOI_IOverrideRotateAlignTarget_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverridePerformActionParameter
struct AXpecPOI_IOverridePerformActionParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       defaultAnimGroup;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  defaultAnchorTransform;                                   // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               defaultUseAnchor;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendInTime;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendOutTime;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DefaultPlayRate;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 defaultWeaponType;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       animGroup;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorTransform;                                          // (Parm, OutParm, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fPlayRate;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideMoveToParameter
struct AXpecPOI_IOverrideMoveToParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultMoveToSpeed;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultApplySpeedMultiply;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultRadius;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultApproachOuterRadius;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultSlowApproach;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, OutParm, IsPlainOldData)
	float                                              fMoveToSpeed;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedMultiply;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fApproachOuterRadius;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowApproach;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideLookAtParameter
struct AXpecPOI_IOverrideLookAtParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bDefaultOverrideAngleLimits;                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rDefaultAngleLimitsOverride;                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          eDefaultPartialSet;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDefaultInterpolationRate;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultDuration;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rAngleLimitsOverride;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          ePartialSet;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fInterpolationRate;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fDuration;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideGateParameter
struct AXpecPOI_IOverrideGateParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                defaultGateMin;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                defaultGateMax;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMin;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMax;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOverrideDelayParameter
struct AXpecPOI_IOverrideDelayParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultDelayTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnScenarioSetup
struct AXpecPOI_IOnScenarioSetup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnScenarioCleanup
struct AXpecPOI_IOnScenarioCleanup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnRunScenario
struct AXpecPOI_IOnRunScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pMainActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultScenarioName;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnReceiveAnimNotify
struct AXpecPOI_IOnReceiveAnimNotify_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnPostEditChangeProperty
struct AXpecPOI_IOnPostEditChangeProperty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnLODStateChanged
struct AXpecPOI_IOnLODStateChanged_Params
{
	struct FXpecLODPawn                                pPawnInfo;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EXpecPawnLODChangeState>               ChangeState;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnLeaveSlot
struct AXpecPOI_IOnLeaveSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnEnterSlot
struct AXpecPOI_IOnEnterSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IOnDebugTriggerPOI
struct AXpecPOI_IOnDebugTriggerPOI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.InitialWeathers
struct AXpecPOI_InitialWeathers_Params
{
	bool                                               Clear;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               cloudy;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               lightRain;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               lightSnow;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               heavyRain;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               heavySnow;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.InitialTimeZones
struct AXpecPOI_InitialTimeZones_Params
{
	bool                                               morning;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               afternoon;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               evening;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               night;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsForceHighLOD
struct AXpecPOI_IIsForceHighLOD_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsDebugMode
struct AXpecPOI_IIsDebugMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsAllowedToUse
struct AXpecPOI_IIsAllowedToUse_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsAllowedSwitchToHighLOD
struct AXpecPOI_IIsAllowedSwitchToHighLOD_Params
{
	bool                                               bIsOutOffHighLODQuickSwitchDistance;                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOffScreenCheckPass;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAnimPlayOver;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsAllowedLODInterrupt
struct AXpecPOI_IIsAllowedLODInterrupt_Params
{
	class ABendPawn*                                   pPawnToInterrupt;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IIsAllowedDummyToUse
struct AXpecPOI_IIsAllowedDummyToUse_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IInitialize
struct AXpecPOI_IInitialize_Params
{
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecVOManager*                              pVOManager;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eWeather;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGrant
struct AXpecPOI_IGrant_Params
{
	float                                              fRewardPercentage;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fCostPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetZoneManager
struct AXpecPOI_IGetZoneManager_Params
{
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetVO
struct AXpecPOI_IGetVO_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultVOName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetUserType
struct AXpecPOI_IGetUserType_Params
{
	TEnumAsByte<EXpecPOIUserType>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetUserGender
struct AXpecPOI_IGetUserGender_Params
{
	TEnumAsByte<EXpecPOIUserGender>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetSlotForUser
struct AXpecPOI_IGetSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bPreorder;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetSearchCenterForScenarioActor
struct AXpecPOI_IGetSearchCenterForScenarioActor_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetScenarioName
struct AXpecPOI_IGetScenarioName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetScenarioActorCandidates
struct AXpecPOI_IGetScenarioActorCandidates_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TArray<class ABendPawn*>                           candidates;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetPOIName
struct AXpecPOI_IGetPOIName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetNextScenario
struct AXpecPOI_IGetNextScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lastScenarioName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            eLastScenarioResult;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetFirstScenario
struct AXpecPOI_IGetFirstScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetDummySpawnPosition
struct AXpecPOI_IGetDummySpawnPosition_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraPosition;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraDirection;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fMinDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMaxDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetDummyInfo
struct AXpecPOI_IGetDummyInfo_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    dummyGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecVOClass>                          eUserVOClass;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                preOrderedSlot;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  loopPosition;                                             // (Parm, OutParm, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                commandIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lowLODAnimGroup;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fTransitionTime;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 m_eWeaponType;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetConversationData
struct AXpecPOI_IGetConversationData_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pTalkPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pTalkToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPOI.IGetBestSlotForUser
struct AXpecPOI_IGetBestSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetBestSlotForDummy
struct AXpecPOI_IGetBestSlotForDummy_Params
{
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IGetAnchorTransform
struct AXpecPOI_IGetAnchorTransform_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ICanSpawnDummy
struct AXpecPOI_ICanSpawnDummy_Params
{
	struct FName                                       dummyPawnName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ICancelOrder
struct AXpecPOI_ICancelOrder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ICanActorJoinScenario
struct AXpecPOI_ICanActorJoinScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pNewActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ICalculatePriority
struct AXpecPOI_ICalculatePriority_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pBestSlot;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IAddDedicatedUser
struct AXpecPOI_IAddDedicatedUser_Params
{
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.IAboutToSwitchToLowLOD
struct AXpecPOI_IAboutToSwitchToLowLOD_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.GetUseCount
struct AXpecPOI_GetUseCount_Params
{
	int                                                Count;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                totalCountInZone;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.GetSlotByPawnName
struct AXpecPOI_GetSlotByPawnName_Params
{
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.GetAnimGroupNames
struct AXpecPOI_GetAnimGroupNames_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPOI.DetachProp
struct AXpecPOI_DetachProp_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      pMeshToDetach;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.DebugShowPOIInfo
struct AXpecPOI_DebugShowPOIInfo_Params
{
	class ABendAIController*                           targetAI;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isFavored;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOI.DebugPrintInfo
struct AXpecPOI_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecPOI.AttachProp
struct AXpecPOI_AttachProp_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      pMeshToAttach;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachSocketName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOI.ApplyRewardCooldown
struct AXpecPOI_ApplyRewardCooldown_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fCooldown;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fScale;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioManager.RequestScenario
struct UXpecScenarioManager_RequestScenario_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOI*                                    pClient;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pMainActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iInterruptLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pFromScenario;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pScenarioInstance;                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EXpecScenarioRequestResult>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.ISetDefaultActionGroup
struct UXpecScenarioActorInterface_ISetDefaultActionGroup_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.ISetCurrentScenario
struct UXpecScenarioActorInterface_ISetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.ISetActionLock
struct UXpecScenarioActorInterface_ISetActionLock_Params
{
	bool                                               bLock;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IRotateTo
struct UXpecScenarioActorInterface_IRotateTo_Params
{
	struct FXpecRotateToActorData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IPlayVO
struct UXpecScenarioActorInterface_IPlayVO_Params
{
	struct FXpecPlayVOData                             Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IPlayConversation
struct UXpecScenarioActorInterface_IPlayConversation_Params
{
	struct FXpecPlayConversationData                   Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IPerformAction
struct UXpecScenarioActorInterface_IPerformAction_Params
{
	struct FXpecPerformActionData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IOnShowHighLOD
struct UXpecScenarioActorInterface_IOnShowHighLOD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.INextAction
struct UXpecScenarioActorInterface_INextAction_Params
{
	TEnumAsByte<EXpecScenarioCommand>                  eAction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCancelCurrentAction;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IMoveTo
struct UXpecScenarioActorInterface_IMoveTo_Params
{
	struct FXpecMoveToActorData                        Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.ILookAt
struct UXpecScenarioActorInterface_ILookAt_Params
{
	struct FXpecLookAtData                             Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IIsAllowedToUse
struct UXpecScenarioActorInterface_IIsAllowedToUse_Params
{
	class ABendPawn*                                   pActor;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IInitialize
struct UXpecScenarioActorInterface_IInitialize_Params
{
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IGetCurrentScenario
struct UXpecScenarioActorInterface_IGetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IFinish
struct UXpecScenarioActorInterface_IFinish_Params
{
	struct FXpecFinishActionData                       Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IEnableTurnToIdleInMovement
struct UXpecScenarioActorInterface_IEnableTurnToIdleInMovement_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IEnableMoveToIdleAnchor
struct UXpecScenarioActorInterface_IEnableMoveToIdleAnchor_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IEnableMoveToIdle
struct UXpecScenarioActorInterface_IEnableMoveToIdle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IEnableFootLocking
struct UXpecScenarioActorInterface_IEnableFootLocking_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioActorInterface.IAlignWith
struct UXpecScenarioActorInterface_IAlignWith_Params
{
	struct FXpecRotateToActorData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.ReportTurnInPlaceComplete
struct AXpecPOISlot_ReportTurnInPlaceComplete_Params
{
};

// Function BendGame.XpecPOISlot.ReportMoveToResult
struct AXpecPOISlot_ReportMoveToResult_Params
{
	TEnumAsByte<EPathFollowingResult>                  eResult;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.OnPlayVOComplete
struct AXpecPOISlot_OnPlayVOComplete_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.OnPlayConversationComplete
struct AXpecPOISlot_OnPlayConversationComplete_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.OnPerformActionFail
struct AXpecPOISlot_OnPerformActionFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.OnPerformActionComplete
struct AXpecPOISlot_OnPerformActionComplete_Params
{
};

// Function BendGame.XpecPOISlot.LeaveSlot
struct AXpecPOISlot_LeaveSlot_Params
{
};

// Function BendGame.XpecPOISlot.ITurnInPlaceByAngle
struct AXpecPOISlot_ITurnInPlaceByAngle_Params
{
	float                                              fAngle;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.ISetDefaultActionGroup
struct AXpecPOISlot_ISetDefaultActionGroup_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.ISetCurrentScenario
struct AXpecPOISlot_ISetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.ISetActionLock
struct AXpecPOISlot_ISetActionLock_Params
{
	bool                                               bLock;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IRotateTo
struct AXpecPOISlot_IRotateTo_Params
{
	struct FXpecRotateToActorData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IPlayVO
struct AXpecPOISlot_IPlayVO_Params
{
	struct FXpecPlayVOData                             Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IPlayConversation
struct AXpecPOISlot_IPlayConversation_Params
{
	struct FXpecPlayConversationData                   Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IPerformAction
struct AXpecPOISlot_IPerformAction_Params
{
	struct FXpecPerformActionData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IOnShowHighLOD
struct AXpecPOISlot_IOnShowHighLOD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IOnPostEditChangeProperty
struct AXpecPOISlot_IOnPostEditChangeProperty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.INextAction
struct AXpecPOISlot_INextAction_Params
{
	TEnumAsByte<EXpecScenarioCommand>                  eAction;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCancelCurrentAction;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IMoveTo
struct AXpecPOISlot_IMoveTo_Params
{
	struct FXpecMoveToActorData                        Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.ILookAt
struct AXpecPOISlot_ILookAt_Params
{
	struct FXpecLookAtData                             Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IIsAllowedToUse
struct AXpecPOISlot_IIsAllowedToUse_Params
{
	class ABendPawn*                                   pActor;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IInitialize
struct AXpecPOISlot_IInitialize_Params
{
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IGetCurrentScenario
struct AXpecPOISlot_IGetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IFinish
struct AXpecPOISlot_IFinish_Params
{
	struct FXpecFinishActionData                       Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IEnableTurnToIdleInMovement
struct AXpecPOISlot_IEnableTurnToIdleInMovement_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IEnableMoveToIdleAnchor
struct AXpecPOISlot_IEnableMoveToIdleAnchor_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IEnableMoveToIdle
struct AXpecPOISlot_IEnableMoveToIdle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IEnableFootLocking
struct AXpecPOISlot_IEnableFootLocking_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.IAlignWith
struct AXpecPOISlot_IAlignWith_Params
{
	struct FXpecRotateToActorData                      Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlot.EnterSlot
struct AXpecPOISlot_EnterSlot_Params
{
	class ABendAIController*                           pController;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.SetEvent
struct AXpecScenarioInstance_SetEvent_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pFromScenario;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.Save
struct AXpecScenarioInstance_Save_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ReportError
struct AXpecScenarioInstance_ReportError_Params
{
	class ABendPawn*                                   pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            eError;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FXpecScenarioData                           Data;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.XpecScenarioInstance.PauseScenarioUpdate
struct AXpecScenarioInstance_PauseScenarioUpdate_Params
{
	bool                                               bShouldPause;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.LogToCommandStack
struct AXpecScenarioInstance_LogToCommandStack_Params
{
	struct FXpecScenarioActorInfo                      actorInfo;                                                // (Parm, OutParm)
};

// Function BendGame.XpecScenarioInstance.IWeatherChanged
struct AXpecScenarioInstance_IWeatherChanged_Params
{
	TEnumAsByte<EWeatherType>                          eOldWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eNewWeather;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IUntrigger
struct AXpecScenarioInstance_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ITrigger
struct AXpecScenarioInstance_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ITimeZoneChanged
struct AXpecScenarioInstance_ITimeZoneChanged_Params
{
	TEnumAsByte<EXpecTimeZone>                         eOldTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eNewTimeZone;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IPreorder
struct AXpecScenarioInstance_IPreorder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecUsePOIResult>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IOnReceiveAnimNotify
struct AXpecScenarioInstance_IOnReceiveAnimNotify_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IOnLeaveSlot
struct AXpecScenarioInstance_IOnLeaveSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IOnEnterSlot
struct AXpecScenarioInstance_IOnEnterSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IOnDebugTriggerPOI
struct AXpecScenarioInstance_IOnDebugTriggerPOI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.Interrupt
struct AXpecScenarioInstance_Interrupt_Params
{
	class ABendPawn*                                   pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRecursive;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IIsForceHighLOD
struct AXpecScenarioInstance_IIsForceHighLOD_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IIsDebugMode
struct AXpecScenarioInstance_IIsDebugMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IIsAllowedToUse
struct AXpecScenarioInstance_IIsAllowedToUse_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IIsAllowedDummyToUse
struct AXpecScenarioInstance_IIsAllowedDummyToUse_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IInitialize
struct AXpecScenarioInstance_IInitialize_Params
{
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecVOManager*                              pVOManager;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eWeather;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetZoneManager
struct AXpecScenarioInstance_IGetZoneManager_Params
{
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetUserType
struct AXpecScenarioInstance_IGetUserType_Params
{
	TEnumAsByte<EXpecPOIUserType>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetUserGender
struct AXpecScenarioInstance_IGetUserGender_Params
{
	TEnumAsByte<EXpecPOIUserGender>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetSlotForUser
struct AXpecScenarioInstance_IGetSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bPreorder;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetScenarioName
struct AXpecScenarioInstance_IGetScenarioName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetPOIName
struct AXpecScenarioInstance_IGetPOIName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetDummySpawnPosition
struct AXpecScenarioInstance_IGetDummySpawnPosition_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraPosition;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     cameraDirection;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fMinDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMaxDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetDummyInfo
struct AXpecScenarioInstance_IGetDummyInfo_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    dummyGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecVOClass>                          eUserVOClass;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                preOrderedSlot;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  loopPosition;                                             // (Parm, OutParm, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                commandIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lowLODAnimGroup;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fTransitionTime;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 m_eWeaponType;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetBestSlotForUser
struct AXpecScenarioInstance_IGetBestSlotForUser_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IGetBestSlotForDummy
struct AXpecScenarioInstance_IGetBestSlotForDummy_Params
{
	struct FName                                       UserPawnName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iBestSlotIndex;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ICanSpawnDummy
struct AXpecScenarioInstance_ICanSpawnDummy_Params
{
	struct FName                                       dummyPawnName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ICancelOrder
struct AXpecScenarioInstance_ICancelOrder_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.ICalculatePriority
struct AXpecScenarioInstance_ICalculatePriority_Params
{
	class ABendPawn*                                   pUser;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pBestSlot;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.IAddDedicatedUser
struct AXpecScenarioInstance_IAddDedicatedUser_Params
{
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.GetTimerRemainingTime
struct AXpecScenarioInstance_GetTimerRemainingTime_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.GetResult
struct AXpecScenarioInstance_GetResult_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.GetActorSlot
struct AXpecScenarioInstance_GetActorSlot_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.GetActorCommandStack
struct AXpecScenarioInstance_GetActorCommandStack_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecScenarioInstance.GetActor
struct AXpecScenarioInstance_GetActor_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.DebugPrintInfo
struct AXpecScenarioInstance_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecScenarioInstance.ClearEvent
struct AXpecScenarioInstance_ClearEvent_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pFromScenario;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.BindReference
struct AXpecScenarioInstance_BindReference_Params
{
	struct FName                                       referenceName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pReference;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenarioInstance.BindComponentReference
struct AXpecScenarioInstance_BindComponentReference_Params
{
	struct FName                                       referenceName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             pCompReference;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPOIDebugComponent.Clear
struct UBendPOIDebugComponent_Clear_Params
{
};

// Function BendGame.BendPOIDebugComponent.AddDrawTarget
struct UBendPOIDebugComponent_AddDrawTarget_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	unsigned char                                      DepthPriorityGroup;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnLoopFail
struct ABendPOIAnimSlot_OnLoopFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnLoopComplete
struct ABendPOIAnimSlot_OnLoopComplete_Params
{
};

// Function BendGame.BendPOIAnimSlot.OnLoopActionLooping
struct ABendPOIAnimSlot_OnLoopActionLooping_Params
{
	float                                              TimeRemaining;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnLoopActionFail
struct ABendPOIAnimSlot_OnLoopActionFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnLoopActionComplete
struct ABendPOIAnimSlot_OnLoopActionComplete_Params
{
};

// Function BendGame.BendPOIAnimSlot.OnExitFail
struct ABendPOIAnimSlot_OnExitFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnExitComplete
struct ABendPOIAnimSlot_OnExitComplete_Params
{
};

// Function BendGame.BendPOIAnimSlot.OnExitActionFail
struct ABendPOIAnimSlot_OnExitActionFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnExitActionComplete
struct ABendPOIAnimSlot_OnExitActionComplete_Params
{
};

// Function BendGame.BendPOIAnimSlot.OnEnterFail
struct ABendPOIAnimSlot_OnEnterFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnEnterComplete
struct ABendPOIAnimSlot_OnEnterComplete_Params
{
};

// Function BendGame.BendPOIAnimSlot.OnEnterActionFail
struct ABendPOIAnimSlot_OnEnterActionFail_Params
{
	TEnumAsByte<EPeformActionFailedReason>             eReason;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIAnimSlot.OnEnterActionComplete
struct ABendPOIAnimSlot_OnEnterActionComplete_Params
{
};

// Function BendGame.BendPOIGoreSlot.OnUserTargetChanged
struct ABendPOIGoreSlot_OnUserTargetChanged_Params
{
	class ABendAIController*                           OwnerController;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   PreviousTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   NewTarget;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPOIGoreSlot.OnUserTakeDamage
struct ABendPOIGoreSlot_OnUserTakeDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.UpdateParticlePrecipitation
struct ABendPrecipitationManager_UpdateParticlePrecipitation_Params
{
	class UParticleSystemComponent*                    ParticleComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	struct FVector                                     Wind;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.UpdateComponentActivation
struct ABendPrecipitationManager_UpdateComponentActivation_Params
{
	class USceneComponent*                             Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ShouldBeActive;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SlowTick
struct ABendPrecipitationManager_SlowTick_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetWetness
struct ABendPrecipitationManager_SetWetness_Params
{
	float                                              InWetness;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetWaterAccumulation
struct ABendPrecipitationManager_SetWaterAccumulation_Params
{
	float                                              Accumulation;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetSnowAccumulation
struct ABendPrecipitationManager_SetSnowAccumulation_Params
{
	float                                              Accumulation;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetPause
struct ABendPrecipitationManager_SetPause_Params
{
	bool                                               InPause;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetGroundSetting
struct ABendPrecipitationManager_SetGroundSetting_Params
{
	float                                              Wetness;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              WaterAccumulation;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SnowAccumulation;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.SetCloudTime
struct ABendPrecipitationManager_SetCloudTime_Params
{
	float                                              inMinutes;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.ResetWeatherAccumulationAndParticles
struct ABendPrecipitationManager_ResetWeatherAccumulationAndParticles_Params
{
};

// Function BendGame.BendPrecipitationManager.ResetWeatherAccumulation
struct ABendPrecipitationManager_ResetWeatherAccumulation_Params
{
};

// Function BendGame.BendPrecipitationManager.ReceiveBendEditorTick
struct ABendPrecipitationManager_ReceiveBendEditorTick_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.PerFrameCameraUpdate
struct ABendPrecipitationManager_PerFrameCameraUpdate_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDebug;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.GetWetness
struct ABendPrecipitationManager_GetWetness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.GetWaterAccumulation
struct ABendPrecipitationManager_GetWaterAccumulation_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.GetSnowAccumulation
struct ABendPrecipitationManager_GetSnowAccumulation_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.GetPrecipitationManagerFromContext
struct ABendPrecipitationManager_GetPrecipitationManagerFromContext_Params
{
	class UObject*                                     WorldContext;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPrecipitationManager*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.GetPrecipitationManager
struct ABendPrecipitationManager_GetPrecipitationManager_Params
{
	class ABendPrecipitationManager*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPrecipitationManager.AdvanceCloudTimeMinutes
struct ABendPrecipitationManager_AdvanceCloudTimeMinutes_Params
{
	float                                              inMinutes;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPRI.SetCurrentPawn
struct ABendPRI_SetCurrentPawn_Params
{
	class ABendPlayerPawn*                             PlayerPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendProjectile.WasFiredWhileInScopeMode
struct ABendProjectile_WasFiredWhileInScopeMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.WasFiredWhileInFocusMode
struct ABendProjectile_WasFiredWhileInFocusMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.OnTriggerEndOverlap
struct ABendProjectile_OnTriggerEndOverlap_Params
{
};

// Function BendGame.BendProjectile.OnTriggerBeginOverlap
struct ABendProjectile_OnTriggerBeginOverlap_Params
{
};

// Function BendGame.BendProjectile.OnImpact
struct ABendProjectile_OnImpact_Params
{
	struct FHitResult                                  HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendProjectile.OnExploded
struct ABendProjectile_OnExploded_Params
{
};

// Function BendGame.BendProjectile.OnEnteredWater
struct ABendProjectile_OnEnteredWater_Params
{
};

// Function BendGame.BendProjectile.OnBounce
struct ABendProjectile_OnBounce_Params
{
	struct FHitResult                                  HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ImpactVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.IsProjectileInEncampment
struct ABendProjectile_IsProjectileInEncampment_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetWeaponThatFiredIt
struct ABendProjectile_GetWeaponThatFiredIt_Params
{
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetMinExplosionRadius
struct ABendProjectile_GetMinExplosionRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetMaxExplosionRadius
struct ABendProjectile_GetMaxExplosionRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetImpactSoundLoudness
struct ABendProjectile_GetImpactSoundLoudness_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetExplosionDamageType
struct ABendProjectile_GetExplosionDamageType_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetDamageType
struct ABendProjectile_GetDamageType_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetCurrentPenetrationValue
struct ABendProjectile_GetCurrentPenetrationValue_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetCanTriggerBearTraps
struct ABendProjectile_GetCanTriggerBearTraps_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetCanIgniteNests
struct ABendProjectile_GetCanIgniteNests_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.GetCanExplodeExplosives
struct ABendProjectile_GetCanExplodeExplosives_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendProjectile.ForceImpact
struct ABendProjectile_ForceImpact_Params
{
	class AActor*                                      impactedActor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendProjectile.ForceExplode
struct ABendProjectile_ForceExplode_Params
{
};

// Function BendGame.BendProjectile.ForceChangeProjectilePenetrationValue
struct ABendProjectile_ForceChangeProjectilePenetrationValue_Params
{
	int                                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendProjectile.Explode
struct ABendProjectile_Explode_Params
{
	struct FHitResult                                  Impact;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendProjectile.DisableProjectile
struct ABendProjectile_DisableProjectile_Params
{
	bool                                               Disable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendProjectile.CheckDLCRingEffectsOnProjectile
struct ABendProjectile_CheckDLCRingEffectsOnProjectile_Params
{
};

// Function BendGame.BendPropLightRigBase.UpdateTimeOfDay
struct ABendPropLightRigBase_UpdateTimeOfDay_Params
{
	float                                              NewTimeOfDayAdjustment;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.UpdateLightList
struct ABendPropLightRigBase_UpdateLightList_Params
{
};

// Function BendGame.BendPropLightRigBase.UpdateLightCardLocation
struct ABendPropLightRigBase_UpdateLightCardLocation_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        lightCard;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         SpotLight;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.UpdateFlickering
struct ABendPropLightRigBase_UpdateFlickering_Params
{
	float                                              CurveValue;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.TurnOnPostCinematicEvent
struct ABendPropLightRigBase_TurnOnPostCinematicEvent_Params
{
	struct FName                                       CinematicName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.TurnOnLights
struct ABendPropLightRigBase_TurnOnLights_Params
{
};

// Function BendGame.BendPropLightRigBase.TurnOffPreCinematicEvent
struct ABendPropLightRigBase_TurnOffPreCinematicEvent_Params
{
	struct FName                                       CinematicName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.TurnOffLights
struct ABendPropLightRigBase_TurnOffLights_Params
{
};

// Function BendGame.BendPropLightRigBase.IsFlickeringLightRig
struct ABendPropLightRigBase_IsFlickeringLightRig_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetVoxelLightIntensity
struct ABendPropLightRigBase_GetVoxelLightIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetVoxelFlickerIntensity
struct ABendPropLightRigBase_GetVoxelFlickerIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetVolumeConeIntensity
struct ABendPropLightRigBase_GetVolumeConeIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetLightTemperature
struct ABendPropLightRigBase_GetLightTemperature_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetLightPostGlowIntensity
struct ABendPropLightRigBase_GetLightPostGlowIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetLightIntensity
struct ABendPropLightRigBase_GetLightIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetLightCardColor
struct ABendPropLightRigBase_GetLightCardColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetFlickerIntensity
struct ABendPropLightRigBase_GetFlickerIntensity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.GetEmissive
struct ABendPropLightRigBase_GetEmissive_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropLightRigBase.CheckWorldPowerSettings
struct ABendPropLightRigBase_CheckWorldPowerSettings_Params
{
};

// Function BendGame.BendPropLightRigBase.CheckForUtilitiesUpdate
struct ABendPropLightRigBase_CheckForUtilitiesUpdate_Params
{
};

// Function BendGame.BendPropRigTicker.UpdateTimeOfDayLights
struct UBendPropRigTicker_UpdateTimeOfDayLights_Params
{
	int                                                StartIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumRigsUpdate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.UpdateFlickeringLights
struct UBendPropRigTicker_UpdateFlickeringLights_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StartIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumRigsUpdate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.UpdateAllRigsTOD
struct UBendPropRigTicker_UpdateAllRigsTOD_Params
{
};

// Function BendGame.BendPropRigTicker.SetForceLightsOn
struct UBendPropRigTicker_SetForceLightsOn_Params
{
	bool                                               newStatus;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.RemoveFlickeringLightReference
struct UBendPropRigTicker_RemoveFlickeringLightReference_Params
{
	class ABendPropLightRigBase*                       PropRigRef;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.OnHourChanged
struct UBendPropRigTicker_OnHourChanged_Params
{
	int                                                Hour;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.GetCurrentTODAdjustment
struct UBendPropRigTicker_GetCurrentTODAdjustment_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.GetBendPropRigTicker
struct UBendPropRigTicker_GetBendPropRigTicker_Params
{
	class UBendPropRigTicker*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendPropRigTicker.CheckWorldState
struct UBendPropRigTicker_CheckWorldState_Params
{
};

// Function BendGame.BendPropRigTicker.AddLightRigReference
struct UBendPropRigTicker_AddLightRigReference_Params
{
	class ABendPropLightRigBase*                       PropRigRef;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRegionActor.GetCompletionPercentage
struct ABendRegionActor_GetCompletionPercentage_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRegionActor.ActorLeavingVolume
struct ABendRegionActor_ActorLeavingVolume_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRegionActor.ActorEnteredVolume
struct ABendRegionActor_ActorEnteredVolume_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRespawnLoc.OnTriggerEndOverlap
struct ABendRespawnLoc_OnTriggerEndOverlap_Params
{
};

// Function BendGame.BendRespawnLoc.HasVehicleRespawnLoc
struct ABendRespawnLoc_HasVehicleRespawnLoc_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRespawnLoc.GetVehicleRespawnLoc
struct ABendRespawnLoc_GetVehicleRespawnLoc_Params
{
	class ABendVehicleRespawnLoc*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRespawnLoc2.SetLocActive
struct ABendRespawnLoc2_SetLocActive_Params
{
	bool                                               bActive;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRespawnLoc2.OnEnterLocation
struct ABendRespawnLoc2_OnEnterLocation_Params
{
};

// Function BendGame.BendRespawnLoc2.HasVehicleRespawnLoc
struct ABendRespawnLoc2_HasVehicleRespawnLoc_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.UnReserveSeat
struct UBendRideVehicleComponent_UnReserveSeat_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SwitchSeat
struct UBendRideVehicleComponent_SwitchSeat_Params
{
	struct FName                                       InSeatName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.ShouldFallOffVehicle
struct UBendRideVehicleComponent_ShouldFallOffVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.ShouldConsumeFuel
struct UBendRideVehicleComponent_ShouldConsumeFuel_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetRamFalloffSettings
struct UBendRideVehicleComponent_SetRamFalloffSettings_Params
{
	struct FMotoRamFalloffInfo                         Settings;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendRideVehicleComponent.SetFallOffImpulseThreshold
struct UBendRideVehicleComponent_SetFallOffImpulseThreshold_Params
{
	float                                              impulseThreshold;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetFallOffAngleThreshold
struct UBendRideVehicleComponent_SetFallOffAngleThreshold_Params
{
	float                                              angleThreshold;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetEarlyExitVehiclePickup
struct UBendRideVehicleComponent_SetEarlyExitVehiclePickup_Params
{
	bool                                               bEarlyExit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetDrivingSkillLevel
struct UBendRideVehicleComponent_SetDrivingSkillLevel_Params
{
	int                                                DrivingSkillLevel;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetConsumeFuelIfDriver
struct UBendRideVehicleComponent_SetConsumeFuelIfDriver_Params
{
	bool                                               bConsumeFuel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetCanFallOffVehicle
struct UBendRideVehicleComponent_SetCanFallOffVehicle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.SetCanExitVehicle
struct UBendRideVehicleComponent_SetCanExitVehicle_Params
{
	bool                                               bCanExit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.ReserveSeat
struct UBendRideVehicleComponent_ReserveSeat_Params
{
	class AVehiclePawn*                                InVehiclePawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSeatName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSetUpEntryAnchor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.OnRep_VehiclePawn
struct UBendRideVehicleComponent_OnRep_VehiclePawn_Params
{
};

// Function BendGame.BendRideVehicleComponent.OnFinishedExitingSeat_Deprecated
struct UBendRideVehicleComponent_OnFinishedExitingSeat_Deprecated_Params
{
};

// Function BendGame.BendRideVehicleComponent.OnFinishedEnteringSeat_Deprecated
struct UBendRideVehicleComponent_OnFinishedEnteringSeat_Deprecated_Params
{
};

// Function BendGame.BendRideVehicleComponent.OnAnimNotifyVehiclePickupEarlyExit
struct UBendRideVehicleComponent_OnAnimNotifyVehiclePickupEarlyExit_Params
{
	bool                                               bEarlyExit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.IsOccupyingOrTryingToOccupyDriverSeat
struct UBendRideVehicleComponent_IsOccupyingOrTryingToOccupyDriverSeat_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.IsInVehicle
struct UBendRideVehicleComponent_IsInVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.IsDriver
struct UBendRideVehicleComponent_IsDriver_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVisualSteeringNeg1To1
struct UBendRideVehicleComponent_GetVisualSteeringNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVehicleSocketTransform
struct UBendRideVehicleComponent_GetVehicleSocketTransform_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVehicleSkeletalMeshComponent
struct UBendRideVehicleComponent_GetVehicleSkeletalMeshComponent_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVehicleSeatsComponent
struct UBendRideVehicleComponent_GetVehicleSeatsComponent_Params
{
	class UBendVehicleSeatsComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVehicleMovementComponent
struct UBendRideVehicleComponent_GetVehicleMovementComponent_Params
{
	class UBendMovementComp_VehicleNoDrive*            ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetVehicleForwardSpeed
struct UBendRideVehicleComponent_GetVehicleForwardSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetTargetGear
struct UBendRideVehicleComponent_GetTargetGear_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetSteeringNeg1To1
struct UBendRideVehicleComponent_GetSteeringNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetRiderState
struct UBendRideVehicleComponent_GetRiderState_Params
{
	TEnumAsByte<EVehicleRiderState>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetReservedVehicle
struct UBendRideVehicleComponent_GetReservedVehicle_Params
{
	class AVehiclePawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetRamFalloffSettings
struct UBendRideVehicleComponent_GetRamFalloffSettings_Params
{
	struct FMotoRamFalloffInfo                         ReturnValue;                                              // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
};

// Function BendGame.BendRideVehicleComponent.GetLeanAngleNeg1To1
struct UBendRideVehicleComponent_GetLeanAngleNeg1To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetLeanAngle
struct UBendRideVehicleComponent_GetLeanAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetDrivingSkillLevel
struct UBendRideVehicleComponent_GetDrivingSkillLevel_Params
{
	TEnumAsByte<EBendVehicleRoadSurfaceType>           RoadSurfaceType;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetCurrentGear
struct UBendRideVehicleComponent_GetCurrentGear_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetCanFallOffVehicle
struct UBendRideVehicleComponent_GetCanFallOffVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.GetCanExitVehicle
struct UBendRideVehicleComponent_GetCanExitVehicle_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.ExitVehicleWithAnim_Deprecated
struct UBendRideVehicleComponent_ExitVehicleWithAnim_Deprecated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRideVehicleComponent.EnterVehicleWithAnim_Deprecated
struct UBendRideVehicleComponent_EnterVehicleWithAnim_Deprecated_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRoadSplineManager.UpdateAStarBlockStatus
struct ABendRoadSplineManager_UpdateAStarBlockStatus_Params
{
};

// Function BendGame.BendRoadSplineManager.GetBendSplineBlocker
struct ABendRoadSplineManager_GetBendSplineBlocker_Params
{
	struct FString                                     IDName;                                                   // (Parm, ZeroConstructor)
	class ABendSplineBlocker*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendRoadSplineManager.GetBendRoadSplineManager
struct ABendRoadSplineManager_GetBendRoadSplineManager_Params
{
	class ABendRoadSplineManager*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.StepProfileMenuEntry
struct UBendSavePlayerProfile_StepProfileMenuEntry_Params
{
	struct FPlayerSaveProfileMenuEntry                 Entry;                                                    // (Parm, OutParm, ReferenceParm)
	int                                                Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.SetProfileMenuEntry
struct UBendSavePlayerProfile_SetProfileMenuEntry_Params
{
	TEnumAsByte<EPlayerSaveProfileType>                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPlayerSaveProfileMenuEntry                 OutEntry;                                                 // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.SetDirty
struct UBendSavePlayerProfile_SetDirty_Params
{
};

// Function BendGame.BendSavePlayerProfile.SetDifficulty
struct UBendSavePlayerProfile_SetDifficulty_Params
{
	TEnumAsByte<EGameDifficulty>                       Difficulty;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.SetBeatenGameOnHardMode
struct UBendSavePlayerProfile_SetBeatenGameOnHardMode_Params
{
};

// Function BendGame.BendSavePlayerProfile.SaveProfile
struct UBendSavePlayerProfile_SaveProfile_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.RequestProfileSave
struct UBendSavePlayerProfile_RequestProfileSave_Params
{
};

// Function BendGame.BendSavePlayerProfile.RemoveTipFromQueue
struct UBendSavePlayerProfile_RemoveTipFromQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.RemoveDLCTipFromQueue
struct UBendSavePlayerProfile_RemoveDLCTipFromQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.IsValid
struct UBendSavePlayerProfile_IsValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.IsControllerVibrationEnabled
struct UBendSavePlayerProfile_IsControllerVibrationEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetProfileEntryBP
struct UBendSavePlayerProfile_GetProfileEntryBP_Params
{
	TEnumAsByte<EPlayerSaveProfileType>                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPlayerSaveProfileEntry                     ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendSavePlayerProfile.GetProfileEntryAsInt
struct UBendSavePlayerProfile_GetProfileEntryAsInt_Params
{
	TEnumAsByte<EPlayerSaveProfileType>                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetProfileEntryAsFloat
struct UBendSavePlayerProfile_GetProfileEntryAsFloat_Params
{
	TEnumAsByte<EPlayerSaveProfileType>                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetProfileEntryAsBool
struct UBendSavePlayerProfile_GetProfileEntryAsBool_Params
{
	TEnumAsByte<EPlayerSaveProfileType>                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetProfileDatabase
struct UBendSavePlayerProfile_GetProfileDatabase_Params
{
	class UBendGameplayDatabase*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetPlayerSaveProfile
struct UBendSavePlayerProfile_GetPlayerSaveProfile_Params
{
	class UBendSavePlayerProfile*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.GetLastBikeTheme
struct UBendSavePlayerProfile_GetLastBikeTheme_Params
{
	struct FGameplayTag                                Paint;                                                    // (Parm, OutParm)
	struct FGameplayTag                                Body;                                                     // (Parm, OutParm)
	struct FGameplayTag                                Tank;                                                     // (Parm, OutParm)
};

// Function BendGame.BendSavePlayerProfile.GetLastBikeParts
struct UBendSavePlayerProfile_GetLastBikeParts_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSavePlayerProfile.GetDifficulty
struct UBendSavePlayerProfile_GetDifficulty_Params
{
	TEnumAsByte<EGameDifficulty>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ExecuteProfileSave
struct UBendSavePlayerProfile_ExecuteProfileSave_Params
{
};

// Function BendGame.BendSavePlayerProfile.ClearAllTips
struct UBendSavePlayerProfile_ClearAllTips_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ClearAllDLCTips
struct UBendSavePlayerProfile_ClearAllDLCTips_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ApplyProfileMenuEntryDefaults
struct UBendSavePlayerProfile_ApplyProfileMenuEntryDefaults_Params
{
	struct FPlayerSaveProfileMenuEntry                 Entry;                                                    // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ApplyProfileMenuEntry
struct UBendSavePlayerProfile_ApplyProfileMenuEntry_Params
{
	struct FPlayerSaveProfileMenuEntry                 Entry;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ApplyProfile
struct UBendSavePlayerProfile_ApplyProfile_Params
{
	TEnumAsByte<EProfileOption>                        Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.ApplyControllerProfile
struct UBendSavePlayerProfile_ApplyControllerProfile_Params
{
	class APlayerController*                           PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.AddTipToQueue
struct UBendSavePlayerProfile_AddTipToQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSavePlayerProfile.AddDLCTipToQueue
struct UBendSavePlayerProfile_AddDLCTipToQueue_Params
{
	struct FName                                       LoadingTipRowName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.TerminateDynamicConversationGroup
struct ABendScriptedEncounter_TerminateDynamicConversationGroup_Params
{
};

// Function BendGame.BendScriptedEncounter.StartEncounter
struct ABendScriptedEncounter_StartEncounter_Params
{
};

// Function BendGame.BendScriptedEncounter.StartDynamicConversationGroup
struct ABendScriptedEncounter_StartDynamicConversationGroup_Params
{
};

// Function BendGame.BendScriptedEncounter.SetNPCVisibility
struct ABendScriptedEncounter_SetNPCVisibility_Params
{
	class UBendScriptedEncounterUserController*        UserController;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bNewVisibility;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.SetExtractionGroup
struct ABendScriptedEncounter_SetExtractionGroup_Params
{
	class UBendExtractionGroup*                        ExtractionGroup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.SetAllNPCsVisibility
struct ABendScriptedEncounter_SetAllNPCsVisibility_Params
{
	bool                                               bNewVisibility;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.RequestSpawnAndTeleport
struct ABendScriptedEncounter_RequestSpawnAndTeleport_Params
{
	class ABendScriptedEncounterSpawn*                 Spawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      TeleportTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.RequestSpawn
struct ABendScriptedEncounter_RequestSpawn_Params
{
	class ABendScriptedEncounterSpawn*                 Spawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnUserKilled
struct ABendScriptedEncounter_OnUserKilled_Params
{
	class UBendScriptedEncounterUserController*        Controller;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnUserBecomeUnawareInternal
struct ABendScriptedEncounter_OnUserBecomeUnawareInternal_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnUserBecomeSemiAwareInternal
struct ABendScriptedEncounter_OnUserBecomeSemiAwareInternal_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnUserBecomeAwareInternal
struct ABendScriptedEncounter_OnUserBecomeAwareInternal_Params
{
	class ABendAIController*                           AIController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnUserAwarenessChanged
struct ABendScriptedEncounter_OnUserAwarenessChanged_Params
{
	int                                                SpawnIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendScriptedEncounterUserController*        Controller;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         Awareness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnSpawnedInternal
struct ABendScriptedEncounter_OnSpawnedInternal_Params
{
	class ABendAIController*                           Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      spawnLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnSpawned
struct ABendScriptedEncounter_OnSpawned_Params
{
	class ABendScriptedEncounterSpawn*                 Spawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SpawnIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendScriptedEncounterUserController*        Controller;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnKilledInternal
struct ABendScriptedEncounter_OnKilledInternal_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSpawnLocationBase*                      spawnLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.OnGlobalAwarenessChanged
struct ABendScriptedEncounter_OnGlobalAwarenessChanged_Params
{
	TEnumAsByte<EAIAwareState>                         NewAwareness;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.EndEncounter
struct ABendScriptedEncounter_EndEncounter_Params
{
};

// Function BendGame.BendScriptedEncounter.DespawnUser
struct ABendScriptedEncounter_DespawnUser_Params
{
	class UBendScriptedEncounterUserController*        UserController;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounter.DespawnAllUsers
struct ABendScriptedEncounter_DespawnAllUsers_Params
{
};

// Function BendGame.BendScriptedEncounterUserController.OnStopped
struct UBendScriptedEncounterUserController_OnStopped_Params
{
	class ABendPOI*                                    CompletedPOI;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           BendAIController;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounterUserController.OnLeavesPOI
struct UBendScriptedEncounterUserController_OnLeavesPOI_Params
{
	class ABendPOI*                                    CompletedPOI;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           BendAIController;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendScriptedEncounterUserController.IsPawnAlive
struct UBendScriptedEncounterUserController_IsPawnAlive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.UpdateCorpseEntryMesh
struct ABendSectorDataManager_UpdateCorpseEntryMesh_Params
{
	class ABendSearchBody*                             SearchBody;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               ReplacementSkeletalMesh;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.SetCorpseEntryHiddenInGame
struct ABendSectorDataManager_SetCorpseEntryHiddenInGame_Params
{
	class ABendSearchBody*                             SearchBody;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Hidden;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.RemoveTrap
struct ABendSectorDataManager_RemoveTrap_Params
{
	class ABendTrap*                                   Trap;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.RemoveCorpsesInArea
struct ABendSectorDataManager_RemoveCorpsesInArea_Params
{
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeUnloadedSectors;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.RemoveBolt
struct ABendSectorDataManager_RemoveBolt_Params
{
	class ABendInventoryPickup*                        Bolt;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.HasPendingCorpses
struct ABendSectorDataManager_HasPendingCorpses_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSectorDataManager.AddBolt
struct ABendSectorDataManager_AddBolt_Params
{
	class ABendInventoryPickup*                        Bolt;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSmoothSwapParticleSystemComponent.SetWorldTransform
struct UBendSmoothSwapParticleSystemComponent_SetWorldTransform_Params
{
	struct FTransform                                  NewTransform;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSmoothSwapParticleSystemComponent.SetVectorParameter
struct UBendSmoothSwapParticleSystemComponent_SetVectorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Param;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BendSmoothSwapParticleSystemComponent.SetTemplate
struct UBendSmoothSwapParticleSystemComponent_SetTemplate_Params
{
	class UParticleSystem*                             NewTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSmoothSwapParticleSystemComponent.SetFloatParameter
struct UBendSmoothSwapParticleSystemComponent_SetFloatParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshComponent.SuppressAnchorDriven
struct UBendSkeletalMeshComponent_SuppressAnchorDriven_Params
{
	bool                                               bSuppress;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshComponent.PlaySurfaceImpactFX
struct UBendSkeletalMeshComponent_PlaySurfaceImpactFX_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkeletalMeshComponent.GetIKManager
struct UBendSkeletalMeshComponent_GetIKManager_Params
{
	class UBendAnimIKManager*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterSkeletalMeshComponent.SetRagdoll
struct UBendCharacterSkeletalMeshComponent_SetRagdoll_Params
{
	bool                                               bSet;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterSkeletalMeshComponent.ResetBodiesPostRagdoll
struct UBendCharacterSkeletalMeshComponent_ResetBodiesPostRagdoll_Params
{
};

// Function BendGame.BendCharacterSkeletalMeshComponent.PrepareBodiesForExitVehicleRagdoll
struct UBendCharacterSkeletalMeshComponent_PrepareBodiesForExitVehicleRagdoll_Params
{
};

// Function BendGame.BendCharacterSkeletalMeshComponent.OnHitCallback
struct UBendCharacterSkeletalMeshComponent_OnHitCallback_Params
{
	class AActor*                                      SelfActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.BendCharacterSkeletalMeshComponent.IsInRagdoll
struct UBendCharacterSkeletalMeshComponent_IsInRagdoll_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendCharacterSkeletalMeshComponent.FreezeRagdoll
struct UBendCharacterSkeletalMeshComponent_FreezeRagdoll_Params
{
	bool                                               bFreeze;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSky.TickFrequency
struct ABendSky_TickFrequency_Params
{
	float                                              InTickRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSky.ResetWorldLightDirections
struct ABendSky_ResetWorldLightDirections_Params
{
};

// Function BendGame.BendSky.OffsetWorldLightDirections
struct ABendSky_OffsetWorldLightDirections_Params
{
};

// Function BendGame.BendSky.ManageWorldLightingOffsets
struct ABendSky_ManageWorldLightingOffsets_Params
{
};

// Function BendGame.BendSky.GetWorldLights
struct ABendSky_GetWorldLights_Params
{
	TArray<class ULightComponent*>                     ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSky.EnableCustomSky
struct ABendSky_EnableCustomSky_Params
{
	class UMaterialInstance*                           CustomSkyMaterial;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSky.DisableCustomSky
struct ABendSky_DisableCustomSky_Params
{
};

// Function BendGame.BendSkyProfileManager.UpdateProfileTimer
struct ABendSkyProfileManager_UpdateProfileTimer_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSkyProfileManager.UpdateManagerValues
struct ABendSkyProfileManager_UpdateManagerValues_Params
{
};

// Function BendGame.BendSkyProfileManager.UpdateManager
struct ABendSkyProfileManager_UpdateManager_Params
{
};

// Function BendGame.BendSkyProfileManager.SetTextLabel
struct ABendSkyProfileManager_SetTextLabel_Params
{
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkyProfileManager.SetProfileValues
struct ABendSkyProfileManager_SetProfileValues_Params
{
};

// Function BendGame.BendSkyProfileManager.ResetManager
struct ABendSkyProfileManager_ResetManager_Params
{
};

// Function BendGame.BendSkyProfileManager.PickNewMissionProfile
struct ABendSkyProfileManager_PickNewMissionProfile_Params
{
};

// Function BendGame.BendSkyProfileManager.PickNewAmbientProfile
struct ABendSkyProfileManager_PickNewAmbientProfile_Params
{
};

// Function BendGame.BendSkyProfileManager.FindAvailableProfiles
struct ABendSkyProfileManager_FindAvailableProfiles_Params
{
	TArray<class ABendDefaultSkyProfile*>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSkyProfileManager.DetermineActiveProfile
struct ABendSkyProfileManager_DetermineActiveProfile_Params
{
};

// Function BendGame.BendSkyProfileManager.DebugPrints
struct ABendSkyProfileManager_DebugPrints_Params
{
	float                                              TextTimeOnScreen;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSkyProfileManager.AllowedTickConditions
struct ABendSkyProfileManager_AllowedTickConditions_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.UpdateTypePercentages
struct ABendAmbientSpawnBox_UpdateTypePercentages_Params
{
};

// Function BendGame.BendAmbientSpawnBox.UpdateSpawnTypes
struct ABendAmbientSpawnBox_UpdateSpawnTypes_Params
{
	bool                                               resetDesiredSpawns;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.SetMaxSpawns
struct ABendAmbientSpawnBox_SetMaxSpawns_Params
{
	int                                                MaxSpawns;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               resetDesiredSpawns;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.SetForceSpawnTypes
struct ABendAmbientSpawnBox_SetForceSpawnTypes_Params
{
	TArray<struct FBendAmbientSpawnType>               newTypes;                                                 // (Parm, ZeroConstructor)
};

// Function BendGame.BendAmbientSpawnBox.ResetSpawnCount
struct ABendAmbientSpawnBox_ResetSpawnCount_Params
{
	bool                                               resetToKilled;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.ResetKillCount
struct ABendAmbientSpawnBox_ResetKillCount_Params
{
};

// Function BendGame.BendAmbientSpawnBox.OnFinishedSpawnOnVehicleSeat
struct ABendAmbientSpawnBox_OnFinishedSpawnOnVehicleSeat_Params
{
	class ABendAIController*                           SpawnedController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   SpawnedPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                SpawnedVehiclePawn;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.GetSpawnCount
struct ABendAmbientSpawnBox_GetSpawnCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.GetKillCount
struct ABendAmbientSpawnBox_GetKillCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAmbientSpawnBox.GetActiveCount
struct ABendAmbientSpawnBox_GetActiveCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestSpawnLocation.GetRemainingNestSlots
struct ABendNestSpawnLocation_GetRemainingNestSlots_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendNestSpawnLocation.GetCurrentNestingCount
struct ABendNestSpawnLocation_GetCurrentNestingCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendLootNewtSpawnLocation.OnWeaponAdded
struct ABendLootNewtSpawnLocation_OnWeaponAdded_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecBase.IOnPostEditChangeProperty
struct AXpecBase_IOnPostEditChangeProperty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecActionPool.Initialize
struct AXpecActionPool_Initialize_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecActionPool.AddDefaultAnimSequence
struct AXpecActionPool_AddDefaultAnimSequence_Params
{
	struct FXpecAnimSequenceData                       Sequence;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.XpecZoneManager.UsePOI
struct AXpecZoneManager_UsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iInterruptLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecUsePOIResult>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.StartContentionGroupCoolDown
struct AXpecZoneManager_StartContentionGroupCoolDown_Params
{
	class ABendPOI*                                    pTargetPOI;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.SetupEvents
struct AXpecZoneManager_SetupEvents_Params
{
	TArray<struct FXpecEventDesc>                      outputEvents;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.SetNeedValue
struct AXpecZoneManager_SetNeedValue_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.SetContentionGroupIsUsing
struct AXpecZoneManager_SetContentionGroupIsUsing_Params
{
	class ABendPOI*                                    pRequestedPOI;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsUsing;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.RequestSwitchLODLevel
struct AXpecZoneManager_RequestSwitchLODLevel_Params
{
	class ABendPOI*                                    pRequestedPOI;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RequestedPawnName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPawnLODLevel>                     eNewLevel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.OnZoneDeactivate
struct AXpecZoneManager_OnZoneDeactivate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.OnZoneActivate
struct AXpecZoneManager_OnZoneActivate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.OnWeatherChanged
struct AXpecZoneManager_OnWeatherChanged_Params
{
	TEnumAsByte<EWeatherType>                          ePreviousWeather;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeatherType>                          eCurrentWeather;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.OnTimeZoneChanged
struct AXpecZoneManager_OnTimeZoneChanged_Params
{
	TEnumAsByte<EXpecTimeZone>                         ePreviousTimeZone;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         eCurrentTimeZone;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.OnAIAwarenessChanged
struct AXpecZoneManager_OnAIAwarenessChanged_Params
{
	TEnumAsByte<EAIAwareState>                         currentAwareness;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIAwareState>                         PreviousAwareness;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.LoadFavoredPOIInfos
struct AXpecZoneManager_LoadFavoredPOIInfos_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.InitNeed
struct AXpecZoneManager_InitNeed_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              FMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 pWeightTbl;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.GetPOIs
struct AXpecZoneManager_GetPOIs_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eType;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eGender;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPOI*>                            POIs;                                                     // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.GetPawns
struct AXpecZoneManager_GetPawns_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eType;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eGender;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           pawns;                                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.GetNearbyWaypointsFromMigrationPath
struct AXpecZoneManager_GetNearbyWaypointsFromMigrationPath_Params
{
	struct FVector                                     loc;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTransform>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecZoneManager.FindPOI
struct AXpecZoneManager_FindPOI_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.FindPawnUsePOI
struct AXpecZoneManager_FindPawnUsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pDesignatePawn;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pUserPawn;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecUsePOIResult>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.FindPawn
struct AXpecZoneManager_FindPawn_Params
{
	struct FName                                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.DebugPrintInfo
struct AXpecZoneManager_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecZoneManager.CheckIsLockedInContentionGroup
struct AXpecZoneManager_CheckIsLockedInContentionGroup_Params
{
	class ABendPOI*                                    pRequestedPOI;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.CheckContentionGroupIsUsing
struct AXpecZoneManager_CheckContentionGroupIsUsing_Params
{
	class ABendPOI*                                    pRequestedPOI;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.CheckContentionGroupIsInCoolDown
struct AXpecZoneManager_CheckContentionGroupIsInCoolDown_Params
{
	class ABendPOI*                                    pRequestedPOI;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.BroadcastEvent
struct AXpecZoneManager_BroadcastEvent_Params
{
	class ABendPOI*                                    pSourcePOI;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.ApplyRewardCost
struct AXpecZoneManager_ApplyRewardCost_Params
{
	float                                              fRewardPercentage;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fCostPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UXpecRewardComponent*                        pRewardComp;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.AddNeedValue
struct AXpecZoneManager_AddNeedValue_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecZoneManager.ActivatePOICinematicMode
struct AXpecZoneManager_ActivatePOICinematicMode_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bActivate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.UpdateLOD
struct AXpecPawnSpawnLocation_UpdateLOD_Params
{
	class APawn*                                       PlayerPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecTimeZone>                         currentTimeZone;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.StartReviveDelay
struct AXpecPawnSpawnLocation_StartReviveDelay_Params
{
};

// Function BendGame.XpecPawnSpawnLocation.SetNeedUpdateLOD
struct AXpecPawnSpawnLocation_SetNeedUpdateLOD_Params
{
	bool                                               needUpdate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.SetAlert
struct AXpecPawnSpawnLocation_SetAlert_Params
{
	bool                                               inAlert;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.ResetLODBoxUpdate
struct AXpecPawnSpawnLocation_ResetLODBoxUpdate_Params
{
};

// Function BendGame.XpecPawnSpawnLocation.RequestSpawn
struct AXpecPawnSpawnLocation_RequestSpawn_Params
{
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IsActivate
struct AXpecPawnSpawnLocation_IsActivate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IGetZoneManager
struct AXpecPawnSpawnLocation_IGetZoneManager_Params
{
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IGetSN
struct AXpecPawnSpawnLocation_IGetSN_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IGetPawnType
struct AXpecPawnSpawnLocation_IGetPawnType_Params
{
	TEnumAsByte<EXpecPOIUserType>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IGetPawnName
struct AXpecPawnSpawnLocation_IGetPawnName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.IGetHighLODPriority
struct AXpecPawnSpawnLocation_IGetHighLODPriority_Params
{
	TEnumAsByte<EXpecPawnLODPriority>                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.GetVOClassC
struct AXpecPawnSpawnLocation_GetVOClassC_Params
{
	TEnumAsByte<EXpecVOClass>                          Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class USoundClass>                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecPawnSpawnLocation.GetNeedUpdateLOD
struct AXpecPawnSpawnLocation_GetNeedUpdateLOD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.GetAssetsAIC
struct AXpecPawnSpawnLocation_GetAssetsAIC_Params
{
	TEnumAsByte<EXpecPOIUserType>                      Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAIFactionType>                        FactionType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class UClass>                            Controller;                                               // (Parm, OutParm)
	TAssetPtr<class UBehaviorTree>                     BehaviourTree;                                            // (Parm, OutParm)
};

// Function BendGame.XpecPawnSpawnLocation.Deactivate
struct AXpecPawnSpawnLocation_Deactivate_Params
{
};

// Function BendGame.XpecPawnSpawnLocation.CanSpawnInTimeZone
struct AXpecPawnSpawnLocation_CanSpawnInTimeZone_Params
{
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnSpawnLocation.Activate
struct AXpecPawnSpawnLocation_Activate_Params
{
	TEnumAsByte<EXpecTimeZone>                         eTimeZone;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSplineBlocker.UnblockSegments
struct ABendSplineBlocker_UnblockSegments_Params
{
	bool                                               bAutoUpdate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSplineBlocker.GetIsBlocked
struct ABendSplineBlocker_GetIsBlocked_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSplineBlocker.BlockSegments
struct ABendSplineBlocker_BlockSegments_Params
{
	bool                                               bAutoUpdate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSprinkler.TurnOn
struct ABendSprinkler_TurnOn_Params
{
};

// Function BendGame.BendSprinkler.TurnOff
struct ABendSprinkler_TurnOff_Params
{
};

// Function BendGame.BendSprinkler.ToggleActive
struct ABendSprinkler_ToggleActive_Params
{
};

// Function BendGame.BendSprinkler.OnEndOverlap
struct ABendSprinkler_OnEndOverlap_Params
{
};

// Function BendGame.BendSprinkler.OnBeginOverlap
struct ABendSprinkler_OnBeginOverlap_Params
{
};

// Function BendGame.BendSprinkler.InitializeCodeReferences
struct ABendSprinkler_InitializeCodeReferences_Params
{
};

// Function BendGame.BendSprinkler.GetIsActive
struct ABendSprinkler_GetIsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_MeleeAttack.TryQuickReleaseMove
struct UBendAnimState_MeleeAttack_TryQuickReleaseMove_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAnimState_MeleeAttack.TryNextMeleeMove
struct UBendAnimState_MeleeAttack_TryNextMeleeMove_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticHelpers.SortCrowEdgesByDistance
struct UBendStaticHelpers_SortCrowEdgesByDistance_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAscending;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.SelectRandomCrowEdge
struct UBendStaticHelpers_SelectRandomCrowEdge_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendStaticHelpers.SelectClosestCrowEdge
struct UBendStaticHelpers_SelectClosestCrowEdge_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bInverse;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTraversalEdge                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendStaticHelpers.SafeDestroy
struct UBendStaticHelpers_SafeDestroy_Params
{
	class UObject*                                     ToDestroy;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStaticHelpers.POIsInDefendZone
struct UBendStaticHelpers_POIsInDefendZone_Params
{
	TArray<class ABendPOI*>                            Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDefendZoneInfo                             Zone;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bOnlyPrimaryZone;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInverse;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPOI*>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.POIsInArea
struct UBendStaticHelpers_POIsInArea_Params
{
	TArray<class ABendPOI*>                            Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInverse;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPOI*>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.GetComponentByClass
struct UBendStaticHelpers_GetComponentByClass_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ComponentClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UActorComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendStaticHelpers.GenerateTransformFromTraversalEdge
struct UBendStaticHelpers_GenerateTransformFromTraversalEdge_Params
{
	struct FTraversalEdge                              Edge;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               Rotated180;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticHelpers.FindPOIsInRange
struct UBendStaticHelpers_FindPOIsInRange_Params
{
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPOI*>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.FindPOIsInDefendZone
struct UBendStaticHelpers_FindPOIsInDefendZone_Params
{
	struct FDefendZoneInfo                             Zone;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bOnlyPrimaryZone;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPOI*>                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.FindCrowEdgesInDefendZone
struct UBendStaticHelpers_FindCrowEdgesInDefendZone_Params
{
	struct FDefendZoneInfo                             defendZone;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bOnlyPrimaryZone;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.FindCrowEdgesInArea
struct UBendStaticHelpers_FindCrowEdgesInArea_Params
{
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.CrowEdgesInDefendZone
struct UBendStaticHelpers_CrowEdgesInDefendZone_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDefendZoneInfo                             Zone;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bOnlyPrimaryZone;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInverse;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticHelpers.CrowEdgesInArea
struct UBendStaticHelpers_CrowEdgesInArea_Params
{
	TArray<struct FTraversalEdge>                      Range;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInverse;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTraversalEdge>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStaticMeshArrayData.RemoveAtIndex
struct UBendStaticMeshArrayData_RemoveAtIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticMeshArrayData.GetMeshAtIndex
struct UBendStaticMeshArrayData_GetMeshAtIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticMeshArrayData.GetArraySize
struct UBendStaticMeshArrayData_GetArraySize_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticMeshArrayData.GetArrayLastIndex
struct UBendStaticMeshArrayData_GetArrayLastIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticMeshArrayData.ContainsWeak
struct UBendStaticMeshArrayData_ContainsWeak_Params
{
	TAssetPtr<class UStaticMesh>                       StaticMesh;                                               // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStaticMeshArrayData.Contains
struct UBendStaticMeshArrayData_Contains_Params
{
	class UStaticMesh*                                 StaticMesh;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStoryLineData.GetRewardDataFromStoryLineInfo
struct UBendStoryLineData_GetRewardDataFromStoryLineInfo_Params
{
	TEnumAsByte<EStoryLines>                           StoryLineID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                AssetToCheckAgainst;                                      // (Parm)
	TAssetPtr<class UTexture2D>                        CoverImage;                                               // (Parm, OutParm)
	struct FBendStoryLineRewards                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendStoryLineData.GetBasicStoryLineDataFromID
struct UBendStoryLineData_GetBasicStoryLineDataFromID_Params
{
	TEnumAsByte<EStoryLines>                           StoryLineID;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WillDisplayRewardIfCompleted;                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendStoryLinesBasicDataForUI               ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendStoryLineData.GetBasicStoryLineDataForUI
struct UBendStoryLineData_GetBasicStoryLineDataForUI_Params
{
	class UBendMissionData*                            MissionData;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UJobClassInfo*                               JobData;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               WillDisplayRewardIfCompleted;                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendStoryLinesBasicDataForUI>       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStoryLineData.GetAllStoryLines
struct UBendStoryLineData_GetAllStoryLines_Params
{
	bool                                               OnlyIncludeDiscovered;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FBendStoryLinesForScripting>         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStoryLineData.GetAllStoryLineRewardsAtReferencedCount
struct UBendStoryLineData_GetAllStoryLineRewardsAtReferencedCount_Params
{
	struct FBendStoryLinesBasicDataForUI               ReferencedStoryLine;                                      // (Parm)
	TArray<struct FBendStoryLinesBasicDataForUI>       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendStreamingManager.Unload
struct UBendStreamingManager_Unload_Params
{
	TAssetPtr<class UObject>                           Target;                                                   // (Parm)
};

// Function BendGame.BendStreamingManager.RequestAsyncLoadBPCallback
struct UBendStreamingManager_RequestAsyncLoadBPCallback_Params
{
	TAssetPtr<class UObject>                           Target;                                                   // (Parm)
	struct FScriptDelegate                             DelegateToCall;                                           // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStreamingManager.RequestAsyncLoadArrayBPCallback
struct UBendStreamingManager_RequestAsyncLoadArrayBPCallback_Params
{
	struct FBendAsyncObjectLoadList                    Targets;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FScriptDelegate                             DelegateToCall;                                           // (Parm, ZeroConstructor)
};

// Function BendGame.BendStreamingManager.Get
struct UBendStreamingManager_Get_Params
{
	class UBendStreamingManager*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendStreamingManager.BPDelegateReturned
struct UBendStreamingManager_BPDelegateReturned_Params
{
	TAssetPtr<class UObject>                           Target;                                                   // (Parm)
};

// Function BendGame.BendStreamingOverrideActor.RemoveStreamOverrideSettings
struct ABendStreamingOverrideActor_RemoveStreamOverrideSettings_Params
{
};

// Function BendGame.BendStreamingOverrideActor.LatentExecuteSettings
struct ABendStreamingOverrideActor_LatentExecuteSettings_Params
{
};

// Function BendGame.BendStreamingOverrideActor.HandleOnVolumeOverlapEnd
struct ABendStreamingOverrideActor_HandleOnVolumeOverlapEnd_Params
{
	class AActor*                                      TriggerSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStreamingOverrideActor.HandleOnVolumeOverlapBegin
struct ABendStreamingOverrideActor_HandleOnVolumeOverlapBegin_Params
{
	class AActor*                                      TriggerSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStreamingOverrideActor.ExecuteStreamOverrideSettings
struct ABendStreamingOverrideActor_ExecuteStreamOverrideSettings_Params
{
};

// Function BendGame.BendStreamingOverrideManager.RestoreStreamGroupToPreviousValue
struct ABendStreamingOverrideManager_RestoreStreamGroupToPreviousValue_Params
{
	struct FStreamingOverrideCommand                   CommandToWalkBack;                                        // (Parm, OutParm)
};

// Function BendGame.BendStreamingOverrideManager.RestoreAllStreamingDistances
struct ABendStreamingOverrideManager_RestoreAllStreamingDistances_Params
{
};

// Function BendGame.BendStreamingOverrideManager.RemoveStreamingOverrideCommands
struct ABendStreamingOverrideManager_RemoveStreamingOverrideCommands_Params
{
	class ABendStreamingOverrideActor*                 OverrideOwner;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendStreamingOverrideManager.RemoveAllStreamingOverrides
struct ABendStreamingOverrideManager_RemoveAllStreamingOverrides_Params
{
};

// Function BendGame.BendStreamingOverrideManager.PerformActionOnStreamingLevels
struct ABendStreamingOverrideManager_PerformActionOnStreamingLevels_Params
{
	struct FStreamingOverrideSettings                  StreamOverrideSettings;                                   // (Parm, OutParm)
};

// Function BendGame.BendStreamingOverrideManager.ExecuteStreamingOverrideCommands
struct ABendStreamingOverrideManager_ExecuteStreamingOverrideCommands_Params
{
	class ABendStreamingOverrideActor*                 OverrideOwner;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FStreamingOverrideSettings                  StreamOverrideSettings;                                   // (Parm, OutParm)
};

// Function BendGame.BendStreamingOverrideManager.ExecuteSetStreamingDistance
struct ABendStreamingOverrideManager_ExecuteSetStreamingDistance_Params
{
	struct FString                                     StreamingCommand;                                         // (Parm, ZeroConstructor)
};

// Function BendGame.BendStreamingOverrideManager.ExecuteRestoreStreamingDistance
struct ABendStreamingOverrideManager_ExecuteRestoreStreamingDistance_Params
{
	struct FString                                     StreamingCommand;                                         // (Parm, ZeroConstructor)
};

// Function BendGame.BendStreamingOverrideManager.ExecuteConsoleCommand
struct ABendStreamingOverrideManager_ExecuteConsoleCommand_Params
{
	struct FString                                     ConsoleCommand;                                           // (Parm, ZeroConstructor)
};

// Function BendGame.BendStreamingOverrideManager.ClearActionOnStreamingLevels
struct ABendStreamingOverrideManager_ClearActionOnStreamingLevels_Params
{
	struct FStreamingOverrideSettings                  StreamOverrideSettings;                                   // (Parm, OutParm)
};

// Function BendGame.BendSurfaceTypeManager.PlaySurfaceImpactFX
struct UBendSurfaceTypeManager_PlaySurfaceImpactFX_Params
{
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.PlayImpactFX
struct UBendSurfaceTypeManager_PlayImpactFX_Params
{
	class UObject*                                     WorldContext;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SndCueSurface;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticleSurface;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SndCuePuddle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlePuddle;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SurfaceTypeName;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.BendSurfaceTypeManager.GetSurfaceTypeName
struct UBendSurfaceTypeManager_GetSurfaceTypeName_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSurfaceTypeManager.GetBendSurfaceTypeManager
struct UBendSurfaceTypeManager_GetBendSurfaceTypeManager_Params
{
	class UBendSurfaceTypeManager*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.BendGetSurfaceType_GivenSurfaceConditions
struct UBendSurfaceTypeManager_BendGetSurfaceType_GivenSurfaceConditions_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              WetnessThreshold0To1;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendSurfaceType*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.BendGetSurfaceType
struct UBendSurfaceTypeManager_BendGetSurfaceType_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSurfaceType*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.BendGetSoundCue
struct UBendSurfaceTypeManager_BendGetSoundCue_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFallbackToDefault;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.BendGetParticle
struct UBendSurfaceTypeManager_BendGetParticle_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendSurfaceTypeManager.BendGetEnumName
struct UBendSurfaceTypeManager_BendGetEnumName_Params
{
	class UEnum*                                       enumType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                idx;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.BendSurfaceTypeManager.BendGetDecal
struct UBendSurfaceTypeManager_BendGetDecal_Params
{
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       DecalKey;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FSurfaceTypeDecal                           ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendTireMarkComponent.AddTireMarkDecal
struct UBendTireMarkComponent_AddTireMarkDecal_Params
{
	class UBendMovementComp_VehicleNoDrive*            MovementComponent;                                        // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                WheelIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendSurfaceType*                            SurfaceTypeData;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartLocation;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndLocation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              TireWidth;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              LifeSpan;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UDecalComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendTrackingMinimapMarker_BP.UpdateObjectAlpha
struct ABendTrackingMinimapMarker_BP_UpdateObjectAlpha_Params
{
	float                                              NewAlpha;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingMinimapMarker_BP.TimelineCallback
struct ABendTrackingMinimapMarker_BP_TimelineCallback_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingMinimapMarker_BP.SetIsFootprint
struct ABendTrackingMinimapMarker_BP_SetIsFootprint_Params
{
	bool                                               IsFootprint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTrackingMinimapMarker_BP.Enable_DisableMarker
struct ABendTrackingMinimapMarker_BP_Enable_DisableMarker_Params
{
	bool                                               enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RegionSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyForMinimap;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTutorialCloseInterface.OnTutorialClosed
struct UBendTutorialCloseInterface_OnTutorialClosed_Params
{
};

// Function BendGame.BendTutorialManager.ReleaseTutorialImage
struct UBendTutorialManager_ReleaseTutorialImage_Params
{
	struct FName                                       TutorialName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendTutorialManager.GetUnlockedTutorials
struct UBendTutorialManager_GetUnlockedTutorials_Params
{
	TArray<struct FBendTutorialSimple>                 OutTutorials;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               GetAllTutorials;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTutorialManager.GetSimpleTutorial
struct UBendTutorialManager_GetSimpleTutorial_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FBendTutorialSimple                         OutTutorial;                                              // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTutorialManager.GetMultiTutorial
struct UBendTutorialManager_GetMultiTutorial_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FBendTutorialMultiLine                      OutTutorial;                                              // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendTutorialManager.CacheTutorialImage
struct UBendTutorialManager_CacheTutorialImage_Params
{
	struct FName                                       TutorialName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.WeaponTypeToSlot
struct UBendUIFunctionLibrary_WeaponTypeToSlot_Params
{
	TEnumAsByte<EWeaponType>                           WeaponType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHudWeaponWidgetSlot>                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenVectorParameter
struct UBendUIFunctionLibrary_TweenVectorParameter_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsTweening;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MaterialInstanceDynamic;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FLinearColor                                ValueFrom;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ValueTo;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenTranslation
struct UBendUIFunctionLibrary_TweenTranslation_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsTweening;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UBorder*                                     Border;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   From;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   To;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenScalarParameter
struct UBendUIFunctionLibrary_TweenScalarParameter_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MaterialInstanceDynamic;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Start;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              End;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           Easing;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenColor
struct UBendUIFunctionLibrary_TweenColor_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsTweening;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UBorder*                                     Border;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FLinearColor                                ColorFrom;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColorTo;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           EaseType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenCollapseHeight
struct UBendUIFunctionLibrary_TweenCollapseHeight_Params
{
	bool                                               IsTweening;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class USizeBox*                                    SizeBox;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Frame;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FrameOut;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsTweeningOut;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.TweenAlignment
struct UBendUIFunctionLibrary_TweenAlignment_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsTweening;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UCanvasPanelSlot*                            Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   From;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   To;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.SmoothPosition2D
struct UBendUIFunctionLibrary_SmoothPosition2D_Params
{
	struct FVector2D                                   TargetPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PreviousPosition;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.SetWidgetToActorPosition
struct UBendUIFunctionLibrary_SetWidgetToActorPosition_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UWidget*                                     WidgetRef;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Centered;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               WithinViewport;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.SetIconGridBGs
struct UBendUIFunctionLibrary_SetIconGridBGs_Params
{
	TArray<class UTexture2D*>                          ImageBGs;                                                 // (Parm, ZeroConstructor)
	int                                                Columns;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Rows;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UGridPanel*                                  GridPanel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.PerformSwipeCheck
struct UBendUIFunctionLibrary_PerformSwipeCheck_Params
{
	struct FVector2D                                   Start;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   End;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESwipeResult>                          Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESwipeDirection>                       Direction;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.NormalizeAngle
struct UBendUIFunctionLibrary_NormalizeAngle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.IsTutorialUnlocked
struct UBendUIFunctionLibrary_IsTutorialUnlocked_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               SetUnlockedIfLocked;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.IncrementProgress
struct UBendUIFunctionLibrary_IncrementProgress_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.GetWorldTimeFriendly
struct UBendUIFunctionLibrary_GetWorldTimeFriendly_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendUIFunctionLibrary.GetUIColor
struct UBendUIFunctionLibrary_GetUIColor_Params
{
	TEnumAsByte<EUI_Color_Names>                       Name;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FSlateColor                                 SlateColor;                                               // (Parm, OutParm)
};

// Function BendGame.BendUIFunctionLibrary.GetSimpleTutorialDetails
struct UBendUIFunctionLibrary_GetSimpleTutorialDetails_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FBendTutorialSimple                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendUIFunctionLibrary.GetMultiTutorialDetails
struct UBendUIFunctionLibrary_GetMultiTutorialDetails_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FBendTutorialMultiLine                      ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.BendUIFunctionLibrary.GetButtonTextureByMarkup
struct UBendUIFunctionLibrary_GetButtonTextureByMarkup_Params
{
	class UDataTable*                                  DataTable;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Markup;                                                   // (Parm, ZeroConstructor)
	class UTexture2D*                                  DefaultTexture;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsMashing;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.GetButtonTextureByEnum
struct UBendUIFunctionLibrary_GetButtonTextureByEnum_Params
{
	class UDataTable*                                  DataTable;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EControllerInputButton>                Button;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Dimensions;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.GetAmmoCount
struct UBendUIFunctionLibrary_GetAmmoCount_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.FollowActorInScreenSpace
struct UBendUIFunctionLibrary_FollowActorInScreenSpace_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SmoothMotion;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PreviousPosition;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             OverrideComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.EaseLinearColor
struct UBendUIFunctionLibrary_EaseLinearColor_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           Function;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Alpha;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SourceColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DestinationColor;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUIFunctionLibrary.ActivateObjectiveMeter
struct UBendUIFunctionLibrary_ActivateObjectiveMeter_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Icon;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Inverted;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UHudMissionTimerWidget*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryPartStorage.ContainsPart
struct UInventoryPartStorage_ContainsPart_Params
{
	struct FInventoryPart                              Part;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryPartStorage.AddPart
struct UInventoryPartStorage_AddPart_Params
{
	struct FInventoryPart                              Part;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BikeTheme.OnTank
struct UBikeTheme_OnTank_Params
{
	struct FName                                       SkinKey;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BikeTheme.OnPaint
struct UBikeTheme_OnPaint_Params
{
	struct FName                                       SkinKey;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.BikeTheme.OnBody
struct UBikeTheme_OnBody_Params
{
	struct FName                                       SkinKey;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.UnlockSkin
struct UInventoryBikeMaterials_UnlockSkin_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.TryToApplyTheme
struct UInventoryBikeMaterials_TryToApplyTheme_Params
{
	class UBikeTheme*                                  BikeTheme;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.IsSkinUnlocked
struct UInventoryBikeMaterials_IsSkinUnlocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.FreeBikeSkin
struct UInventoryBikeMaterials_FreeBikeSkin_Params
{
	struct FName                                       SkinKey;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.ContainsSkin
struct UInventoryBikeMaterials_ContainsSkin_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.CacheBikeSkin
struct UInventoryBikeMaterials_CacheBikeSkin_Params
{
	struct FGameplayTag                                SkinTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInventoryBikePartCustomDecal               Decal;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSkinLoaded;                                             // (Parm, ZeroConstructor)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.ApplyBikeTheme
struct UInventoryBikeMaterials_ApplyBikeTheme_Params
{
	struct FGameplayTag                                PaintTag;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                                BodyTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                                TankTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikeMaterials.ApplyBikeSkin
struct UInventoryBikeMaterials_ApplyBikeSkin_Params
{
	struct FName                                       SkinKey;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.UnlockSkin
struct UInventoryBikePartStorage_UnlockSkin_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.IsSkinUnlocked
struct UInventoryBikePartStorage_IsSkinUnlocked_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.IsSkinEquipped
struct UInventoryBikePartStorage_IsSkinEquipped_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.GuidQuery
struct UInventoryBikePartStorage_GuidQuery_Params
{
	struct FGameplayTagQuery                           Query;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FInventoryGuidSlot>                  OutGuids;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.InventoryBikePartStorage.GetEquippedPartOfType
struct UInventoryBikePartStorage_GetEquippedPartOfType_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryPart                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryBikePartStorage.GetAllUnlockedSkinsInventoryItems
struct UInventoryBikePartStorage_GetAllUnlockedSkinsInventoryItems_Params
{
	TArray<class UInventoryItem*>                      ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.InventoryBikePartStorage.GetAllBikeItemParts
struct UInventoryBikePartStorage_GetAllBikeItemParts_Params
{
	TArray<class UInventoryItem*>                      ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.InventoryBikePartStorage.EquipPartFromInventoryItem
struct UInventoryBikePartStorage_EquipPartFromInventoryItem_Params
{
	class UInventoryItemMotorcyclePart*                ItemPart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.EquipDefaultParts
struct UInventoryBikePartStorage_EquipDefaultParts_Params
{
};

// Function BendGame.InventoryBikePartStorage.EquipBikePart
struct UInventoryBikePartStorage_EquipBikePart_Params
{
	struct FInventoryPart                              Part;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.ApplyToVehicle
struct UInventoryBikePartStorage_ApplyToVehicle_Params
{
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.ApplyBikeSkin
struct UInventoryBikePartStorage_ApplyBikeSkin_Params
{
	struct FGameplayTag                                SkinTag;                                                  // (Parm)
	int                                                SkinIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.AddVehiclePartsToStorage
struct UInventoryBikePartStorage_AddVehiclePartsToStorage_Params
{
	class AVehiclePawn*                                Vehicle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.AddPartFromInventoryItem
struct UInventoryBikePartStorage_AddPartFromInventoryItem_Params
{
	class UInventoryItemMotorcyclePart*                ItemPart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikePartStorage.AddDefaultParts
struct UInventoryBikePartStorage_AddDefaultParts_Params
{
};

// Function BendGame.BendUnlockManager.UnlockEntitlements
struct UBendUnlockManager_UnlockEntitlements_Params
{
};

// Function BendGame.BendUnlockManager.GetUnlockManager
struct UBendUnlockManager_GetUnlockManager_Params
{
	class UBendUnlockManager*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendUnlockManager.EquipBikePartUnlocks
struct UBendUnlockManager_EquipBikePartUnlocks_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidgetSelectionInterface.IOnCategorySelectionModified
struct UCategoryMenuWidgetSelectionInterface_IOnCategorySelectionModified_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsSelected;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidgetSelectionInterface.IOnCategorySelected
struct UCategoryMenuWidgetSelectionInterface_IOnCategorySelected_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsSelected;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuEntryWidget.SetText
struct UCategoryMenuEntryWidget_SetText_Params
{
	struct FText                                       Text;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.CategoryMenuEntryWidget.SetSelected
struct UCategoryMenuEntryWidget_SetSelected_Params
{
	bool                                               IsSelected;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CategoryMenuEntryWidget.SetDisabled
struct UCategoryMenuEntryWidget_SetDisabled_Params
{
	bool                                               IsDisabled;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.SetCategoryActivated
struct UCategoryMenuWidget_SetCategoryActivated_Params
{
	bool                                               Activated;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.SetCategory
struct UCategoryMenuWidget_SetCategory_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.IsCategorySelected
struct UCategoryMenuWidget_IsCategorySelected_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.InitializeCategoryText
struct UCategoryMenuWidget_InitializeCategoryText_Params
{
	TArray<struct FText>                               Text;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.CategoryMenuWidget.GetEntryWidget
struct UCategoryMenuWidget_GetEntryWidget_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UCategoryMenuEntryWidget*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.GetCategory
struct UCategoryMenuWidget_GetCategory_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.ForceSelection
struct UCategoryMenuWidget_ForceSelection_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CategoryMenuWidget.DeactivateSelectedCategory
struct UCategoryMenuWidget_DeactivateSelectedCategory_Params
{
};

// Function BendGame.DLCChallengeCompleteMenu.SetChallengeData
struct UDLCChallengeCompleteMenu_SetChallengeData_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                InChallengeScore;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        InSubChallengeScores;                                     // (Parm, ZeroConstructor)
};

// Function BendGame.DLCChallengeCompleteMenu.OnFailure
struct UDLCChallengeCompleteMenu_OnFailure_Params
{
};

// Function BendGame.DLCChallengeCompleteMenu.OnChallengeData
struct UDLCChallengeCompleteMenu_OnChallengeData_Params
{
};

// Function BendGame.DLCChallengeCompleteMenu.FailChallenge
struct UDLCChallengeCompleteMenu_FailChallenge_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	struct FText                                       Reason;                                                   // (Parm)
};

// Function BendGame.InputInteractWidget.SetProgressPercent
struct UInputInteractWidget_SetProgressPercent_Params
{
	float                                              Percent;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InputInteractWidget.SetInteractDetails
struct UInputInteractWidget_SetInteractDetails_Params
{
	struct FActorInteractDetails                       Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InputInteractWidget.OverrideFollowLocation
struct UInputInteractWidget_OverrideFollowLocation_Params
{
	struct FVector                                     NewVector;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.SnapToMinimapLocation
struct UMapMenuWidget1_SnapToMinimapLocation_Params
{
	class UMiniMapLocationComponent*                   MapLocation;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.SetMapZoom
struct UMapMenuWidget1_SetMapZoom_Params
{
	float                                              InZoom;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.SetMapState
struct UMapMenuWidget1_SetMapState_Params
{
	TEnumAsByte<EMapMenuState>                         InState;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.SetInfoPanelVisible
struct UMapMenuWidget1_SetInfoPanelVisible_Params
{
	bool                                               IsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldAnimate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.SetAlphaFade
struct UMapMenuWidget1_SetAlphaFade_Params
{
	float                                              FadeAlpha;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.RegisterMapLocation
struct UMapMenuWidget1_RegisterMapLocation_Params
{
	class UMapLocation*                                MapLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMiniMapLocation>                      Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RegisterLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.OnZoomChanged
struct UMapMenuWidget1_OnZoomChanged_Params
{
	TEnumAsByte<EMapZoom>                              ZoomType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ZoomValueZeroToOne;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.OnUpdateFogOfWar
struct UMapMenuWidget1_OnUpdateFogOfWar_Params
{
};

// Function BendGame.MapMenuWidget1.OnSynchronizePropertiesEvent
struct UMapMenuWidget1_OnSynchronizePropertiesEvent_Params
{
};

// Function BendGame.MapMenuWidget1.OnMarkerSelectionChange
struct UMapMenuWidget1_OnMarkerSelectionChange_Params
{
	struct FMapMarkerWidgetDetails                     Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.MapMenuWidget1.GetSectorPosition
struct UMapMenuWidget1_GetSectorPosition_Params
{
	struct FIntPoint                                   MapSector;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.GetCurrentWorldPosition
struct UMapMenuWidget1_GetCurrentWorldPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.GetCurrentScale
struct UMapMenuWidget1_GetCurrentScale_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.GetCurrentMipLevel
struct UMapMenuWidget1_GetCurrentMipLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.ExecuteFastTravel
struct UMapMenuWidget1_ExecuteFastTravel_Params
{
	struct FTransform                                  PlayerTransform;                                          // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  BikeTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function BendGame.MapMenuWidget1.DrawMapTiles
struct UMapMenuWidget1_DrawMapTiles_Params
{
	struct FPaintContext                               InContext;                                                // (Parm, OutParm)
};

// Function BendGame.SaveGameMenu.RequestSaveData
struct USaveGameMenu_RequestSaveData_Params
{
};

// Function BendGame.SaveGameMenu.RequestLoadData
struct USaveGameMenu_RequestLoadData_Params
{
};

// Function BendGame.SaveGameMenu.OnData
struct USaveGameMenu_OnData_Params
{
	TArray<struct FSaveGameMenuItemData>               InData;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.SaveGameMenu.IsSaveEmpty
struct USaveGameMenu_IsSaveEmpty_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SaveGameMenu.GetSavesCount
struct USaveGameMenu_GetSavesCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SaveGameMenu.GetFileNameByIndex
struct USaveGameMenu_GetFileNameByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.TutorialWidget.Dismiss
struct UTutorialWidget_Dismiss_Params
{
	bool                                               bWasDismissedByPlayer;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPerformanceMonitor.Stop
struct UBendPerformanceMonitor_Stop_Params
{
};

// Function BendGame.BendPerformanceMonitor.RestoreOriginal
struct UBendPerformanceMonitor_RestoreOriginal_Params
{
};

// Function BendGame.BendPerformanceMonitor.PreAutodetect
struct UBendPerformanceMonitor_PreAutodetect_Params
{
};

// Function BendGame.BendPerformanceMonitor.PostAutodetect
struct UBendPerformanceMonitor_PostAutodetect_Params
{
	struct FPerfTest                                   Optimized;                                                // (Parm)
};

// Function BendGame.BendPerformanceMonitor.OnAutodetectCancelled
struct UBendPerformanceMonitor_OnAutodetectCancelled_Params
{
};

// Function BendGame.BendPerformanceMonitor.Monitor
struct UBendPerformanceMonitor_Monitor_Params
{
};

// Function BendGame.BendPerformanceMonitor.AutodetectSettings
struct UBendPerformanceMonitor_AutodetectSettings_Params
{
	float                                              InTargetFPS;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InMinimumResolutionScale;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendPerformanceMonitor.ApplyPreset
struct UBendPerformanceMonitor_ApplyPreset_Params
{
	struct FPerfTest                                   InPreset;                                                 // (Parm)
};

// Function BendGame.BendVehicleFuelComponent.SetFuelRemainingGallons
struct UBendVehicleFuelComponent_SetFuelRemainingGallons_Params
{
	float                                              FuelRemainingGallons;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.SetFuelRemaining0To1
struct UBendVehicleFuelComponent_SetFuelRemaining0To1_Params
{
	float                                              FuelRemaining0To1;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.GetMaxFuelConsumptionRateGpm
struct UBendVehicleFuelComponent_GetMaxFuelConsumptionRateGpm_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.GetFuelRemainingGallons
struct UBendVehicleFuelComponent_GetFuelRemainingGallons_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.GetFuelRemaining0To1
struct UBendVehicleFuelComponent_GetFuelRemaining0To1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.GetFuelConsumptionRateGpm_GivenRpm
struct UBendVehicleFuelComponent_GetFuelConsumptionRateGpm_GivenRpm_Params
{
	float                                              Rpm;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelComponent.FillUpFuel
struct UBendVehicleFuelComponent_FillUpFuel_Params
{
};

// Function BendGame.BendVehicleEngineSpecs.GetMaxSpeed
struct UBendVehicleEngineSpecs_GetMaxSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleEngineSpecs.GetFuelConsumption
struct UBendVehicleEngineSpecs_GetFuelConsumption_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleFuelTankSpecs.GetFuelCapacity
struct UBendVehicleFuelTankSpecs_GetFuelCapacity_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleNitrousSpecs.GetMaxSpeedScale
struct UBendVehicleNitrousSpecs_GetMaxSpeedScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleNitrousSpecs.GetDepletionRate
struct UBendVehicleNitrousSpecs_GetDepletionRate_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleStorageSpecs.GetStorageCapacity
struct UBendVehicleStorageSpecs_GetStorageCapacity_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsDatabase.GetNumParts
struct UBendVehiclePartsDatabase_GetNumParts_Params
{
	TEnumAsByte<EMotorcyclePartType>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsDatabase.GetAttachmentSpecs
struct UBendVehiclePartsDatabase_GetAttachmentSpecs_Params
{
	TEnumAsByte<EMotorcyclePartType>                   Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UBendVehicleMeshAttachmentSpecs*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehiclePartsDatabase.CacheParts
struct UBendVehiclePartsDatabase_CacheParts_Params
{
	bool                                               CacheItems;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.UnReserveSeat
struct UBendVehicleSeatsComponent_UnReserveSeat_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.SetUpEntryAnchor
struct UBendVehicleSeatsComponent_SetUpEntryAnchor_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.ReserveSeat
struct UBendVehicleSeatsComponent_ReserveSeat_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.RemoveRider
struct UBendVehicleSeatsComponent_RemoveRider_Params
{
	class AActor*                                      RiderActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.IsDriverSeat
struct UBendVehicleSeatsComponent_IsDriverSeat_Params
{
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetRiderState
struct UBendVehicleSeatsComponent_GetRiderState_Params
{
	class AActor*                                      RiderActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVehicleRiderState>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetRiderBendPawn
struct UBendVehicleSeatsComponent_GetRiderBendPawn_Params
{
	struct FName                                       SeatName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetRiderActor
struct UBendVehicleSeatsComponent_GetRiderActor_Params
{
	struct FName                                       SeatName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetNumRiders
struct UBendVehicleSeatsComponent_GetNumRiders_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetNumPassengers
struct UBendVehicleSeatsComponent_GetNumPassengers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetFirstRiderActor
struct UBendVehicleSeatsComponent_GetFirstRiderActor_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetDriverOrIncomingDriver_BendPawn
struct UBendVehicleSeatsComponent_GetDriverOrIncomingDriver_BendPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetDriverOrIncomingDriver
struct UBendVehicleSeatsComponent_GetDriverOrIncomingDriver_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetDriverBendPawn
struct UBendVehicleSeatsComponent_GetDriverBendPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.GetDriver
struct UBendVehicleSeatsComponent_GetDriver_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.CanSeatBeReservedBy
struct UBendVehicleSeatsComponent_CanSeatBeReservedBy_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.CanSeatBeOccupiedBy
struct UBendVehicleSeatsComponent_CanSeatBeOccupiedBy_Params
{
	class AActor*                                      Rider;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleSeatsComponent.AddRider
struct UBendVehicleSeatsComponent_AddRider_Params
{
	class AActor*                                      RiderActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SeatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleUtilities.SpawnPawnOnVehicle
struct UBendVehicleUtilities_SpawnPawnOnVehicle_Params
{
	class UClass*                                      PawnClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleWheel.GetVisualSuspensionOffsetAsVector
struct UBendVehicleWheel_GetVisualSuspensionOffsetAsVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVehicleWheel.GetSuspensionOffsetAsVector
struct UBendVehicleWheel_GetSuspensionOffsetAsVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.IsInConversation
struct ABendVocalFXType_IsInConversation_Params
{
	class ABendPawn*                                   BendPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.GetVoicePitch
struct ABendVocalFXType_GetVoicePitch_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.GetBankSoundClass
struct ABendVocalFXType_GetBankSoundClass_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendStopVocal
struct ABendVocalFXType_BendStopVocal_Params
{
	class ABendPawn*                                   BendPawn;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendStopConversation
struct ABendVocalFXType_BendStopConversation_Params
{
	int                                                ConversationUID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendStopAllConversations
struct ABendVocalFXType_BendStopAllConversations_Params
{
};

// Function BendGame.BendVocalFXType.BendResumeInterruptedConversation
struct ABendVocalFXType_BendResumeInterruptedConversation_Params
{
};

// Function BendGame.BendVocalFXType.BendResumeConversation
struct ABendVocalFXType_BendResumeConversation_Params
{
	int                                                ConversationUID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayVocalFromSoundName
struct ABendVocalFXType_BendPlayVocalFromSoundName_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayVocalFromBlueprintSoundNameDebugAnimNotifyOnly
struct ABendVocalFXType_BendPlayVocalFromBlueprintSoundNameDebugAnimNotifyOnly_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EeNPCVoiceTypes>                       TypeSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayVocalFromBlueprintFXNameDebugAnimNotifyOnly
struct ABendVocalFXType_BendPlayVocalFromBlueprintFXNameDebugAnimNotifyOnly_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EeNPCVoiceTypes>                       TypeSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayVocalFromBlueprintFXName
struct ABendVocalFXType_BendPlayVocalFromBlueprintFXName_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FXName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayVocal
struct ABendVocalFXType_BendPlayVocal_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 pSoundClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PawnsPitch;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayRandomVocal
struct ABendVocalFXType_BendPlayRandomVocal_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayPOIVOByName
struct ABendVocalFXType_BendPlayPOIVOByName_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       POIType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayPOIVO
struct ABendVocalFXType_BendPlayPOIVO_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIType>                             POIType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIStateForVO>                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EeRepeatRulesVO>                       RepeatRule;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayEventVOWithResponse
struct ABendVocalFXType_BendPlayEventVOWithResponse_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Event;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class ABendPawn*>                           PawnResponders;                                           // (Parm, OutParm, ZeroConstructor)
	class UAnimSequenceBase*                           ResponderAnimation;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                AutoPawnResponderRadius;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayEventVO_NoDelegate
struct ABendVocalFXType_BendPlayEventVO_NoDelegate_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayEventVO
struct ABendVocalFXType_BendPlayEventVO_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnDonePlayingVODelegate;                                  // (Parm, ZeroConstructor)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayCurrentStateVocal
struct ABendVocalFXType_BendPlayCurrentStateVocal_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayWhenDead;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayConversationWithChild_NoDelegate
struct ABendVocalFXType_BendPlayConversationWithChild_NoDelegate_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ConversationData;                                         // (Parm, ZeroConstructor)
	TArray<struct FVocalConversationData>              ChildConversationData;                                    // (Parm, ZeroConstructor)
	float                                              MaxPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSecondsAllowRepeat;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LoopConversation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDuckSounds;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldUnduckSounds;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaitTimeInQueue;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseInterruptSystem;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforePlaying;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforeResuming;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenShooting;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenMeleeing;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayResumeVO;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopIfInterrupted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowOneLineConversationToPlayOver;                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayConversationWithChild
struct ABendVocalFXType_BendPlayConversationWithChild_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ConversationData;                                         // (Parm, ZeroConstructor)
	TArray<struct FVocalConversationData>              ChildConversationData;                                    // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDonePlayingVODelegate;                                  // (Parm, ZeroConstructor)
	float                                              MaxPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSecondsAllowRepeat;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LoopConversation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDuckSounds;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldUnduckSounds;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaitTimeInQueue;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseInterruptSystem;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforePlaying;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforeResuming;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenShooting;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenMeleeing;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayResumeVO;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopIfInterrupted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowOneLineConversationToPlayOver;                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayConversation_NoDelegate
struct ABendVocalFXType_BendPlayConversation_NoDelegate_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ConversationData;                                         // (Parm, ZeroConstructor)
	float                                              MaxPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSecondsAllowRepeat;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LoopConversation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDuckSounds;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldUnduckSounds;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaitTimeInQueue;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseInterruptSystem;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforePlaying;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforeResuming;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenShooting;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenMeleeing;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayResumeVO;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopIfInterrupted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowOneLineConversationToPlayOver;                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPlayConver
struct ABendVocalFXType_BendPlayConver_Params
{
	class USoundClass*                                 SoundClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ConversationData;                                         // (Parm, ZeroConstructor)
	struct FScriptDelegate                             OnDonePlayingVODelegate;                                  // (Parm, ZeroConstructor)
	float                                              MaxPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinPauseBetweenLines;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSecondsAllowRepeat;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LoopConversation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldDuckSounds;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldUnduckSounds;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaitTimeInQueue;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UseInterruptSystem;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforePlaying;                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               CheckThreatsBeforeResuming;                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenShooting;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InterruptWhenMeleeing;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               PlayResumeVO;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               StopIfInterrupted;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AllowOneLineConversationToPlayOver;                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendPauseConversation
struct ABendVocalFXType_BendPauseConversation_Params
{
	int                                                ConversationUID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendInterruptConversation
struct ABendVocalFXType_BendInterruptConversation_Params
{
	int                                                ConversationUID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   InterrupterPawn;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              InterruptVOData;                                          // (Parm, ZeroConstructor)
	TArray<struct FVocalConversationData>              ResumeByInterrupterVOData;                                // (Parm, ZeroConstructor)
	TArray<struct FVocalConversationData>              ResumeByOtherVOData;                                      // (Parm, ZeroConstructor)
	TEnumAsByte<EConversationInterruptReason>          Reason;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendGetPlayingVocalTimeLeft
struct ABendVocalFXType_BendGetPlayingVocalTimeLeft_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendGetPlayingVocalPlaybackTime
struct ABendVocalFXType_BendGetPlayingVocalPlaybackTime_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendGetPlayingVocalDuration
struct ABendVocalFXType_BendGetPlayingVocalDuration_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendGetConversationTotalDuration
struct ABendVocalFXType_BendGetConversationTotalDuration_Params
{
	int                                                ConversationUID;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendVocalFXType.BendCanPlayEventVO
struct ABendVocalFXType_BendCanPlayEventVO_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DoDebugOutput;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.UpdateStatus
struct UBendWarningGroup_UpdateStatus_Params
{
	class UBendWarningGroupComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              DistanceToTarget;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.StopWarning
struct UBendWarningGroup_StopWarning_Params
{
	class UBendWarningGroupComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.StartWarning
struct UBendWarningGroup_StartWarning_Params
{
	class ABendPawn*                                   Requester;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.IsWarningPending
struct UBendWarningGroup_IsWarningPending_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.IsTargetFarAway
struct UBendWarningGroup_IsTargetFarAway_Params
{
	float                                              AcceptableDistance;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.IsMainSoldier
struct UBendWarningGroup_IsMainSoldier_Params
{
	class UBendWarningGroupComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.GetMemberPawns
struct UBendWarningGroup_GetMemberPawns_Params
{
	TArray<class ABendPawn*>                           Output;                                                   // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.BendWarningGroup.CreateBendWarningGroup
struct UBendWarningGroup_CreateBendWarningGroup_Params
{
	class UBendWarningGroup*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroup.ApplyForMainSoldier
struct UBendWarningGroup_ApplyForMainSoldier_Params
{
	class UBendWarningGroupComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWarningGroupComponent.LeaveGroup
struct UBendWarningGroupComponent_LeaveGroup_Params
{
};

// Function BendGame.BendWarningGroupComponent.JoinGroup
struct UBendWarningGroupComponent_JoinGroup_Params
{
	class UBendWarningGroup*                           NewWarningGroup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWarningGroupComponent.GetGroup
struct UBendWarningGroupComponent_GetGroup_Params
{
	class UBendWarningGroup*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWarningGroupComponentHelpers.StopWarningGroup
struct UBendWarningGroupComponentHelpers_StopWarningGroup_Params
{
	TArray<class AController*>                         WarningMembers;                                           // (Parm, ZeroConstructor)
};

// Function BendGame.BendWarningGroupComponentHelpers.StartWarningGroup
struct UBendWarningGroupComponentHelpers_StartWarningGroup_Params
{
	class UBendWarningGroup*                           WarningGroup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AController*>                         WarningMembers;                                           // (Parm, ZeroConstructor)
};

// Function BendGame.BendAnimalWarningGroupComponent.OnWarningStopped
struct UBendAnimalWarningGroupComponent_OnWarningStopped_Params
{
};

// Function BendGame.BlindfireTargetSelectWidget.UpdateSelectionIcon
struct UBlindfireTargetSelectWidget_UpdateSelectionIcon_Params
{
};

// Function BendGame.BlindfireTargetSelectWidget.ShowSoftTargetIcon
struct UBlindfireTargetSelectWidget_ShowSoftTargetIcon_Params
{
};

// Function BendGame.BendWeaponPartLaserBeam.SetLaserBeamVisible
struct ABendWeaponPartLaserBeam_SetLaserBeamVisible_Params
{
	bool                                               Visible;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWeaponPartLaserBeam.OnReloadStarted
struct ABendWeaponPartLaserBeam_OnReloadStarted_Params
{
};

// Function BendGame.BendWeaponPartLaserBeam.OnReloadFinished
struct ABendWeaponPartLaserBeam_OnReloadFinished_Params
{
};

// Function BendGame.BendWeaponPartLaserBeam.OnBoneTransformFinalized
struct ABendWeaponPartLaserBeam_OnBoneTransformFinalized_Params
{
};

// Function BendGame.BendWeaponPartLaserBeam.IsLaserBeamVisible
struct ABendWeaponPartLaserBeam_IsLaserBeamVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponRepairInterface.IOnRepaired
struct UBendWeaponRepairInterface_IOnRepaired_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponRepairInterface.IGetRepairCost
struct UBendWeaponRepairInterface_IGetRepairCost_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponRepairInterface.ICanEverBeRepaired
struct UBendWeaponRepairInterface_ICanEverBeRepaired_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponRepairInterface.ICanBeRepaired
struct UBendWeaponRepairInterface_ICanBeRepaired_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponUpgradeInterface.ISetTier
struct UBendWeaponUpgradeInterface_ISetTier_Params
{
	TEnumAsByte<EWeaponMeleeTier>                      Tier;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponUpgradeInterface.IGetUpgradeCost
struct UBendWeaponUpgradeInterface_IGetUpgradeCost_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponUpgradeInterface.IGetTier
struct UBendWeaponUpgradeInterface_IGetTier_Params
{
	TEnumAsByte<EWeaponMeleeTier>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeaponUpgradeInterface.ICanUpgrade
struct UBendWeaponUpgradeInterface_ICanUpgrade_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendWeatherLevelScriptActor.OnWeatherChangeRequest
struct ABendWeatherLevelScriptActor_OnWeatherChangeRequest_Params
{
	struct FName                                       TimeAndWeatherID;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWidgetComponentManager.OnWidgetUnloaded
struct ABendWidgetComponentManager_OnWidgetUnloaded_Params
{
	class UBendWidgetComponent*                        WidgetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWidgetComponentManager.OnWidgetLoaded
struct ABendWidgetComponentManager_OnWidgetLoaded_Params
{
	class UBendWidgetComponent*                        WidgetComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.BendWidgetComponentManager.OnDependentActorEndPlay
struct ABendWidgetComponentManager_OnDependentActorEndPlay_Params
{
	class AActor*                                      DependentActor;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWidgetComponentManager.OnDependentActorBeginPlay
struct ABendWidgetComponentManager_OnDependentActorBeginPlay_Params
{
	class AActor*                                      DependentActor;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWindGust.SetInitValues
struct ABendWindGust_SetInitValues_Params
{
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsGroundWet;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWindowBase.EnableEdges
struct ABendWindowBase_EnableEdges_Params
{
};

// Function BendGame.BendWindowBase.DisableEdges
struct ABendWindowBase_DisableEdges_Params
{
};

// Function BendGame.BendWorldEdgeChildComponent.SetWindowEdge
struct UBendWorldEdgeChildComponent_SetWindowEdge_Params
{
	bool                                               NewWindowEdge;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetSkipAutoNavLinkCreation
struct UBendWorldEdgeChildComponent_SetSkipAutoNavLinkCreation_Params
{
	bool                                               NewSkipAutoNavLinkCreation;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetRoofEdge
struct UBendWorldEdgeChildComponent_SetRoofEdge_Params
{
	bool                                               NewRoofEdge;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetPlayerClimbable
struct UBendWorldEdgeChildComponent_SetPlayerClimbable_Params
{
	bool                                               NewPlayerClimbable;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetLadderRungType
struct UBendWorldEdgeChildComponent_SetLadderRungType_Params
{
	TEnumAsByte<ELadderRungType>                       NewLadderRungType;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetLadderEdge
struct UBendWorldEdgeChildComponent_SetLadderEdge_Params
{
	bool                                               NewLadderEdge;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetGuardrail
struct UBendWorldEdgeChildComponent_SetGuardrail_Params
{
	bool                                               NewGuardrail;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetCrowsCanPerch
struct UBendWorldEdgeChildComponent_SetCrowsCanPerch_Params
{
	bool                                               NewCrowsCanPerch;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.SetClimbable
struct UBendWorldEdgeChildComponent_SetClimbable_Params
{
	bool                                               NewClimbable;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendWorldEdgeChildComponent.FlipEdgeDirection
struct UBendWorldEdgeChildComponent_FlipEdgeDirection_Params
{
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.UpdateLerpToTargetFlow
struct ABendXPEC_Util_LerpToTarget_BP_UpdateLerpToTargetFlow_Params
{
	float                                              Tick;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.UpdateLerpToTargetAlpha
struct ABendXPEC_Util_LerpToTarget_BP_UpdateLerpToTargetAlpha_Params
{
	int                                                LerpIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Alpha;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.RemoveLerpToTargetVariables
struct ABendXPEC_Util_LerpToTarget_BP_RemoveLerpToTargetVariables_Params
{
	int                                                RemoveLerpIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.LerpToTarget
struct ABendXPEC_Util_LerpToTarget_BP_LerpToTarget_Params
{
	class UObject*                                     LerpTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  OriginTransform;                                          // (Parm, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, IsPlainOldData)
	float                                              TargetLerpAlpha;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetLerpInTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXPEC_Enum_LerpType>                   TargetLerpType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               EnableDebugInfo;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Tick;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               NeedToRemove;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.GetLerpToTargetVariables
struct ABendXPEC_Util_LerpToTarget_BP_GetLerpToTargetVariables_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  OriginTransform;                                          // (Parm, OutParm, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, OutParm, IsPlainOldData)
	float                                              TargetLerpAlpha;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TargetLerpInTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXPEC_Enum_LerpType>                   TargetLerpType;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               EnableDebugInfo;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.FindLerpToTargetIndex_CODE
struct ABendXPEC_Util_LerpToTarget_BP_FindLerpToTargetIndex_CODE_Params
{
	class UObject*                                     LerpTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXPEC_Enum_LerpType>                   LerpType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendXPEC_Util_LerpToTarget_BP.CancelLerpToTarget_CODE
struct ABendXPEC_Util_LerpToTarget_BP_CancelLerpToTarget_CODE_Params
{
	class UObject*                                     LerpTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXPEC_Enum_LerpType>                   LerpType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BlindfireTargetWidget.SetAccuracy
struct UBlindfireTargetWidget_SetAccuracy_Params
{
	float                                              AccuracyScale;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BlueprintNoise.Hammersley2D
struct UBlueprintNoise_Hammersley2D_Params
{
	int                                                Size;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BlueprintTextureNodes.TextureIndex
struct UBlueprintTextureNodes_TextureIndex_Params
{
	int                                                SizeX;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                SizeY;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                BytesPerPixel;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              U;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                InTextureChannel;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BlueprintTextureNodes.TextureData
struct UBlueprintTextureNodes_TextureData_Params
{
	int                                                SizeX;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                BytesPerPixel;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  InTexture;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.CollectiblesMenuAudioHelper.StopSound
struct UCollectiblesMenuAudioHelper_StopSound_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CollectiblesMenuAudioHelper.PlaySound
struct UCollectiblesMenuAudioHelper_PlaySound_Params
{
	TAssetPtr<class USoundCue>                         SoundCueAsset;                                            // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CollectiblesMenuAudioHelper.OnSoundLoaded
struct UCollectiblesMenuAudioHelper_OnSoundLoaded_Params
{
	TAssetPtr<class USoundCue>                         SoundCueAsset;                                            // (Parm)
};

// Function BendGame.CollectiblesMenuAudioHelper.OnSoundFinishedCallback
struct UCollectiblesMenuAudioHelper_OnSoundFinishedCallback_Params
{
};

// Function BendGame.CollectiblesMenuAudioHelper.IsSoundPlaying
struct UCollectiblesMenuAudioHelper_IsSoundPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CollectiblesMenuAudioHelper.GetCollectibleAudioHelper
struct UCollectiblesMenuAudioHelper_GetCollectibleAudioHelper_Params
{
	class UCollectiblesMenuAudioHelper*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CollectiblesMenuAudioHelper.DestroyCollectibleAudioHelper
struct UCollectiblesMenuAudioHelper_DestroyCollectibleAudioHelper_Params
{
};

// Function BendGame.ComponentLibrary.SetInstanceTransform
struct UComponentLibrary_SetInstanceTransform_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  InTransform;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.SetInstanceRenderStateDirty
struct UComponentLibrary_SetInstanceRenderStateDirty_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.MarkInstanceRenderTransformDirty
struct UComponentLibrary_MarkInstanceRenderTransformDirty_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.ListComponentChildren
struct UComponentLibrary_ListComponentChildren_Params
{
	class USceneComponent*                             AttachParent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class USceneComponent*>                     OutComponentList;                                         // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.ComponentLibrary.GetInstancePosition
struct UComponentLibrary_GetInstancePosition_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.GetInstanceCount
struct UComponentLibrary_GetInstanceCount_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.CastInstancedStaticMeshComponent
struct UComponentLibrary_CastInstancedStaticMeshComponent_Params
{
	class USceneComponent*                             SceneComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInstancedStaticMeshComponent*               OutComponent;                                             // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.ComponentLibrary.ApplyInstanceWorldOffset
struct UComponentLibrary_ApplyInstanceWorldOffset_Params
{
	class USceneComponent*                             InstancedStaticMeshComponent;                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     InOffset;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.UpdateOnFinishedSendingAllEndOfFrameUpdates
struct ACrowdManagerActor_UpdateOnFinishedSendingAllEndOfFrameUpdates_Params
{
};

// Function BendGame.CrowdManagerActor.StopStatusEffectsOfType
struct ACrowdManagerActor_StopStatusEffectsOfType_Params
{
	struct FBendCrowdMemberHandle                      CrowdMemberHandle;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EStatusEffects>                        Type;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetStreamingDistanceMultiplier
struct ACrowdManagerActor_SetStreamingDistanceMultiplier_Params
{
	float                                              StreamingDistanceMultiplier;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetMaxCrowdMembersActiveToDefault
struct ACrowdManagerActor_SetMaxCrowdMembersActiveToDefault_Params
{
};

// Function BendGame.CrowdManagerActor.SetMaxCrowdMembersActive
struct ACrowdManagerActor_SetMaxCrowdMembersActive_Params
{
	int                                                MaxActive;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetLodLimits
struct ACrowdManagerActor_SetLodLimits_Params
{
	int                                                MinLOD;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxLod;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetCrowdWaypointSequence
struct ACrowdManagerActor_SetCrowdWaypointSequence_Params
{
	class ABendCrowdGroup*                             Group;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIWaypointSequence*                     WaypointSequence;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetCrowdPromotionMode
struct ACrowdManagerActor_SetCrowdPromotionMode_Params
{
	TEnumAsByte<EBendCrowdPromotionMode>               Mode;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetCrowdMembersRenderCustomDepth
struct ACrowdManagerActor_SetCrowdMembersRenderCustomDepth_Params
{
	bool                                               bSetRenderCustomDepth;                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.SetCrowdCinematicMode
struct ACrowdManagerActor_SetCrowdCinematicMode_Params
{
	bool                                               bInCinematicMode;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.RequestPromoteCrowdMember_Immediate
struct ACrowdManagerActor_RequestPromoteCrowdMember_Immediate_Params
{
	struct FBendCrowdMemberHandle                      CrowdMemberHandle;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ForcedPromotionTime;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForcedPromotionMaxDist;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class APawn*                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.OnWorldEdgeChanged
struct ACrowdManagerActor_OnWorldEdgeChanged_Params
{
	struct FTraversalEdge                              ChangedEdge;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.CrowdManagerActor.OnPlayerRespawned
struct ACrowdManagerActor_OnPlayerRespawned_Params
{
	class ABendPlayerController*                       PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.OnMissionEnding
struct ACrowdManagerActor_OnMissionEnding_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.OnDlcChallengeRetry
struct ACrowdManagerActor_OnDlcChallengeRetry_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.OnDLCChallengeQuit
struct ACrowdManagerActor_OnDLCChallengeQuit_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.OnCrowdMemberDied
struct ACrowdManagerActor_OnCrowdMemberDied_Params
{
	float                                              ActualDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 Killer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         FHitComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Momentum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GetMaxCrowdMembersActive
struct ACrowdManagerActor_GetMaxCrowdMembersActive_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GetDefaultGroup
struct ACrowdManagerActor_GetDefaultGroup_Params
{
	class ABendCrowdGroup*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GetClosestIndividualHordeMembersPositions
struct ACrowdManagerActor_GetClosestIndividualHordeMembersPositions_Params
{
	struct FVector                                     fromThisPos;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             listOfPos;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GetClosestHordesCenterPosition
struct ACrowdManagerActor_GetClosestHordesCenterPosition_Params
{
	struct FVector                                     fromThisPos;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     hordePos;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GetBendCrowdManager
struct ACrowdManagerActor_GetBendCrowdManager_Params
{
	class ACrowdManagerActor*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.GenerateCrowdMember
struct ACrowdManagerActor_GenerateCrowdMember_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class ABendCrowdGroup*                             Group;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.ForceCrowdDifficultyHardOrHarder
struct ACrowdManagerActor_ForceCrowdDifficultyHardOrHarder_Params
{
	bool                                               bForce;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.DestroyController
struct ACrowdManagerActor_DestroyController_Params
{
	class ABendCrowdController*                        Controller;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.DestroyAwarenessZone
struct ACrowdManagerActor_DestroyAwarenessZone_Params
{
	struct FBendCrowdAwarenessZoneId                   AwarenessZoneId;                                          // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.CrowdManagerActor.DestroyAllCrowdMembers
struct ACrowdManagerActor_DestroyAllCrowdMembers_Params
{
};

// Function BendGame.CrowdManagerActor.CreateCrowdControllerSingleMember
struct ACrowdManagerActor_CreateCrowdControllerSingleMember_Params
{
	struct FBendCrowdMemberHandle                      ControlledCrowdMember;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	class ABendCrowdController*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.CreateCrowdController
struct ACrowdManagerActor_CreateCrowdController_Params
{
	class ABendCrowdController*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.CreateAwarenessZoneNEW
struct ACrowdManagerActor_CreateAwarenessZoneNEW_Params
{
	class UClass*                                      DataClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdAwarenessZoneId                   AwarenessZoneId;                                          // (Parm, OutParm)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachParent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.CreateAwarenessZoneForGroupsNEW
struct ACrowdManagerActor_CreateAwarenessZoneForGroupsNEW_Params
{
	class UClass*                                      DataClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdAwarenessZoneId                   AwarenessZoneId;                                          // (Parm, OutParm)
	TArray<class ABendCrowdGroup*>                     GroupsToAlert;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachParent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.CreateAwarenessZoneForGroups
struct ACrowdManagerActor_CreateAwarenessZoneForGroups_Params
{
	class UClass*                                      DataClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdAwarenessZoneId                   AwarenessZoneId;                                          // (Parm, OutParm)
	TArray<class ABendCrowdGroup*>                     GroupsToAlert;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachParent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.CreateAwarenessZone
struct ACrowdManagerActor_CreateAwarenessZone_Params
{
	class UClass*                                      DataClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBendCrowdAwarenessZoneId                   AwarenessZoneId;                                          // (Parm, OutParm)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachParent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AreAnyCrowdMembersFrenzied
struct ACrowdManagerActor_AreAnyCrowdMembersFrenzied_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AllGroups_SetWaypointSequence
struct ACrowdManagerActor_AllGroups_SetWaypointSequence_Params
{
	class ABendAIWaypointSequence*                     WaypointSequence;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AllGroups_SetPOI
struct ACrowdManagerActor_AllGroups_SetPOI_Params
{
	class UBendCrowdPOIComponent*                      InPOI;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AllGroups_RemoveExclusionaryFocus
struct ACrowdManagerActor_AllGroups_RemoveExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AllGroups_RemoveAllExclusionaryFocuses
struct ACrowdManagerActor_AllGroups_RemoveAllExclusionaryFocuses_Params
{
};

// Function BendGame.CrowdManagerActor.AllGroups_ForceIgnoreAll
struct ACrowdManagerActor_AllGroups_ForceIgnoreAll_Params
{
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AllGroups_AddExclusionaryFocus
struct ACrowdManagerActor_AllGroups_AddExclusionaryFocus_Params
{
	class AActor*                                      Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.CrowdManagerActor.AddStatusEffect
struct ACrowdManagerActor_AddStatusEffect_Params
{
	struct FBendCrowdMemberHandle                      CrowdMemberHandle;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      Effect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      EffectOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AController*                                 EffectInstigator;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageRate;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.UpdateChallengeTime
struct UDLCChallengeHUDWidget_UpdateChallengeTime_Params
{
	struct FTimespan                                   CurrentTime;                                              // (Parm, ZeroConstructor)
	bool                                               bUseLargeTimer;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.UpdateChallengeScore
struct UDLCChallengeHUDWidget_UpdateChallengeScore_Params
{
	float                                              Points;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.SubobjectiveComplete
struct UDLCChallengeHUDWidget_SubobjectiveComplete_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFailed;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.SetTime
struct UDLCChallengeHUDWidget_SetTime_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   Time;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.DLCChallengeHUDWidget.SetCountdownTime
struct UDLCChallengeHUDWidget_SetCountdownTime_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   TotalTime;                                                // (Parm, ZeroConstructor)
	struct FTimespan                                   RemainingTime;                                            // (Parm, ZeroConstructor)
};

// Function BendGame.DLCChallengeHUDWidget.SetChallengeSkills
struct UDLCChallengeHUDWidget_SetChallengeSkills_Params
{
	TArray<struct FBendSkill>                          Skills;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.DLCChallengeHUDWidget.IsScoreMeterVisible
struct UDLCChallengeHUDWidget_IsScoreMeterVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.DisplaySubobjective
struct UDLCChallengeHUDWidget_DisplaySubobjective_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.DisplaySubChallengeAward
struct UDLCChallengeHUDWidget_DisplaySubChallengeAward_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCChallengeRank>                     SubChallengeRank;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNew;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.DisplayPatchAward
struct UDLCChallengeHUDWidget_DisplayPatchAward_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       SubTitle;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EDLCChallengeRank>                     ChallengeRank;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.DisplayChallenge
struct UDLCChallengeHUDWidget_DisplayChallenge_Params
{
	TEnumAsByte<EDLCChallengeType>                     ChallengeType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       SubTitle;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              GoldPoints;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SilverPoints;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BronzePoints;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSubobjectives;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.DisplayAltScore
struct UDLCChallengeHUDWidget_DisplayAltScore_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCChallengeHUDWidget.ContinueToResults
struct UDLCChallengeHUDWidget_ContinueToResults_Params
{
};

// Function BendGame.DLCChallengeHUDWidget.ChallengeComplete
struct UDLCChallengeHUDWidget_ChallengeComplete_Params
{
	struct FDLCCompleteChallengeData                   CompleteChallengeData;                                    // (Parm)
};

// Function BendGame.DLCGameplayStatics.UnequipRingB
struct UDLCGameplayStatics_UnequipRingB_Params
{
};

// Function BendGame.DLCGameplayStatics.UnequipRingA
struct UDLCGameplayStatics_UnequipRingA_Params
{
};

// Function BendGame.DLCGameplayStatics.UnequipItemBP
struct UDLCGameplayStatics_UnequipItemBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCGameplayStatics.UnequipCharacter
struct UDLCGameplayStatics_UnequipCharacter_Params
{
};

// Function BendGame.DLCGameplayStatics.UnequipBikeSkin
struct UDLCGameplayStatics_UnequipBikeSkin_Params
{
};

// Function BendGame.DLCGameplayStatics.SetTimeBP
struct UDLCGameplayStatics_SetTimeBP_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.SetOwnedItemLevelBP
struct UDLCGameplayStatics_SetOwnedItemLevelBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.SetChallengeScoreBP
struct UDLCGameplayStatics_SetChallengeScoreBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCScoreSubmissionResult>             Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.ResetAllItemsBP
struct UDLCGameplayStatics_ResetAllItemsBP_Params
{
};

// Function BendGame.DLCGameplayStatics.ResetAllChallengesBP
struct UDLCGameplayStatics_ResetAllChallengesBP_Params
{
};

// Function BendGame.DLCGameplayStatics.IsRingEquippedBP
struct UDLCGameplayStatics_IsRingEquippedBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.IsItemUnlockedBP
struct UDLCGameplayStatics_IsItemUnlockedBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               IsUnlocked;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                UnlockRank;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.IsItemEquippedBBP
struct UDLCGameplayStatics_IsItemEquippedBBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.IsCharacterEquippedBP
struct UDLCGameplayStatics_IsCharacterEquippedBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.IsChallengeUnlockedBP
struct UDLCGameplayStatics_IsChallengeUnlockedBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.IsBikeSkinEquippedBP
struct UDLCGameplayStatics_IsBikeSkinEquippedBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.HasPlayedAnyChallenges
struct UDLCGameplayStatics_HasPlayedAnyChallenges_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GiveAllItemsBP
struct UDLCGameplayStatics_GiveAllItemsBP_Params
{
};

// Function BendGame.DLCGameplayStatics.GetWeeklyChallengeLoadoutIndex
struct UDLCGameplayStatics_GetWeeklyChallengeLoadoutIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetSubChallengeDataBP
struct UDLCGameplayStatics_GetSubChallengeDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FSubChallengeData                           Subchallenge;                                             // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetShopPointsForRankBP
struct UDLCGameplayStatics_GetShopPointsForRankBP_Params
{
	TEnumAsByte<EDLCChallengeRank>                     Rank;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetShopPoints
struct UDLCGameplayStatics_GetShopPoints_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetShopPointDisplayModifierBP
struct UDLCGameplayStatics_GetShopPointDisplayModifierBP_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetScoreModifierDataBP
struct UDLCGameplayStatics_GetScoreModifierDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FScoreModifierData                          ScoreModifier;                                            // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetScoreEventDataBP
struct UDLCGameplayStatics_GetScoreEventDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FScoreEventData                             ScoreEvent;                                               // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetRingValueBP
struct UDLCGameplayStatics_GetRingValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetRingSecondaryValueBP
struct UDLCGameplayStatics_GetRingSecondaryValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetRingDataBP
struct UDLCGameplayStatics_GetRingDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRingData                                   Ring;                                                     // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetReputationForRankBP
struct UDLCGameplayStatics_GetReputationForRankBP_Params
{
	TEnumAsByte<EDLCChallengeRank>                     Rank;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetReputationDisplayModifierBP
struct UDLCGameplayStatics_GetReputationDisplayModifierBP_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetReputation
struct UDLCGameplayStatics_GetReputation_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetRankForReputation
struct UDLCGameplayStatics_GetRankForReputation_Params
{
	int                                                Reputation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetRankDataBP
struct UDLCGameplayStatics_GetRankDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRankData                                   Rank;                                                     // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetRank
struct UDLCGameplayStatics_GetRank_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetPatchValueBP
struct UDLCGameplayStatics_GetPatchValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                AtlasID;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetPatchSecondaryValueBP
struct UDLCGameplayStatics_GetPatchSecondaryValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                AtlasID;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetPatchForChallengeBP
struct UDLCGameplayStatics_GetPatchForChallengeBP_Params
{
	struct FGameplayTag                                ChallengeTag;                                             // (Parm)
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetPatchDataBP
struct UDLCGameplayStatics_GetPatchDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FPatchData                                  Patch;                                                    // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetOwnedItemLevelBP
struct UDLCGameplayStatics_GetOwnedItemLevelBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetEquippedRingBBP
struct UDLCGameplayStatics_GetEquippedRingBBP_Params
{
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetEquippedRingABP
struct UDLCGameplayStatics_GetEquippedRingABP_Params
{
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetEquippedCharacterBP
struct UDLCGameplayStatics_GetEquippedCharacterBP_Params
{
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetEquippedBikeSkinBP
struct UDLCGameplayStatics_GetEquippedBikeSkinBP_Params
{
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetDLCSaveDataBP
struct UDLCGameplayStatics_GetDLCSaveDataBP_Params
{
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FDLCSaveData                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetDLCMetaManagerBP
struct UDLCGameplayStatics_GetDLCMetaManagerBP_Params
{
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UDLCMetaManager*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetDLCLeaderboardManagerBP
struct UDLCGameplayStatics_GetDLCLeaderboardManagerBP_Params
{
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class ABendLeaderboardManager*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetDLCDataAssetBP
struct UDLCGameplayStatics_GetDLCDataAssetBP_Params
{
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UDLCDataAsset*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetDisplayValueBP
struct UDLCGameplayStatics_GetDisplayValueBP_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCValueDisplayType>                  DisplayType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetDisplayDataBP
struct UDLCGameplayStatics_GetDisplayDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FDisplayData                                Display;                                                  // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetDisplayAssetsBP
struct UDLCGameplayStatics_GetDisplayAssetsBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                Level;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class UTexture2D>                        Icon;                                                     // (Parm, OutParm)
	TAssetPtr<class UTexture2D>                        Image;                                                    // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetCharacterValueBP
struct UDLCGameplayStatics_GetCharacterValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetCharacterDataBP
struct UDLCGameplayStatics_GetCharacterDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FCharacterData                              Character;                                                // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetChallengeTypeColorBP
struct UDLCGameplayStatics_GetChallengeTypeColorBP_Params
{
	TEnumAsByte<EDLCChallengeType>                     Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Primary;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Secondary;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetChallengeScoreBP
struct UDLCGameplayStatics_GetChallengeScoreBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetChallengeRankForScoreBP
struct UDLCGameplayStatics_GetChallengeRankForScoreBP_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	int                                                Score;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCChallengeRank>                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetChallengeRankColorBP
struct UDLCGameplayStatics_GetChallengeRankColorBP_Params
{
	TEnumAsByte<EDLCChallengeRank>                     Rank;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetChallengeRankBP
struct UDLCGameplayStatics_GetChallengeRankBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDLCChallengeRank>                     Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetChallengeDataBP
struct UDLCGameplayStatics_GetChallengeDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FChallengeData                              CHALLENGE;                                                // (Parm, OutParm)
	TArray<struct FSubChallengeData>                   SubChallenges;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.DLCGameplayStatics.GetBikeSkinValueBP
struct UDLCGameplayStatics_GetBikeSkinValueBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.GetBikeSkinDataBP
struct UDLCGameplayStatics_GetBikeSkinDataBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FBikeSkinData                               BikeSkin;                                                 // (Parm, OutParm)
};

// Function BendGame.DLCGameplayStatics.GetAllSubChallengeTagsBP
struct UDLCGameplayStatics_GetAllSubChallengeTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllScoreModifierTagsBP
struct UDLCGameplayStatics_GetAllScoreModifierTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllScoreEventTagsBP
struct UDLCGameplayStatics_GetAllScoreEventTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllRingTagsBP
struct UDLCGameplayStatics_GetAllRingTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllRankTagsBP
struct UDLCGameplayStatics_GetAllRankTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllPatchTagsBP
struct UDLCGameplayStatics_GetAllPatchTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllOwnedBikeSkinsTagsBP
struct UDLCGameplayStatics_GetAllOwnedBikeSkinsTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllCharacterTagsBP
struct UDLCGameplayStatics_GetAllCharacterTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllChallengeTagsBP
struct UDLCGameplayStatics_GetAllChallengeTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.GetAllBikeSkinTagsBP
struct UDLCGameplayStatics_GetAllBikeSkinTagsBP_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.DLCGameplayStatics.FailChallengeBP
struct UDLCGameplayStatics_FailChallengeBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	struct FText                                       Reason;                                                   // (Parm)
};

// Function BendGame.DLCGameplayStatics.EquipRingBBP
struct UDLCGameplayStatics_EquipRingBBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.EquipRingABP
struct UDLCGameplayStatics_EquipRingABP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.EquipCharacterBP
struct UDLCGameplayStatics_EquipCharacterBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.EquipBikeSkinBP
struct UDLCGameplayStatics_EquipBikeSkinBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	TEnumAsByte<EDLCDataFetchResult>                   Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.DispatchSubChallengeEventBP
struct UDLCGameplayStatics_DispatchSubChallengeEventBP_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
	class AActor*                                      Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Total;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGameplayStatics.DispatchScoreEventBP
struct UDLCGameplayStatics_DispatchScoreEventBP_Params
{
	struct FText                                       Title;                                                    // (Parm)
	class AActor*                                      Instigator;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Total;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Combo;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                ScoreEventTag;                                            // (Parm)
};

// Function BendGame.DLCGameplayStatics.DisableSubChallengeBP
struct UDLCGameplayStatics_DisableSubChallengeBP_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCGameplayStatics.CompleteChallengeBP
struct UDLCGameplayStatics_CompleteChallengeBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                ChallengeScore;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SubChallengeScores;                                       // (Parm, ZeroConstructor)
};

// Function BendGame.DLCGameplayStatics.CompleteAllChallengesBP
struct UDLCGameplayStatics_CompleteAllChallengesBP_Params
{
};

// Function BendGame.DLCGameplayStatics.BeginChallengeBP
struct UDLCGameplayStatics_BeginChallengeBP_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCGridItemWidget.SetSelected
struct UDLCGridItemWidget_SetSelected_Params
{
	bool                                               bIsSelected;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGridItemWidget.SetKey
struct UDLCGridItemWidget_SetKey_Params
{
	struct FName                                       Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGridItemWidget.Invalidate
struct UDLCGridItemWidget_Invalidate_Params
{
};

// Function BendGame.DLCGridWidget.SetSelectedIndex
struct UDLCGridWidget_SetSelectedIndex_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.SetData
struct UDLCGridWidget_SetData_Params
{
	TArray<struct FDLCGridWidgetData>                  InData;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.DLCGridWidget.Rows
struct UDLCGridWidget_Rows_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.InvalidateData
struct UDLCGridWidget_InvalidateData_Params
{
};

// Function BendGame.DLCGridWidget.GetSelectedLocation
struct UDLCGridWidget_GetSelectedLocation_Params
{
	int                                                Column;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Row;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.GetSelectedIndex
struct UDLCGridWidget_GetSelectedIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.CursorUp
struct UDLCGridWidget_CursorUp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.CursorRight
struct UDLCGridWidget_CursorRight_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.CursorLeft
struct UDLCGridWidget_CursorLeft_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.CursorDown
struct UDLCGridWidget_CursorDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCGridWidget.Columns
struct UDLCGridWidget_Columns_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.SetPageIndex
struct UDLCLeaderboardList_SetPageIndex_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.SetLeaderboard
struct UDLCLeaderboardList_SetLeaderboard_Params
{
	TEnumAsByte<EBendLeaderboardID>                    Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELeaderboardType>                      Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.SetData
struct UDLCLeaderboardList_SetData_Params
{
	TArray<struct FBendRankInfo>                       InData;                                                   // (Parm, ZeroConstructor)
};

// Function BendGame.DLCLeaderboardList.OnPlayerScoreRecieved
struct UDLCLeaderboardList_OnPlayerScoreRecieved_Params
{
	TEnumAsByte<EBendLeaderboardID>                    Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.OnGlobalLeaderboardReceived
struct UDLCLeaderboardList_OnGlobalLeaderboardReceived_Params
{
	TEnumAsByte<EBendLeaderboardID>                    Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.OnFriendsLeaderboardReceived
struct UDLCLeaderboardList_OnFriendsLeaderboardReceived_Params
{
	TEnumAsByte<EBendLeaderboardID>                    Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.InvalidateRank
struct UDLCLeaderboardList_InvalidateRank_Params
{
	int                                                Rank;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.Invalidate
struct UDLCLeaderboardList_Invalidate_Params
{
};

// Function BendGame.DLCLeaderboardList.GetPageIndex
struct UDLCLeaderboardList_GetPageIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.GetPageCount
struct UDLCLeaderboardList_GetPageCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardList.GetItemCount
struct UDLCLeaderboardList_GetItemCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCLeaderboardListItem.Invalidate
struct UDLCLeaderboardListItem_Invalidate_Params
{
};

// Function BendGame.DLCMenuPage.RecieveUp
struct UDLCMenuPage_RecieveUp_Params
{
};

// Function BendGame.DLCMenuPage.RecieveTriangleHoldUpdate
struct UDLCMenuPage_RecieveTriangleHoldUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.RecieveTriangleHeld
struct UDLCMenuPage_RecieveTriangleHeld_Params
{
};

// Function BendGame.DLCMenuPage.RecieveTriangle
struct UDLCMenuPage_RecieveTriangle_Params
{
};

// Function BendGame.DLCMenuPage.RecieveSquareHoldUpdate
struct UDLCMenuPage_RecieveSquareHoldUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.RecieveSquareHeld
struct UDLCMenuPage_RecieveSquareHeld_Params
{
};

// Function BendGame.DLCMenuPage.RecieveSquare
struct UDLCMenuPage_RecieveSquare_Params
{
};

// Function BendGame.DLCMenuPage.RecieveRight
struct UDLCMenuPage_RecieveRight_Params
{
};

// Function BendGame.DLCMenuPage.RecieveR2
struct UDLCMenuPage_RecieveR2_Params
{
};

// Function BendGame.DLCMenuPage.RecieveR1
struct UDLCMenuPage_RecieveR1_Params
{
};

// Function BendGame.DLCMenuPage.RecieveLeft
struct UDLCMenuPage_RecieveLeft_Params
{
};

// Function BendGame.DLCMenuPage.RecieveL2
struct UDLCMenuPage_RecieveL2_Params
{
};

// Function BendGame.DLCMenuPage.RecieveL1
struct UDLCMenuPage_RecieveL1_Params
{
};

// Function BendGame.DLCMenuPage.RecieveDown
struct UDLCMenuPage_RecieveDown_Params
{
};

// Function BendGame.DLCMenuPage.RecieveCrossHoldUpdate
struct UDLCMenuPage_RecieveCrossHoldUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.RecieveCrossHeld
struct UDLCMenuPage_RecieveCrossHeld_Params
{
};

// Function BendGame.DLCMenuPage.RecieveCross
struct UDLCMenuPage_RecieveCross_Params
{
};

// Function BendGame.DLCMenuPage.RecieveCircleHoldUpdate
struct UDLCMenuPage_RecieveCircleHoldUpdate_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.RecieveCircleHeld
struct UDLCMenuPage_RecieveCircleHeld_Params
{
};

// Function BendGame.DLCMenuPage.RecieveCircle
struct UDLCMenuPage_RecieveCircle_Params
{
};

// Function BendGame.DLCMenuPage.OnTriangleHold
struct UDLCMenuPage_OnTriangleHold_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.OnSquareHold
struct UDLCMenuPage_OnSquareHold_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.OnCrossHold
struct UDLCMenuPage_OnCrossHold_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.OnCircleHold
struct UDLCMenuPage_OnCircleHold_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCMenuPage.FlushHeldInput
struct UDLCMenuPage_FlushHeldInput_Params
{
};

// Function BendGame.DLCUIManager.UpdateChallengeScore
struct ADLCUIManager_UpdateChallengeScore_Params
{
	int                                                Points;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUIManager.SetTime
struct ADLCUIManager_SetTime_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   Time;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.DLCUIManager.SetHudVisible
struct ADLCUIManager_SetHudVisible_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUIManager.SetDashboardVisible
struct ADLCUIManager_SetDashboardVisible_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUIManager.SetCountdownTime
struct ADLCUIManager_SetCountdownTime_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   TotalTime;                                                // (Parm, ZeroConstructor)
	struct FTimespan                                   RemainingTime;                                            // (Parm, ZeroConstructor)
};

// Function BendGame.DLCUIManager.SetChallengeSkills
struct ADLCUIManager_SetChallengeSkills_Params
{
	TArray<struct FBendSkill>                          Skills;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.DLCUIManager.ReceiveChallengeComplete
struct ADLCUIManager_ReceiveChallengeComplete_Params
{
	struct FDLCCompleteChallengeData                   CompleteChallengeData;                                    // (Parm)
};

// Function BendGame.DLCUIManager.IsPauseBlockedByHUD
struct ADLCUIManager_IsPauseBlockedByHUD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUIManager.IsHudVisible
struct ADLCUIManager_IsHudVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUIManager.InitializeChallengeHUD
struct ADLCUIManager_InitializeChallengeHUD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUIManager.GetDLCUIManager
struct ADLCUIManager_GetDLCUIManager_Params
{
	class ADLCUIManager*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUIManager.GetChallengeHUD
struct ADLCUIManager_GetChallengeHUD_Params
{
	class UDLCChallengeHUDWidget*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUIManager.FailSubChallenge
struct ADLCUIManager_FailSubChallenge_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCUIManager.FailChallenge
struct ADLCUIManager_FailChallenge_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	struct FText                                       Reason;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.DLCUIManager.DispatchSubChallengeEvent
struct ADLCUIManager_DispatchSubChallengeEvent_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
	class AActor*                                      EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Total;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUIManager.DispatchScoreEvent
struct ADLCUIManager_DispatchScoreEvent_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Total;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Combo;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                ScoreEventTag;                                            // (Parm)
};

// Function BendGame.DLCUIManager.DispatchAltScoreEvent
struct ADLCUIManager_DispatchAltScoreEvent_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUIManager.DisableSubChallenge
struct ADLCUIManager_DisableSubChallenge_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCUIManager.DestroyChallengeHUD
struct ADLCUIManager_DestroyChallengeHUD_Params
{
};

// Function BendGame.DLCUIManager.ContinueToResults
struct ADLCUIManager_ContinueToResults_Params
{
};

// Function BendGame.DLCUIManager.CompleteSubChallenge
struct ADLCUIManager_CompleteSubChallenge_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCUIManager.CompleteChallenge
struct ADLCUIManager_CompleteChallenge_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
	int                                                ChallengeScore;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SubChallengeScores;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTimespan                                   TotalTime;                                                // (Parm, ZeroConstructor)
};

// Function BendGame.DLCUIManager.BeginChallenge
struct ADLCUIManager_BeginChallenge_Params
{
	struct FGameplayTag                                Key;                                                      // (Parm)
};

// Function BendGame.DLCUnlockedItemsManager.SetRings
struct ADLCUnlockedItemsManager_SetRings_Params
{
};

// Function BendGame.DLCUnlockedItemsManager.SetPatchs
struct ADLCUnlockedItemsManager_SetPatchs_Params
{
	class UMaterialInstanceDynamic*                    DynamicMaterialInstance;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.SetCharSkin
struct ADLCUnlockedItemsManager_SetCharSkin_Params
{
	bool                                               isDefault;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.SetBikeSkin
struct ADLCUnlockedItemsManager_SetBikeSkin_Params
{
};

// Function BendGame.DLCUnlockedItemsManager.ResetCharBind
struct ADLCUnlockedItemsManager_ResetCharBind_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.ResetChar
struct ADLCUnlockedItemsManager_ResetChar_Params
{
};

// Function BendGame.DLCUnlockedItemsManager.GetDLCUnlockedItemsManager
struct ADLCUnlockedItemsManager_GetDLCUnlockedItemsManager_Params
{
	class ADLCUnlockedItemsManager*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.ApplyPatches
struct ADLCUnlockedItemsManager_ApplyPatches_Params
{
	class ABendPlayerPawn*                             PlayerPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      playerMesh;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.ApplyDLCItemsBind
struct ADLCUnlockedItemsManager_ApplyDLCItemsBind_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DLCUnlockedItemsManager.ApplyDLCItems
struct ADLCUnlockedItemsManager_ApplyDLCItems_Params
{
};

// Function BendGame.DynamicAssetSpawner.SetStartAwake
struct ADynamicAssetSpawner_SetStartAwake_Params
{
	class UStaticMeshComponent*                        Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               NewStartAwake;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DynamicAssetSpawner.SetMobility_Spawner
struct ADynamicAssetSpawner_SetMobility_Spawner_Params
{
	class USceneComponent*                             SceneComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EComponentMobility>                    NewMobility;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.DynamicAssetSpawner.SetCanEverAffectNavigation
struct ADynamicAssetSpawner_SetCanEverAffectNavigation_Params
{
	class UStaticMeshComponent*                        Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               NewCanEverAffectNavigation;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendHangingDynamicProp.EndOverlap
struct ABendHangingDynamicProp_EndOverlap_Params
{
};

// Function BendGame.BendHangingDynamicProp.BeginOverlap
struct ABendHangingDynamicProp_BeginOverlap_Params
{
};

// Function BendGame.FlickeringSpotLightComponent.UpdateLightFlickering
struct UFlickeringSpotLightComponent_UpdateLightFlickering_Params
{
	float                                              CurveValue;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FlickeringSpotLightComponent.TickLightFlickering
struct UFlickeringSpotLightComponent_TickLightFlickering_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FlickeringSpotLightComponent.SetupFlickering
struct UFlickeringSpotLightComponent_SetupFlickering_Params
{
};

// Function BendGame.FocusModeIconManager.OnFocusModeToggle
struct AFocusModeIconManager_OnFocusModeToggle_Params
{
	bool                                               EnteredFocusMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FocusModeIconManager.OnFocusFadingFinished
struct AFocusModeIconManager_OnFocusFadingFinished_Params
{
};

// Function BendGame.FogOfWar.WorldLocationToPixel
struct AFogOfWar_WorldLocationToPixel_Params
{
	struct FVector                                     InWorldLocation;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FogOfWar.TextureUpdated
struct AFogOfWar_TextureUpdated_Params
{
};

// Function BendGame.FogOfWar.IsWorldLocationInFog
struct AFogOfWar_IsWorldLocationInFog_Params
{
	struct FVector                                     InWorldLocation;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FogOfWar.IsPixelFilled
struct AFogOfWar_IsPixelFilled_Params
{
	int                                                X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FogOfWar.GetDynamicMaterialInstance
struct AFogOfWar_GetDynamicMaterialInstance_Params
{
	class UMaterialInstanceDynamic*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FogOfWar.FillPixelFromWorldLocation
struct AFogOfWar_FillPixelFromWorldLocation_Params
{
	struct FVector                                     InWorldLocation;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.FogOfWar.FillPixel
struct AFogOfWar_FillPixel_Params
{
	int                                                X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FogOfWar.DataSaved
struct AFogOfWar_DataSaved_Params
{
};

// Function BendGame.FogOfWar.DataLoaded
struct AFogOfWar_DataLoaded_Params
{
};

// Function BendGame.FogOfWar.CopyDataToTexture
struct AFogOfWar_CopyDataToTexture_Params
{
};

// Function BendGame.FogOfWar.CopyDataToRenderTarget
struct AFogOfWar_CopyDataToRenderTarget_Params
{
	struct FVector2D                                   ScreenSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBlendMode>                            BlendMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FogOfWar.ClearPixel
struct AFogOfWar_ClearPixel_Params
{
	int                                                X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.FogOfWar.ClearData
struct AFogOfWar_ClearData_Params
{
	struct FColor                                      Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.GameCheatMenu.ZoomToLocation
struct AGameCheatMenu_ZoomToLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.GameCheatMenu.ToggleCheatMenu
struct AGameCheatMenu_ToggleCheatMenu_Params
{
};

// Function BendGame.GameCheatMenu.HideCheatMenu
struct AGameCheatMenu_HideCheatMenu_Params
{
};

// Function BendGame.GameCheatMenu.GetWorldDebugMenu
struct AGameCheatMenu_GetWorldDebugMenu_Params
{
	class AWorldDebugMenu*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GameCheatMenu.ConsoleCommandCallback
struct AGameCheatMenu_ConsoleCommandCallback_Params
{
	struct FString                                     Command;                                                  // (Parm, ZeroConstructor)
};

// Function BendGame.GameDebugMenu.GetPlayerPawn
struct AGameDebugMenu_GetPlayerPawn_Params
{
	class ABendPlayerPawn*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GameDebugMenu.GetPlayerInventory
struct AGameDebugMenu_GetPlayerInventory_Params
{
	class UPlayerInventoryComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.GameDebugMenu.GetPlayerController
struct AGameDebugMenu_GetPlayerController_Params
{
	class ABendPlayerController*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GameDebugMenu.GetBendHUD
struct AGameDebugMenu_GetBendHUD_Params
{
	class ABendHUD*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GameDebugMenu.AddWeaponToInventory
struct AGameDebugMenu_AddWeaponToInventory_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WorldDebugMenu.ZoomToLocation
struct AWorldDebugMenu_ZoomToLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WorldDebugMenu.SetOrthographic
struct AWorldDebugMenu_SetOrthographic_Params
{
	bool                                               IsOrthographic;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WorldDebugMenu.MapRenderSectors
struct AWorldDebugMenu_MapRenderSectors_Params
{
	TArray<struct FString>                             Sectors;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.WorldDebugMenu.MapRenderSectorRange
struct AWorldDebugMenu_MapRenderSectorRange_Params
{
	int                                                SectorYStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SectorXStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SectorYEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SectorXEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.GameDebugOption.SetCallbackDelegate
struct UGameDebugOption_SetCallbackDelegate_Params
{
	class UObject*                                     TheObject;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	struct FString                                     DebugOptionName;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.GameDebugOption.GetDebugOptionIntValue
struct UGameDebugOption_GetDebugOptionIntValue_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GameDebugOption.GetDebugOptionFloatValue
struct UGameDebugOption_GetDebugOptionFloatValue_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.GridMenuItem.SyncCursor
struct UGridMenuItem_SyncCursor_Params
{
};

// Function BendGame.HudNotificationItemWidget.RemoveCurrentNotification
struct UHudNotificationItemWidget_RemoveCurrentNotification_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudNotificationItemWidget.OnNotificationAdded
struct UHudNotificationItemWidget_OnNotificationAdded_Params
{
};

// Function BendGame.HudNotificationItemWidget.NumNotifications
struct UHudNotificationItemWidget_NumNotifications_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudNotificationItemWidget.HasPendingNotification
struct UHudNotificationItemWidget_HasPendingNotification_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudNotificationItemWidget.CanInterruptCurrentNotification
struct UHudNotificationItemWidget_CanInterruptCurrentNotification_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudNotificationItemWidget.AddNotification
struct UHudNotificationItemWidget_AddNotification_Params
{
	struct FNotificationDetails                        Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.HudNotificationWidget.SetNotificationsPaused
struct UHudNotificationWidget_SetNotificationsPaused_Params
{
	bool                                               Paused;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudNotificationWidget.GetNotificationWidget
struct UHudNotificationWidget_GetNotificationWidget_Params
{
	TEnumAsByte<ENotification>                         Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UHudNotificationItemWidget*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudNotificationWidget.AddNotification
struct UHudNotificationWidget_AddNotification_Params
{
	struct FNotificationDetails                        Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.HudWeapon.UpdateStamina
struct UHudWeapon_UpdateStamina_Params
{
	float                                              Stamina;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWeapon.UpdateHealthStamina
struct UHudWeapon_UpdateHealthStamina_Params
{
};

// Function BendGame.HudWeapon.UpdateHealth
struct UHudWeapon_UpdateHealth_Params
{
	float                                              Health;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWeapon.ShowHealthAndStamina
struct UHudWeapon_ShowHealthAndStamina_Params
{
};

// Function BendGame.HudWeapon.DisplayHealthAndStamina
struct UHudWeapon_DisplayHealthAndStamina_Params
{
	bool                                               State;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWeapon.CheckStamina
struct UHudWeapon_CheckStamina_Params
{
	bool                                               Changed;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Stamina;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.HudWeapon.CheckHealth
struct UHudWeapon_CheckHealth_Params
{
	bool                                               Changed;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Health;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InputMenuWidget.SetInpuEnabled
struct UInputMenuWidget_SetInpuEnabled_Params
{
	bool                                               IsEnabled;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InputMenuWidget.IsInputEnabled
struct UInputMenuWidget_IsInputEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InputMenuWidget.InputKeyPressed
struct UInputMenuWidget_InputKeyPressed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractComponent.SetInteractCurrentlyUsing
struct UInteractComponent_SetInteractCurrentlyUsing_Params
{
	bool                                               IsUsing;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InteractComponent.SetInteractable
struct UInteractComponent_SetInteractable_Params
{
	bool                                               Interactable;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InteractComponent.ResetLOSVariables
struct UInteractComponent_ResetLOSVariables_Params
{
};

// Function BendGame.InteractComponent.InteractLostFocus
struct UInteractComponent_InteractLostFocus_Params
{
};

// Function BendGame.InteractComponent.InteractGainFocus
struct UInteractComponent_InteractGainFocus_Params
{
};

// Function BendGame.InteractComponent.GetInteractLocation
struct UInteractComponent_GetInteractLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractComponent.CanRecieveFocus
struct UInteractComponent_CanRecieveFocus_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InteractManager.ForceResetLOSChecksOnAllInteracts
struct UInteractManager_ForceResetLOSChecksOnAllInteracts_Params
{
};

// Function BendGame.InventoryGameplayStatics.SpawnWeaponLatentDelegate
struct UInventoryGameplayStatics_SpawnWeaponLatentDelegate_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	struct FScriptDelegate                             OnSpawned;                                                // (Parm, ZeroConstructor)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.InventoryGameplayStatics.SpawnWeaponLatent
struct UInventoryGameplayStatics_SpawnWeaponLatent_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	class ABendWeapon*                                 ReturnWeapon;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.InventoryGameplayStatics.SetInventoryItemStat
struct UInventoryGameplayStatics_SetInventoryItemStat_Params
{
	TEnumAsByte<EInventoryItemStat>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ValuePercent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryItemStats                         Stats;                                                    // (Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryGameplayStatics.PawnUseConsumable
struct UInventoryGameplayStatics_PawnUseConsumable_Params
{
	class ABendPlayerPawn*                             Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemConsumable*                    Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.PawnDropItem
struct UInventoryGameplayStatics_PawnDropItem_Params
{
	class ABendPlayerPawn*                             Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendInventoryPickup*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.PawnCraftRecipe
struct UInventoryGameplayStatics_PawnCraftRecipe_Params
{
	class ABendPlayerPawn*                             Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.PawnCraftItem
struct UInventoryGameplayStatics_PawnCraftItem_Params
{
	class ABendPlayerPawn*                             Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetPlayerWeaponPartStorage
struct UInventoryGameplayStatics_GetPlayerWeaponPartStorage_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryWeaponPartStorage*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetPlayerInventoryComponent
struct UInventoryGameplayStatics_GetPlayerInventoryComponent_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UPlayerInventoryComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetPlayerEquipmentStorage
struct UInventoryGameplayStatics_GetPlayerEquipmentStorage_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryEquipmentStorage*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetPlayerBikePartStorage
struct UInventoryGameplayStatics_GetPlayerBikePartStorage_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryBikePartStorage*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetInventoryItemStatIndex
struct UInventoryGameplayStatics_GetInventoryItemStatIndex_Params
{
	TEnumAsByte<EInventoryItemStat>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryItemStats                         Stats;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.GetInventoryItemStat
struct UInventoryGameplayStatics_GetInventoryItemStat_Params
{
	TEnumAsByte<EInventoryItemStat>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryItemStats                         Stats;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.FreeInventoryItemAssets
struct UInventoryGameplayStatics_FreeInventoryItemAssets_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.Debug_AddWeaponToInventory
struct UInventoryGameplayStatics_Debug_AddWeaponToInventory_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	int                                                Quantity;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.CacheInventoryItemAssets
struct UInventoryGameplayStatics_CacheInventoryItemAssets_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.AreInventoryGuidsEqual
struct UInventoryGameplayStatics_AreInventoryGuidsEqual_Params
{
	struct FInventoryGuid                              GuidA;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInventoryGuid                              GuidB;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryGameplayStatics.AddRecipeComponents
struct UInventoryGameplayStatics_AddRecipeComponents_Params
{
	class UPlayerInventoryComponent*                   PlayerInv;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryItem*                              ItemRecipe;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemActor.SetStorageWeapon
struct AInventoryItemActor_SetStorageWeapon_Params
{
	struct FInventoryStorageWeapon                     DisplayWeapon;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryItemActor.SetItem
struct AInventoryItemActor_SetItem_Params
{
	class UInventoryItem*                              DisplayItem;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.NumBikePartsOfType
struct UInventoryItemManager_NumBikePartsOfType_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.GetTextureTagManager
struct UInventoryItemManager_GetTextureTagManager_Params
{
	class UInventoryTextureTagLibraryMgr*              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.GetRecipesUsingItem
struct UInventoryItemManager_GetRecipesUsingItem_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.InventoryItemManager.GetItemFromFromIDDetails
struct UInventoryItemManager_GetItemFromFromIDDetails_Params
{
	struct FInventoryIDDetails                         Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.GetItemByTag
struct UInventoryItemManager_GetItemByTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.GetInventoryItemManager
struct UInventoryItemManager_GetInventoryItemManager_Params
{
	class UInventoryItemManager*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.GetAmmoItem
struct UInventoryItemManager_GetAmmoItem_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemAmmo*                          ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.FindItemByTypeAndIndex
struct UInventoryItemManager_FindItemByTypeAndIndex_Params
{
	int                                                Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.FindItemByTag
struct UInventoryItemManager_FindItemByTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (Parm)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.FindItemByKey
struct UInventoryItemManager_FindItemByKey_Params
{
	int                                                Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.FindItemByInventoryTypeAndIndex
struct UInventoryItemManager_FindItemByInventoryTypeAndIndex_Params
{
	TEnumAsByte<EInventoryBaseType>                    Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.BikePartByTag
struct UInventoryItemManager_BikePartByTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UInventoryItemMotorcyclePart*                ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemManager.BikePartByID
struct UInventoryItemManager_BikePartByID_Params
{
	TEnumAsByte<EMotorcyclePartType>                   PartType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                PartID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItemMotorcyclePart*                ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SyncSlotCount
struct UInventoryItemWidget_SyncSlotCount_Params
{
};

// Function BendGame.InventoryItemWidget.SyncItemCount
struct UInventoryItemWidget_SyncItemCount_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SyncItem
struct UInventoryItemWidget_SyncItem_Params
{
	bool                                               ContainsItem;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SyncBadgeIcon
struct UInventoryItemWidget_SyncBadgeIcon_Params
{
	TEnumAsByte<EInventoryItemWidgetBadge>             InBadgeType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryItemWidgetBadgeIcon>         InBadgeIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SetStorageItem
struct UInventoryItemWidget_SetStorageItem_Params
{
	struct FInventoryStorageItem                       StorageItem;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryItemWidget.SetState_Selected
struct UInventoryItemWidget_SetState_Selected_Params
{
};

// Function BendGame.InventoryItemWidget.SetState_Disabled
struct UInventoryItemWidget_SetState_Disabled_Params
{
};

// Function BendGame.InventoryItemWidget.SetState_Default
struct UInventoryItemWidget_SetState_Default_Params
{
};

// Function BendGame.InventoryItemWidget.SetSelected
struct UInventoryItemWidget_SetSelected_Params
{
	bool                                               Selected;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SetRecipeCraftState
struct UInventoryItemWidget_SetRecipeCraftState_Params
{
	TEnumAsByte<ERecipeCraftState>                     InRecipeState;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SetItemBgTexture
struct UInventoryItemWidget_SetItemBgTexture_Params
{
	class UTexture2D*                                  Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SetInventoryItem
struct UInventoryItemWidget_SetInventoryItem_Params
{
	class UInventoryItem*                              InItem;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                InCount;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SyncWidget;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.SetBadgeIcon
struct UInventoryItemWidget_SetBadgeIcon_Params
{
	TEnumAsByte<EInventoryItemWidgetBadge>             InBadgeType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryItemWidgetBadgeIcon>         InBadgeIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ItemUsedInRecipes
struct UInventoryItemWidget_ItemUsedInRecipes_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ItemType
struct UInventoryItemWidget_ItemType_Params
{
	TEnumAsByte<EInventoryBaseType>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ItemTexture
struct UInventoryItemWidget_ItemTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ItemName
struct UInventoryItemWidget_ItemName_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItemWidget.ItemDescription
struct UInventoryItemWidget_ItemDescription_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryItemWidget.ItemCount
struct UInventoryItemWidget_ItemCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.GetItemBP
struct UInventoryItemWidget_GetItemBP_Params
{
	class UInventoryItem*                              ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ContainsItemWithValidCount
struct UInventoryItemWidget_ContainsItemWithValidCount_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryItemWidget.ContainsItem
struct UInventoryItemWidget_ContainsItem_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryMenuDetailsWidget.SetMenuSlot
struct UInventoryMenuDetailsWidget_SetMenuSlot_Params
{
	struct FInventoryMenuSlotBase                      Item;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryMenuDetailsWidget.SetItem
struct UInventoryMenuDetailsWidget_SetItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentSlot.SetWeapon
struct UInventoryEquipmentSlot_SetWeapon_Params
{
	class UInventoryWeaponItem*                        Weapon;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentSlot.SetStorageWeapon
struct UInventoryEquipmentSlot_SetStorageWeapon_Params
{
	struct FInventoryStorageWeapon                     Weapon;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentSlot.RemoveWeapon
struct UInventoryEquipmentSlot_RemoveWeapon_Params
{
};

// Function BendGame.InventoryAmmoStorage.SetThrownAmmoCapacity
struct UInventoryAmmoStorage_SetThrownAmmoCapacity_Params
{
	int                                                MaxCapacity;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.SetAmmoCount
struct UInventoryAmmoStorage_SetAmmoCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.SetAmmoCapacity
struct UInventoryAmmoStorage_SetAmmoCapacity_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxCapacity;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.GetAmmoSlot
struct UInventoryAmmoStorage_GetAmmoSlot_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryEquipmentAmmoSlot*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.AmmoFull
struct UInventoryAmmoStorage_AmmoFull_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.AmmoCount
struct UInventoryAmmoStorage_AmmoCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.AmmoCapacity
struct UInventoryAmmoStorage_AmmoCapacity_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryAmmoStorage.AdjustCount
struct UInventoryAmmoStorage_AdjustCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.TakeAmmoFromBike
struct UInventoryBikeStorage_TakeAmmoFromBike_Params
{
	struct FGameplayTag                                BikeAmmoTag;                                              // (Parm)
	TEnumAsByte<EInventoryAmmoID>                      WeaponAmmoID;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.SetBikeAmmoStorageCapacity
struct UInventoryBikeStorage_SetBikeAmmoStorageCapacity_Params
{
	struct FGameplayTag                                BikeAmmoTag;                                              // (Parm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.ReturnBikeAmmo_MerchantOnly
struct UInventoryBikeStorage_ReturnBikeAmmo_MerchantOnly_Params
{
	struct FInventoryBikeStorageAmmo                   Ammo;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryBikeStorage.PutAmmoOnTheBike
struct UInventoryBikeStorage_PutAmmoOnTheBike_Params
{
	struct FGameplayTag                                AmmoTag;                                                  // (Parm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.MaxAmmoCount
struct UInventoryBikeStorage_MaxAmmoCount_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.GetGenericAmmoTagFromAmmoID
struct UInventoryBikeStorage_GetGenericAmmoTagFromAmmoID_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryBikeStorage.GetCurrentBikeAmmo
struct UInventoryBikeStorage_GetCurrentBikeAmmo_Params
{
	struct FInventoryBikeStorageAmmo                   ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryBikeStorage.FillBikeAmmo
struct UInventoryBikeStorage_FillBikeAmmo_Params
{
};

// Function BendGame.InventoryBikeStorage.DoesBikeHaveAnyAmmo
struct UInventoryBikeStorage_DoesBikeHaveAnyAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.CurrentAmmoCount
struct UInventoryBikeStorage_CurrentAmmoCount_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.CountToFillAmmo
struct UInventoryBikeStorage_CountToFillAmmo_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.ContainsAmmoTag
struct UInventoryBikeStorage_ContainsAmmoTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.CanPlayerHoldMoreAmmo
struct UInventoryBikeStorage_CanPlayerHoldMoreAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.CanBikeStoreAmmo
struct UInventoryBikeStorage_CanBikeStoreAmmo_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryBikeStorage.AdjustBikeAmmo
struct UInventoryBikeStorage_AdjustBikeAmmo_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryCollectibleStorage.UnlockCollectible
struct UInventoryCollectibleStorage_UnlockCollectible_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryCollectibleStorage.SetNewBadgeDisplayed
struct UInventoryCollectibleStorage_SetNewBadgeDisplayed_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryCollectibleStorage.DisplayNewBadge
struct UInventoryCollectibleStorage_DisplayNewBadge_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryCollectibleStorage.DiscoveredCollectibleID
struct UInventoryCollectibleStorage_DiscoveredCollectibleID_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryCollectibleStorage.DiscoveredCollectible
struct UInventoryCollectibleStorage_DiscoveredCollectible_Params
{
	class UInventoryItemCollectible*                   Collectible;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.WeaponTypeMaxCount
struct UInventoryEquipmentStorage_WeaponTypeMaxCount_Params
{
	TEnumAsByte<EWeaponType>                           Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.WeaponTypeCount
struct UInventoryEquipmentStorage_WeaponTypeCount_Params
{
	TEnumAsByte<EWeaponType>                           Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.SyncPawnWeaponStates
struct UInventoryEquipmentStorage_SyncPawnWeaponStates_Params
{
	class ABendPlayerPawn*                             Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.SetThrowRockDisabled
struct UInventoryEquipmentStorage_SetThrowRockDisabled_Params
{
	bool                                               IsDisabled;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.SetStorageWeapon
struct UInventoryEquipmentStorage_SetStorageWeapon_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryStorageWeapon                     Weapon;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryEquipmentStorage.RemoveInventoryWeaponFromLocker
struct UInventoryEquipmentStorage_RemoveInventoryWeaponFromLocker_Params
{
	class UInventoryWeaponItem*                        InventoryWeapon;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.RemoveAllAmmoFromLockerWeapon
struct UInventoryEquipmentStorage_RemoveAllAmmoFromLockerWeapon_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.OnWeaponPartRemoved
struct UInventoryEquipmentStorage_OnWeaponPartRemoved_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeaponPart*                             Part;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.MoveEquipSlotToLocker
struct UInventoryEquipmentStorage_MoveEquipSlotToLocker_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DontRemoveWeapon;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.IsPartGuidEquipped
struct UInventoryEquipmentStorage_IsPartGuidEquipped_Params
{
	struct FInventoryGuid                              Guid;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.GetStorageWeaponBP
struct UInventoryEquipmentStorage_GetStorageWeaponBP_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryStorageWeapon                     ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.InventoryEquipmentStorage.GetStorageWeapon
struct UInventoryEquipmentStorage_GetStorageWeapon_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryStorageWeapon                     OutWeapon;                                                // (Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryEquipmentStorage.GetLockerWeaponAmmoCount
struct UInventoryEquipmentStorage_GetLockerWeaponAmmoCount_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.GetLockerSlotFromWeapon
struct UInventoryEquipmentStorage_GetLockerSlotFromWeapon_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.GetEquipmentSlot
struct UInventoryEquipmentStorage_GetEquipmentSlot_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               Slot;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryEquipmentSlot*                     ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.DoesLockerContainWeapon
struct UInventoryEquipmentStorage_DoesLockerContainWeapon_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.CheckWhatSlotWeaponWillBeRemovedFrom
struct UInventoryEquipmentStorage_CheckWhatSlotWeaponWillBeRemovedFrom_Params
{
	class UInventoryWeaponItem*                        pWeapon;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponSocketLocation>                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.AddInventoryWeaponToLocker
struct UInventoryEquipmentStorage_AddInventoryWeaponToLocker_Params
{
	class UInventoryWeaponItem*                        InventoryWeapon;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryEquipmentStorage.AddAmmoToLockerWeapon
struct UInventoryEquipmentStorage_AddAmmoToLockerWeapon_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
	int                                                AmmoToAdd;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.SetRecipeDiscovered
struct UInventoryRecipeStorage_SetRecipeDiscovered_Params
{
	TEnumAsByte<EInventoryRecipeID>                    RecipeID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.SetNewBadgeDisplayed
struct UInventoryRecipeStorage_SetNewBadgeDisplayed_Params
{
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.OnRecipeCrafted
struct UInventoryRecipeStorage_OnRecipeCrafted_Params
{
	TEnumAsByte<EInventoryRecipeID>                    RecipeID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.IsRecipeDiscovered
struct UInventoryRecipeStorage_IsRecipeDiscovered_Params
{
	TEnumAsByte<EInventoryRecipeID>                    RecipeID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.HasUnlockedRecipeUsingItem
struct UInventoryRecipeStorage_HasUnlockedRecipeUsingItem_Params
{
	struct FGameplayTag                                RecipeItemTag;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.GetRecipeCraftCount
struct UInventoryRecipeStorage_GetRecipeCraftCount_Params
{
	TEnumAsByte<EInventoryRecipeID>                    RecipeID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.GetMenuCraftRecipes
struct UInventoryRecipeStorage_GetMenuCraftRecipes_Params
{
	TArray<struct FInventoryMenuCraftRecipe>           OutMenuRecipes;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.InventoryRecipeStorage.GetMenuCraftRecipeForItem
struct UInventoryRecipeStorage_GetMenuCraftRecipeForItem_Params
{
	struct FGameplayTag                                CraftItemTag;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FInventoryMenuCraftRecipe>           OutMenuRecipes;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.InventoryRecipeStorage.GetMenuCraftRecipeByTag
struct UInventoryRecipeStorage_GetMenuCraftRecipeByTag_Params
{
	struct FGameplayTag                                RecipeTag;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInventoryMenuCraftRecipe                   OutMenuRecipe;                                            // (Parm, OutParm, ReferenceParm)
};

// Function BendGame.InventoryRecipeStorage.DisplayNewBadge
struct UInventoryRecipeStorage_DisplayNewBadge_Params
{
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryRecipeStorage.Debug_DiscoverAllRecipes
struct UInventoryRecipeStorage_Debug_DiscoverAllRecipes_Params
{
};

// Function BendGame.InventoryWeaponPartStorage.RemoveGuid
struct UInventoryWeaponPartStorage_RemoveGuid_Params
{
	struct FInventoryGuid                              Guid;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponPartStorage.PartsForBendWeapon
struct UInventoryWeaponPartStorage_PartsForBendWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FInventoryStorageWeaponPart>         OutParts;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.InventoryWeaponPartStorage.OnWeaponPartLoaded
struct UInventoryWeaponPartStorage_OnWeaponPartLoaded_Params
{
	struct FInventoryGuid                              PartGuid;                                                 // (Parm)
};

// Function BendGame.InventoryWeaponPartStorage.GetWeaponPartHealthFromItem
struct UInventoryWeaponPartStorage_GetWeaponPartHealthFromItem_Params
{
	class UInventoryItem*                              WeaponPartItem;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponPartStorage.DetachPartFromWeapon
struct UInventoryWeaponPartStorage_DetachPartFromWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryGuid                              Guid;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponPartStorage.DetachHardPointFromWeapon
struct UInventoryWeaponPartStorage_DetachHardPointFromWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponHardPoint>                      HardPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponPartStorage.AttachPartToWeapon
struct UInventoryWeaponPartStorage_AttachPartToWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FInventoryGuid                              Guid;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryWeaponPartStorage.AttachPartIDToWeapon
struct UInventoryWeaponPartStorage_AttachPartIDToWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponPartID>                         WeaponPartID;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.TextureFromTag
struct UInventoryTextureTagLibrary_TextureFromTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.TextureAssetFromTag
struct UInventoryTextureTagLibrary_TextureAssetFromTag_Params
{
	struct FGameplayTag                                Tag;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TAssetPtr<class UTexture2D>                        OutAsset;                                                 // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.TextureAssetFromItem
struct UInventoryTextureTagLibrary_TextureAssetFromItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class UTexture2D>                        OutAsset;                                                 // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.ReleaseTexture
struct UInventoryTextureTagLibrary_ReleaseTexture_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                RefCount;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.ReleaseCachedTextures
struct UInventoryTextureTagLibrary_ReleaseCachedTextures_Params
{
};

// Function BendGame.InventoryTextureTagLibrary.GetItemTexture
struct UInventoryTextureTagLibrary_GetItemTexture_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibrary.CacheTextures
struct UInventoryTextureTagLibrary_CacheTextures_Params
{
};

// Function BendGame.InventoryTextureTagLibrary.CacheTexture
struct UInventoryTextureTagLibrary_CacheTexture_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                RefCount;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibraryMgr.ReleaseCachedTextures
struct UInventoryTextureTagLibraryMgr_ReleaseCachedTextures_Params
{
	TEnumAsByte<EInventoryItemTextureTag>              Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibraryMgr.GetTextureLatent
struct UInventoryTextureTagLibraryMgr_GetTextureLatent_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInventoryItemTextureTag>              Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReturnTexture;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FLatentActionInfo                           LatentInfo;                                               // (Parm)
};

// Function BendGame.InventoryTextureTagLibraryMgr.GetItemTexture
struct UInventoryTextureTagLibraryMgr_GetItemTexture_Params
{
	TEnumAsByte<EInventoryItemTextureTag>              Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibraryMgr.ContainsTexture
struct UInventoryTextureTagLibraryMgr_ContainsTexture_Params
{
	TEnumAsByte<EInventoryItemTextureTag>              Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.InventoryTextureTagLibraryMgr.CacheTextures
struct UInventoryTextureTagLibraryMgr_CacheTextures_Params
{
	TEnumAsByte<EInventoryItemTextureTag>              Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JournalEntryList.SetSelectedIndex
struct UJournalEntryList_SetSelectedIndex_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JournalEntryList.SetEntryVisibility
struct UJournalEntryList_SetEntryVisibility_Params
{
	bool                                               bShowActive;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowCompleted;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowLocked;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JournalEntryList.SetData
struct UJournalEntryList_SetData_Params
{
	TArray<struct FJournalEntryData>                   Value;                                                    // (Parm, ZeroConstructor)
};

// Function BendGame.JournalEntryList.ScrollUp
struct UJournalEntryList_ScrollUp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JournalEntryList.ScrollDown
struct UJournalEntryList_ScrollDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JournalEntryList.PageUp
struct UJournalEntryList_PageUp_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JournalEntryList.PageDown
struct UJournalEntryList_PageDown_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.JournalEntryList.OnlyShowCompletedEntries
struct UJournalEntryList_OnlyShowCompletedEntries_Params
{
};

// Function BendGame.JournalEntryList.OnlyShowActiveEntries
struct UJournalEntryList_OnlyShowActiveEntries_Params
{
};

// Function BendGame.JournalEntryList.OnData
struct UJournalEntryList_OnData_Params
{
};

// Function BendGame.JournalListItem.SetSelected
struct UJournalListItem_SetSelected_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.JournalListItem.SetData
struct UJournalListItem_SetData_Params
{
	struct FJournalEntryData                           Value;                                                    // (Parm)
};

// Function BendGame.JournalListItem.OnSelected
struct UJournalListItem_OnSelected_Params
{
};

// Function BendGame.JournalListItem.OnDeselected
struct UJournalListItem_OnDeselected_Params
{
};

// Function BendGame.JournalListItem.OnData
struct UJournalListItem_OnData_Params
{
};

// Function BendGame.LandscapeQueries.HitRoad
struct ULandscapeQueries_HitRoad_Params
{
	class UPrimitiveComponent*                         HitComponent;                                             // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Padding;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.LightRigFlickerInterface.GetFlickerStruct_NEW
struct ULightRigFlickerInterface_GetFlickerStruct_NEW_Params
{
	struct FBendLightFlicker                           ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.MapLocation.UseSimpleMapInfoDisplay
struct UMapLocation_UseSimpleMapInfoDisplay_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.Position
struct UMapLocation_Position_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IsWaypointLocation
struct UMapLocation_IsWaypointLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IsObjectiveRegion
struct UMapLocation_IsObjectiveRegion_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IsNestZoneLocation
struct UMapLocation_IsNestZoneLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IsFastTravelLocation
struct UMapLocation_IsFastTravelLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IsBunkerLocation
struct UMapLocation_IsBunkerLocation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IconTextureColor
struct UMapLocation_IconTextureColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.IconTexture
struct UMapLocation_IconTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.GetMiniMapLocationComponent
struct UMapLocation_GetMiniMapLocationComponent_Params
{
	class UMiniMapLocationComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.MapLocation.GetLocationTexture
struct UMapLocation_GetLocationTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.GetLocationName
struct UMapLocation_GetLocationName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.MapLocation.GetLocationDescription
struct UMapLocation_GetLocationDescription_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.MapLocation.DisplayOnMiniMap
struct UMapLocation_DisplayOnMiniMap_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.ContainsValidNavPath
struct UMapLocation_ContainsValidNavPath_Params
{
	bool                                               IncludeVisibleCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapLocation.CacheLocationTexture
struct UMapLocation_CacheLocationTexture_Params
{
	bool                                               FreeCache;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWidgetComponent.SetOverrideTranslucentSortPriority
struct UMapWidgetComponent_SetOverrideTranslucentSortPriority_Params
{
	int                                                OverrideValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapWidgetComponent.RequiresRegionImage
struct UMapWidgetComponent_RequiresRegionImage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWidgetComponent.PostInitialize
struct UMapWidgetComponent_PostInitialize_Params
{
};

// Function BendGame.MapWidgetComponent.OnWaypointLocationRemoved
struct UMapWidgetComponent_OnWaypointLocationRemoved_Params
{
};

// Function BendGame.MapWidgetComponent.OnRemoved
struct UMapWidgetComponent_OnRemoved_Params
{
};

// Function BendGame.MapWidgetComponent.GetNotify
struct UMapWidgetComponent_GetNotify_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapWidgetComponent.GetMiniMapLocationComponent
struct UMapWidgetComponent_GetMiniMapLocationComponent_Params
{
	class UMiniMapLocationComponent*                   ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.MapWidgetComponent.ExecuteMapSelectionInterface_OnSelected
struct UMapWidgetComponent_ExecuteMapSelectionInterface_OnSelected_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.WorldToMapLocation
struct AMap3D_WorldToMapLocation_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutMapLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.WorldToMap
struct AMap3D_WorldToMap_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutMapLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.UpdateVisibility
struct AMap3D_UpdateVisibility_Params
{
};

// Function BendGame.Map3D.UpdatePlayerLocation
struct AMap3D_UpdatePlayerLocation_Params
{
};

// Function BendGame.Map3D.UpdateFogOfWar
struct AMap3D_UpdateFogOfWar_Params
{
};

// Function BendGame.Map3D.UnloadTileTextures
struct AMap3D_UnloadTileTextures_Params
{
	int                                                DepthIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.SetWaypointMarker
struct AMap3D_SetWaypointMarker_Params
{
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.SetPanFromWorldLocation
struct AMap3D_SetPanFromWorldLocation_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InZoom;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.SetMarkerDetails
struct AMap3D_SetMarkerDetails_Params
{
	class UMapWidgetComponent*                         Widget;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.Map3D.SetMapWidgetLocationFromWorld
struct AMap3D_SetMapWidgetLocationFromWorld_Params
{
	class UMapWidgetComponent*                         Widget;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     WorldPosition;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.SetMapOpened
struct AMap3D_SetMapOpened_Params
{
	bool                                               Opened;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.ScreenToWorld
struct AMap3D_ScreenToWorld_Params
{
	struct FVector2D                                   InScreen;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutWorld;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnWaypointPathUpdated
struct AMap3D_OnWaypointPathUpdated_Params
{
	TEnumAsByte<EMapWaypointMarker3D>                  WaypointMarkerType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnWaypointMarkerPlaced
struct AMap3D_OnWaypointMarkerPlaced_Params
{
	struct FVector                                     PlayerLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MarkerLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnTileTextureLoaded
struct AMap3D_OnTileTextureLoaded_Params
{
	int                                                TileIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnMouseMoveAbs
struct AMap3D_OnMouseMoveAbs_Params
{
	struct FVector2D                                   InScreenLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnMouseMove
struct AMap3D_OnMouseMove_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnMouseHoverAbs
struct AMap3D_OnMouseHoverAbs_Params
{
	struct FVector2D                                   InScreenLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnMouseHover
struct AMap3D_OnMouseHover_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnMouseDragStart
struct AMap3D_OnMouseDragStart_Params
{
};

// Function BendGame.Map3D.OnMouseDragEnd
struct AMap3D_OnMouseDragEnd_Params
{
};

// Function BendGame.Map3D.OnMarkerSelectionChange
struct AMap3D_OnMarkerSelectionChange_Params
{
	struct FMapMarkerWidgetDetails                     Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.Map3D.OnLocationInputSelection
struct AMap3D_OnLocationInputSelection_Params
{
	class UMapLocation*                                Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.OnInputChanged
struct AMap3D_OnInputChanged_Params
{
};

// Function BendGame.Map3D.NormalizedScreenToWorld
struct AMap3D_NormalizedScreenToWorld_Params
{
	struct FVector2D                                   InScreen;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutWorld;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.MissionComplete
struct AMap3D_MissionComplete_Params
{
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.MapToWorldLocation
struct AMap3D_MapToWorldLocation_Params
{
	struct FVector                                     InMapLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutWorldLocation;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.LoadTileTextures
struct AMap3D_LoadTileTextures_Params
{
	int                                                DepthIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.LoadTileTextureAtIndex
struct AMap3D_LoadTileTextureAtIndex_Params
{
	int                                                TileIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.IsPointInPolygon2D
struct AMap3D_IsPointInPolygon2D_Params
{
	struct FVector2D                                   Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector2D>                           Verts;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.IsMapInputDisabled
struct AMap3D_IsMapInputDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveUpKey
struct AMap3D_InputMoveUpKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveUpGamepad
struct AMap3D_InputMoveUpGamepad_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveRightKey
struct AMap3D_InputMoveRightKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveRightGamepad
struct AMap3D_InputMoveRightGamepad_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveLeftKey
struct AMap3D_InputMoveLeftKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputMoveDownKey
struct AMap3D_InputMoveDownKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisZoomGamepad
struct AMap3D_InputAxisZoomGamepad_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisMoveRight
struct AMap3D_InputAxisMoveRight_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisMoveForward
struct AMap3D_InputAxisMoveForward_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisMapZoomOutKey
struct AMap3D_InputAxisMapZoomOutKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisMapZoomInKey
struct AMap3D_InputAxisMapZoomInKey_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisMapZoom
struct AMap3D_InputAxisMapZoom_Params
{
	float                                              InAxisValue;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InputAxisLookUp
struct AMap3D_InputAxisLookUp_Params
{
	float                                              AxisValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.InitializeLocations
struct AMap3D_InitializeLocations_Params
{
};

// Function BendGame.Map3D.GetWaypointPathPoints
struct AMap3D_GetWaypointPathPoints_Params
{
	TEnumAsByte<EMapWaypointMarker3D>                  WaypointMarkerType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPathPoint>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.Map3D.GetWaypointPathLocations
struct AMap3D_GetWaypointPathLocations_Params
{
	TEnumAsByte<EMapWaypointMarker3D>                  WaypointMarkerType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Simplify;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Epsilon;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPathPoint>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.Map3D.GetWaypointEndLocation
struct AMap3D_GetWaypointEndLocation_Params
{
	TEnumAsByte<EMapWaypointMarker3D>                  WaypointMarkerType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.GetUserWaypointEndLocation
struct AMap3D_GetUserWaypointEndLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.GetTextureAtDepthAndUV
struct AMap3D_GetTextureAtDepthAndUV_Params
{
	int                                                DepthIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OffsetU;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OffsetV;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TileTexture;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutU;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutV;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceUseBlank;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.GetScrollBounds
struct AMap3D_GetScrollBounds_Params
{
	bool                                               bMapSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MinBounds;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxBounds;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.GetObjectiveRegionMaterial
struct AMap3D_GetObjectiveRegionMaterial_Params
{
	class UMaterialInterface*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.GetMarkerAtWorldLocation
struct AMap3D_GetMarkerAtWorldLocation_Params
{
	struct FVector                                     InWorldLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UMapLocation*                                OutMapLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UMapWidgetComponent*                         OutMapWidgetComponent;                                    // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              OutDistance;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.GetMarkerAtScreenLocation
struct AMap3D_GetMarkerAtScreenLocation_Params
{
	struct FVector2D                                   InScreenLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UMapLocation*                                OutMapLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UMapWidgetComponent*                         OutMapWidgetComponent;                                    // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              OutDistance;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.GetFastTravelWaypointEndLocation
struct AMap3D_GetFastTravelWaypointEndLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.GetCursorWorldLocation
struct AMap3D_GetCursorWorldLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.GetClosestLocation2D
struct AMap3D_GetClosestLocation2D_Params
{
	struct FVector2D                                   CursorScreenLocaion;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ThreasholdDistance;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UMapLocation*                                Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UMapWidgetComponent*                         OutWidget;                                                // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.GetClosestLocation
struct AMap3D_GetClosestLocation_Params
{
	struct FVector                                     CursorWorldLocaion;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UMapLocation*                                Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UMapWidgetComponent*                         Widget;                                                   // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.DebugToggleTiles
struct AMap3D_DebugToggleTiles_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.DebugToggleFogOfWar
struct AMap3D_DebugToggleFogOfWar_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Map3D.DebugTeleportToLocation
struct AMap3D_DebugTeleportToLocation_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Map3D.CreateLocationWidget
struct AMap3D_CreateLocationWidget_Params
{
	class UMapLocation*                                Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ZOrder;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UMapWidgetComponent*                         ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.Map3D.ClearUserWaypointMarker
struct AMap3D_ClearUserWaypointMarker_Params
{
};

// Function BendGame.BendEncampmentActor.LeavingRange
struct ABendEncampmentActor_LeavingRange_Params
{
};

// Function BendGame.BendEncampmentActor.EnteredRange
struct ABendEncampmentActor_EnteredRange_Params
{
};

// Function BendGame.BendEncampmentActor.ActorLeavingVolume
struct ABendEncampmentActor_ActorLeavingVolume_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendEncampmentActor.ActorEnteredVolume
struct ABendEncampmentActor_ActorEnteredVolume_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MapLocationMgr.GetPingLocations
struct AMapLocationMgr_GetPingLocations_Params
{
	TArray<class UBendPingLocationComponent*>          OutLocations;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.MapLocationMgr.GetMiniMapLocations
struct AMapLocationMgr_GetMiniMapLocations_Params
{
	TArray<class UMapLocation*>                        OutLocations;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.MapLocationMgr.GetMapLocationMgr
struct AMapLocationMgr_GetMapLocationMgr_Params
{
	class AMapLocationMgr*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MapMenuSelectionInterface.IOnSelected
struct UMapMenuSelectionInterface_IOnSelected_Params
{
};

// Function BendGame.Menu3D.SetMenuOpened
struct AMenu3D_SetMenuOpened_Params
{
	bool                                               Opened;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Menu3D.RequestClose
struct AMenu3D_RequestClose_Params
{
};

// Function BendGame.Menu3D.OpenMenu
struct AMenu3D_OpenMenu_Params
{
};

// Function BendGame.Menu3D.OnMenuOpened
struct AMenu3D_OnMenuOpened_Params
{
};

// Function BendGame.Menu3D.OnMenuClosed
struct AMenu3D_OnMenuClosed_Params
{
};

// Function BendGame.Menu3D.IsMenuActive
struct AMenu3D_IsMenuActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.Menu3D.InputFlickUp
struct AMenu3D_InputFlickUp_Params
{
};

// Function BendGame.Menu3D.InputFlickRight
struct AMenu3D_InputFlickRight_Params
{
};

// Function BendGame.Menu3D.InputFlickLeft
struct AMenu3D_InputFlickLeft_Params
{
};

// Function BendGame.Menu3D.InputFlickDown
struct AMenu3D_InputFlickDown_Params
{
};

// Function BendGame.Menu3D.InputFlick
struct AMenu3D_InputFlick_Params
{
	float                                              GestureAngle;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Menu3D.EnableMenuInput
struct AMenu3D_EnableMenuInput_Params
{
	class APlayerController*                           PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Menu3D.DisableMenuInput
struct AMenu3D_DisableMenuInput_Params
{
	class APlayerController*                           PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.Menu3D.CanActivateMenu
struct AMenu3D_CanActivateMenu_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MenuInteract.SetStyle
struct UMenuInteract_SetStyle_Params
{
	struct FButtonStyle                                InStyle;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.MenuInteract.SetColorAndOpacity
struct UMenuInteract_SetColorAndOpacity_Params
{
	struct FLinearColor                                InColorAndOpacity;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MenuInteract.SetBackgroundColor
struct UMenuInteract_SetBackgroundColor_Params
{
	struct FLinearColor                                InBackgroundColor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.MenuInteract.IsPressed
struct UMenuInteract_IsPressed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.MerchantInventory.ResetAllSaveGameCounts
struct UMerchantInventory_ResetAllSaveGameCounts_Params
{
};

// Function BendGame.MerchantInventory.GetItems
struct UMerchantInventory_GetItems_Params
{
	struct FMerchantItems                              OutItems;                                                 // (Parm, OutParm)
};

// Function BendGame.MerchantComponent.CacheInventoryAssets
struct UMerchantComponent_CacheInventoryAssets_Params
{
	bool                                               CacheItems;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.ShouldAlwaysShowArrow
struct UBendAIMiniMapLocationComponent_ShouldAlwaysShowArrow_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsTargetingPlayer
struct UBendAIMiniMapLocationComponent_IsTargetingPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsSearching
struct UBendAIMiniMapLocationComponent_IsSearching_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsPlayerEnemyAndNotPassive
struct UBendAIMiniMapLocationComponent_IsPlayerEnemyAndNotPassive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsPlayerEnemy
struct UBendAIMiniMapLocationComponent_IsPlayerEnemy_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsPassive
struct UBendAIMiniMapLocationComponent_IsPassive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.IsCrowdCluster
struct UBendAIMiniMapLocationComponent_IsCrowdCluster_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.GetViewRotation
struct UBendAIMiniMapLocationComponent_GetViewRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.GetPawn
struct UBendAIMiniMapLocationComponent_GetPawn_Params
{
	class APawn*                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.GetAwarenessValue
struct UBendAIMiniMapLocationComponent_GetAwarenessValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.BendAIMiniMapLocationComponent.GetAwareness
struct UBendAIMiniMapLocationComponent_GetAwareness_Params
{
	TEnumAsByte<EAIAwareState>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.NewGamePlus.UnlockNGPWeapons
struct UNewGamePlus_UnlockNGPWeapons_Params
{
	TArray<struct FGameplayTag>                        WeaponTags;                                               // (Parm, ZeroConstructor)
	TArray<struct FGameplayTag>                        WeaponPartsTags;                                          // (Parm, ZeroConstructor)
	bool                                               AddTaser;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.NewGamePlus.UnlockNGPSkills
struct UNewGamePlus_UnlockNGPSkills_Params
{
	TArray<struct FGameplayTag>                        SkillTags;                                                // (Parm, ZeroConstructor)
	int                                                UnspentPoints;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.NewGamePlus.UnlockNGPBikeSkins
struct UNewGamePlus_UnlockNGPBikeSkins_Params
{
	TArray<struct FGameplayTag>                        BikeSkinTags;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.UnlockNGPBikeParts
struct UNewGamePlus_UnlockNGPBikeParts_Params
{
	TArray<struct FGameplayTag>                        BikePartTags;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPTrophies
struct UNewGamePlus_SetNGPTrophies_Params
{
	TArray<struct FTrophyCarryOverData>                TrophyData;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPStats
struct UNewGamePlus_SetNGPStats_Params
{
	int                                                Health;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Focus;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Stamina;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerXP;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.NewGamePlus.SetNGPRecipes
struct UNewGamePlus_SetNGPRecipes_Params
{
	TArray<struct FGameplayTag>                        RecipeTags;                                               // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPPlayerBikeSkin
struct UNewGamePlus_SetNGPPlayerBikeSkin_Params
{
	TArray<struct FGameplayTag>                        BikeSkinTagsInOrder;                                      // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPEncampmentStats
struct UNewGamePlus_SetNGPEncampmentStats_Params
{
	TArray<struct FEncampmentCarryOverData>            PreviousEncampmentsData;                                  // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPCollectibles
struct UNewGamePlus_SetNGPCollectibles_Params
{
	TArray<TEnumAsByte<EInventoryCollectibleID>>       DiscoveredCollectibles;                                   // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.SetNGPBikeCustomization
struct UNewGamePlus_SetNGPBikeCustomization_Params
{
	TArray<struct FGameplayTag>                        BikePartTags;                                             // (Parm, ZeroConstructor)
};

// Function BendGame.NewGamePlus.GetEquippedBikeParts
struct UNewGamePlus_GetEquippedBikeParts_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.OptionList.SynchronizeOptionValues
struct UOptionList_SynchronizeOptionValues_Params
{
};

// Function BendGame.OptionList.StepSelectedOptionForward
struct UOptionList_StepSelectedOptionForward_Params
{
};

// Function BendGame.OptionList.StepSelectedOptionBackward
struct UOptionList_StepSelectedOptionBackward_Params
{
};

// Function BendGame.OptionList.SetSelectedOption
struct UOptionList_SetSelectedOption_Params
{
	class UOptionValueControl*                         InWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionList.SetSelectedIndex
struct UOptionList_SetSelectedIndex_Params
{
	int                                                InIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionList.SelectPreviousOption
struct UOptionList_SelectPreviousOption_Params
{
};

// Function BendGame.OptionList.SelectNextOption
struct UOptionList_SelectNextOption_Params
{
};

// Function BendGame.OptionList.ResetToDefaults
struct UOptionList_ResetToDefaults_Params
{
};

// Function BendGame.OptionList.RequestMenuChange
struct UOptionList_RequestMenuChange_Params
{
	TEnumAsByte<EOptionListReply>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionList.Num
struct UOptionList_Num_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionList.GetSelectedIndex
struct UOptionList_GetSelectedIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionList.ClickSelectedOption
struct UOptionList_ClickSelectedOption_Params
{
};

// Function BendGame.OptionList.ClearSelectedOption
struct UOptionList_ClearSelectedOption_Params
{
};

// Function BendGame.OptionValueControl.StepForward
struct UOptionValueControl_StepForward_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.StepBackward
struct UOptionValueControl_StepBackward_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetValueRange
struct UOptionValueControl_SetValueRange_Params
{
	float                                              InMinimumValue;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InMaximumValue;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InStepSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetStepValue
struct UOptionValueControl_SetStepValue_Params
{
	int                                                InValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetSelected
struct UOptionValueControl_SetSelected_Params
{
	bool                                               bSelected;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetLocked
struct UOptionValueControl_SetLocked_Params
{
	bool                                               bLocked;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Reason;                                                   // (Parm)
};

// Function BendGame.OptionValueControl.SetIntValue
struct UOptionValueControl_SetIntValue_Params
{
	int                                                InValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetGradientValue
struct UOptionValueControl_SetGradientValue_Params
{
	float                                              InValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetFloatValue
struct UOptionValueControl_SetFloatValue_Params
{
	float                                              InValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.SetDisplayValues
struct UOptionValueControl_SetDisplayValues_Params
{
	TArray<struct FText>                               InDisplayValues;                                          // (Parm, ZeroConstructor)
};

// Function BendGame.OptionValueControl.SetDisplayValueDescriptions
struct UOptionValueControl_SetDisplayValueDescriptions_Params
{
	TArray<struct FText>                               InDisplayValueDescriptions;                               // (Parm, ZeroConstructor)
};

// Function BendGame.OptionValueControl.SetBoolValue
struct UOptionValueControl_SetBoolValue_Params
{
	bool                                               InValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.OptionValueControl.OnUnlocked
struct UOptionValueControl_OnUnlocked_Params
{
};

// Function BendGame.OptionValueControl.OnSelected
struct UOptionValueControl_OnSelected_Params
{
};

// Function BendGame.OptionValueControl.OnLocked
struct UOptionValueControl_OnLocked_Params
{
};

// Function BendGame.OptionValueControl.OnDeselected
struct UOptionValueControl_OnDeselected_Params
{
};

// Function BendGame.OptionValueControl.OnClicked
struct UOptionValueControl_OnClicked_Params
{
};

// Function BendGame.OptionValueControl.GetTextValue
struct UOptionValueControl_GetTextValue_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.OptionValueControl.GetStepValue
struct UOptionValueControl_GetStepValue_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.GetIntValue
struct UOptionValueControl_GetIntValue_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.GetGradientValue
struct UOptionValueControl_GetGradientValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.GetFloatValue
struct UOptionValueControl_GetFloatValue_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.GetDisplayValueDescription
struct UOptionValueControl_GetDisplayValueDescription_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.OptionValueControl.GetDisplayValue
struct UOptionValueControl_GetDisplayValue_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.OptionValueControl.GetBoolValue
struct UOptionValueControl_GetBoolValue_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.Click
struct UOptionValueControl_Click_Params
{
};

// Function BendGame.OptionValueControl.CanStepForward
struct UOptionValueControl_CanStepForward_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.OptionValueControl.CanStepBackward
struct UOptionValueControl_CanStepBackward_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerBlueprintLibrary.SetSpawnPlayerBike
struct UPlayerBlueprintLibrary_SetSpawnPlayerBike_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               spawnFlag;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerBlueprintLibrary.GetSpawnPlayerBikeFlag
struct UPlayerBlueprintLibrary_GetSpawnPlayerBikeFlag_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerDataManager.ResetGameplayDatabase
struct UPlayerDataManager_ResetGameplayDatabase_Params
{
};

// Function BendGame.PlayerInventoryComponent.WeaponPartStorage
struct UPlayerInventoryComponent_WeaponPartStorage_Params
{
	class UInventoryWeaponPartStorage*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.WeaponFromSlot
struct UPlayerInventoryComponent_WeaponFromSlot_Params
{
	TEnumAsByte<EInventoryEquipmentSlot>               SlotType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.UnlockRecipeByTag
struct UPlayerInventoryComponent_UnlockRecipeByTag_Params
{
	struct FGameplayTag                                RecipeTag;                                                // (Parm)
};

// Function BendGame.PlayerInventoryComponent.UnlockRecipe
struct UPlayerInventoryComponent_UnlockRecipe_Params
{
	TEnumAsByte<EInventoryRecipeID>                    RecipeID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.UnlockCollectible
struct UPlayerInventoryComponent_UnlockCollectible_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.StoreAndRemoveAllInventory
struct UPlayerInventoryComponent_StoreAndRemoveAllInventory_Params
{
	bool                                               RemoveRock;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RemoveKnife;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               RemoveTaser;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.StorageForItem
struct UPlayerInventoryComponent_StorageForItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryStorage*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.StopPlayWeaponWheelLoadSound
struct UPlayerInventoryComponent_StopPlayWeaponWheelLoadSound_Params
{
};

// Function BendGame.PlayerInventoryComponent.StartPlayWeaponWheelLoadSound
struct UPlayerInventoryComponent_StartPlayWeaponWheelLoadSound_Params
{
	class USoundCue*                                   SoundToBePlayed;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.SetTutorialUnlocked
struct UPlayerInventoryComponent_SetTutorialUnlocked_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.SetMissionItemTag
struct UPlayerInventoryComponent_SetMissionItemTag_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               IsMissionItem;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.SetMissionItem
struct UPlayerInventoryComponent_SetMissionItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IsMissionItem;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.SetItemDiscovered
struct UPlayerInventoryComponent_SetItemDiscovered_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (Parm)
};

// Function BendGame.PlayerInventoryComponent.SetAmmoMaxCount
struct UPlayerInventoryComponent_SetAmmoMaxCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.SetAmmoCount
struct UPlayerInventoryComponent_SetAmmoCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RestorePlayerWeapons
struct UPlayerInventoryComponent_RestorePlayerWeapons_Params
{
};

// Function BendGame.PlayerInventoryComponent.RemoveWeapons
struct UPlayerInventoryComponent_RemoveWeapons_Params
{
};

// Function BendGame.PlayerInventoryComponent.RemoveWeaponByType
struct UPlayerInventoryComponent_RemoveWeaponByType_Params
{
	TEnumAsByte<EWeaponType>                           Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RemoveScrapCount
struct UPlayerInventoryComponent_RemoveScrapCount_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RemoveItemByTag
struct UPlayerInventoryComponent_RemoveItemByTag_Params
{
	struct FInventoryItemTag                           ItemTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RemoveItem
struct UPlayerInventoryComponent_RemoveItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RegisterMissionItemPostPickup
struct UPlayerInventoryComponent_RegisterMissionItemPostPickup_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.RecipeStorage
struct UPlayerInventoryComponent_RecipeStorage_Params
{
	class UInventoryRecipeStorage*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.PlayerWeaponFromGuid
struct UPlayerInventoryComponent_PlayerWeaponFromGuid_Params
{
	struct FInventoryGuid                              InGuid;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	class ABendWeapon*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.OnRecipeDiscovered
struct UPlayerInventoryComponent_OnRecipeDiscovered_Params
{
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.OnRecipeCraftable
struct UPlayerInventoryComponent_OnRecipeCraftable_Params
{
	class UInventoryItemRecipe*                        Recipe;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.OnInventoryChange
struct UPlayerInventoryComponent_OnInventoryChange_Params
{
	struct FInventoryOperation                         StorageOp;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.PlayerInventoryComponent.OnCollectibleDiscovered
struct UPlayerInventoryComponent_OnCollectibleDiscovered_Params
{
	class UInventoryItemCollectible*                   Collectible;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.LootStorage
struct UPlayerInventoryComponent_LootStorage_Params
{
	class UInventoryLootStorage*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.ItemTagQuery
struct UPlayerInventoryComponent_ItemTagQuery_Params
{
	struct FGameplayTagQuery                           Query;                                                    // (Parm)
	TArray<struct FInventoryStorageItemBase>           OutItems;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.IsTutorialUnlocked
struct UPlayerInventoryComponent_IsTutorialUnlocked_Params
{
	struct FName                                       TutorialName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.IsMissionItemTag
struct UPlayerInventoryComponent_IsMissionItemTag_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.IsMissionItem
struct UPlayerInventoryComponent_IsMissionItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.InspectWeapon
struct UPlayerInventoryComponent_InspectWeapon_Params
{
	struct FGameplayTag                                WeaponTag;                                                // (Parm)
};

// Function BendGame.PlayerInventoryComponent.HasUnlockedCollectible
struct UPlayerInventoryComponent_HasUnlockedCollectible_Params
{
	TEnumAsByte<EInventoryCollectibleID>               CollectibleID;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.HasDiscoveredItem
struct UPlayerInventoryComponent_HasDiscoveredItem_Params
{
	struct FGameplayTag                                ItemTag;                                                  // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GuidQuery
struct UPlayerInventoryComponent_GuidQuery_Params
{
	struct FGameplayTagQuery                           Query;                                                    // (ConstParm, Parm)
	TArray<struct FInventoryGuidSlot>                  OutGuids;                                                 // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function BendGame.PlayerInventoryComponent.GiveBackStoredInventoryAndKeepCurrentEquipment
struct UPlayerInventoryComponent_GiveBackStoredInventoryAndKeepCurrentEquipment_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GiveBackStoredInventory
struct UPlayerInventoryComponent_GiveBackStoredInventory_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetStorage
struct UPlayerInventoryComponent_GetStorage_Params
{
	TEnumAsByte<EInventoryItemStorage>                 Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UInventoryStorage*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetScrapCount
struct UPlayerInventoryComponent_GetScrapCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetNewWeapons
struct UPlayerInventoryComponent_GetNewWeapons_Params
{
	TArray<struct FGameplayTag>                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.PlayerInventoryComponent.GetItemCountForTagArray
struct UPlayerInventoryComponent_GetItemCountForTagArray_Params
{
	TArray<struct FInventoryItemTag>                   ItemTags;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetItemCountByTag
struct UPlayerInventoryComponent_GetItemCountByTag_Params
{
	struct FInventoryItemTag                           ItemTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetItemCount
struct UPlayerInventoryComponent_GetItemCount_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetAmmoMaxCount
struct UPlayerInventoryComponent_GetAmmoMaxCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.GetAmmoCount
struct UPlayerInventoryComponent_GetAmmoCount_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.EmptyInventory
struct UPlayerInventoryComponent_EmptyInventory_Params
{
};

// Function BendGame.PlayerInventoryComponent.CraftRecipe
struct UPlayerInventoryComponent_CraftRecipe_Params
{
	struct FGameplayTag                                RecipeTag;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.CollectibleStorage
struct UPlayerInventoryComponent_CollectibleStorage_Params
{
	class UInventoryCollectibleStorage*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.CanStoreItem
struct UPlayerInventoryComponent_CanStoreItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.CanCraftRecipe
struct UPlayerInventoryComponent_CanCraftRecipe_Params
{
	struct FGameplayTag                                RecipeTag;                                                // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.BikeStorage
struct UPlayerInventoryComponent_BikeStorage_Params
{
	class UInventoryBikeStorage*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.BikePartStorage
struct UPlayerInventoryComponent_BikePartStorage_Params
{
	class UInventoryBikePartStorage*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AmmoStorage
struct UPlayerInventoryComponent_AmmoStorage_Params
{
	class UInventoryAmmoStorage*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AdjustScrapCount
struct UPlayerInventoryComponent_AdjustScrapCount_Params
{
	int                                                Count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AdjustAmmo
struct UPlayerInventoryComponent_AdjustAmmo_Params
{
	TEnumAsByte<EInventoryAmmoID>                      AmmoID;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AddWeapon
struct UPlayerInventoryComponent_AddWeapon_Params
{
	TEnumAsByte<EInventoryWeaponID>                    WeaponID;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               AfterAsyncLoad_CallAddWeapon;                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AddItemQuery
struct UPlayerInventoryComponent_AddItemQuery_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                OutCountAdded;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EInventoryStorageQueryResult>          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AddItemByTag
struct UPlayerInventoryComponent_AddItemByTag_Params
{
	struct FInventoryItemTag                           ItemTag;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PlayerInventoryComponent.AddItem
struct UPlayerInventoryComponent_AddItem_Params
{
	class UInventoryItem*                              Item;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.PreviewWheel.SelectSlot
struct UPreviewWheel_SelectSlot_Params
{
	int                                                InSlot;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.PreviewWheel.OnShow
struct UPreviewWheel_OnShow_Params
{
};

// Function BendGame.PreviewWheel.OnHide
struct UPreviewWheel_OnHide_Params
{
};

// Function BendGame.PreviewWheel.Hide
struct UPreviewWheel_Hide_Params
{
};

// Function BendGame.RadialPanel.SetRadius
struct URadialPanel_SetRadius_Params
{
	float                                              InRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.RadialPanel.SetAngleSize
struct URadialPanel_SetAngleSize_Params
{
	float                                              InAngleSize;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.RadialPanel.SetAngleOffset
struct URadialPanel_SetAngleOffset_Params
{
	float                                              InAngleOffset;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.RadialPanel.AddChildToRadialPanel
struct URadialPanel_AddChildToRadialPanel_Params
{
	class UWidget*                                     Content;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class URadialPanelSlot*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.RadialPanelSlot.SetSize
struct URadialPanelSlot_SetSize_Params
{
	struct FSlateChildSize                             InSize;                                                   // (Parm)
};

// Function BendGame.RadialPanelSlot.SetRadialOffset
struct URadialPanelSlot_SetRadialOffset_Params
{
	float                                              InRadialOffset;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.RadialPanelSlot.SetRadialAlignment
struct URadialPanelSlot_SetRadialAlignment_Params
{
	TEnumAsByte<EHorizontalAlignment>                  InRadialAlignment;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.RunPOIBlueprintProxy.OnUserStoppedInternal
struct URunPOIBlueprintProxy_OnUserStoppedInternal_Params
{
};

// Function BendGame.RunPOIBlueprintProxy.OnUserLeavesPOIInternal
struct URunPOIBlueprintProxy_OnUserLeavesPOIInternal_Params
{
};

// Function BendGame.StopUserSequenceBlueprintProxy.OnUserStoppedInternal
struct UStopUserSequenceBlueprintProxy_OnUserStoppedInternal_Params
{
};

// Function BendGame.ScriptedEncounterLibrary.CreateStopUserSequenceProxy
struct UScriptedEncounterLibrary_CreateStopUserSequenceProxy_Params
{
	class UBendScriptedEncounterUserController*        ControllerIn;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStopUserSequenceBlueprintProxy*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.ScriptedEncounterLibrary.CreateStartConversationProxy
struct UScriptedEncounterLibrary_CreateStartConversationProxy_Params
{
	class AActor*                                      Requester;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ConversationDataClass;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UStartConversationBlueprintProxy*            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.ScriptedEncounterLibrary.CreateRunPOIProxy
struct UScriptedEncounterLibrary_CreateRunPOIProxy_Params
{
	class UBendScriptedEncounterUserController*        ControllerIn;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ABendPOI*                                    BendPOI;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class URunPOIBlueprintProxy*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SecurityCamera_BP.ResetTimer
struct ASecurityCamera_BP_ResetTimer_Params
{
};

// Function BendGame.SecurityCamera_BP.DisableCamera
struct ASecurityCamera_BP_DisableCamera_Params
{
};

// Function BendGame.SlateInputInteractComponent.SetInteractWidget3D
struct USlateInputInteractComponent_SetInteractWidget3D_Params
{
	class UBendWidgetComponent*                        Widget3D;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.SetInteractProgress
struct USlateInputInteractComponent_SetInteractProgress_Params
{
	float                                              Progress;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.SetInteractDetails
struct USlateInputInteractComponent_SetInteractDetails_Params
{
	struct FActorInteractDetails                       Details;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.SlateInputInteractComponent.ResetInteractProgress
struct USlateInputInteractComponent_ResetInteractProgress_Params
{
};

// Function BendGame.SlateInputInteractComponent.ReleaseInteract
struct USlateInputInteractComponent_ReleaseInteract_Params
{
};

// Function BendGame.SlateInputInteractComponent.OnInteractEnd
struct USlateInputInteractComponent_OnInteractEnd_Params
{
	TEnumAsByte<EInputInteractState>                   InteractState;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.InteractProgress
struct USlateInputInteractComponent_InteractProgress_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.InteractInProgress
struct USlateInputInteractComponent_InteractInProgress_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.GetInteractWidget3D
struct USlateInputInteractComponent_GetInteractWidget3D_Params
{
	class UBendWidgetComponent*                        ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.GetInteractWidget
struct USlateInputInteractComponent_GetInteractWidget_Params
{
	class UInputInteractWidget*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SlateInputInteractComponent.DisplayInteract
struct USlateInputInteractComponent_DisplayInteract_Params
{
};

// Function BendGame.SlateInputInteractComponent.BeginInteract
struct USlateInputInteractComponent_BeginInteract_Params
{
};

// Function BendGame.StartConversationBlueprintProxy.OnDynamicConversationTerminated
struct UStartConversationBlueprintProxy_OnDynamicConversationTerminated_Params
{
	class UBendDynamicConversation*                    DynamicConversation;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StaticMeshActorSMP.SetParticleSystemTemplate_SMP
struct AStaticMeshActorSMP_SetParticleSystemTemplate_SMP_Params
{
	class UParticleSystemComponent*                    ParticleSystemComponent;                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             NewTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StaticMeshActorSMP.SetMobility_SMP
struct AStaticMeshActorSMP_SetMobility_SMP_Params
{
	class USceneComponent*                             SceneComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EComponentMobility>                    NewMobility;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StealthMeterWedge.UpdateAwareness
struct UStealthMeterWedge_UpdateAwareness_Params
{
	float                                              NewAwareness;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StealthMeterWedge.SetColor
struct UStealthMeterWedge_SetColor_Params
{
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Durastion;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StealthMeterWedge.ResetAwareness
struct UStealthMeterWedge_ResetAwareness_Params
{
};

// Function BendGame.StealthMeterEntry.StealthMeterUsePlayerRotation
struct UStealthMeterEntry_StealthMeterUsePlayerRotation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.StealthMeter.UpdateSectorsFocus
struct UStealthMeter_UpdateSectorsFocus_Params
{
};

// Function BendGame.StealthMeter.UpdateSectors
struct UStealthMeter_UpdateSectors_Params
{
};

// Function BendGame.StealthMeter.SyncRotation
struct UStealthMeter_SyncRotation_Params
{
	struct FRotator                                    PlayerRotation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    CameraRotation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               UsePlayerRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.StealthMeter.SyncAwareness
struct UStealthMeter_SyncAwareness_Params
{
	float                                              MaxAware;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.StealthMeter.SetFocused
struct UStealthMeter_SetFocused_Params
{
	bool                                               Focused;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.StealthMeter.GetMaxAwareness
struct UStealthMeter_GetMaxAwareness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.StealthMeter.CallBecameFound
struct UStealthMeter_CallBecameFound_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SubtitleWidget.UpdateVisibility
struct USubtitleWidget_UpdateVisibility_Params
{
};

// Function BendGame.SubtitleWidget.KillSubtitles
struct USubtitleWidget_KillSubtitles_Params
{
};

// Function BendGame.SubtitleWidget.GetSubtitlePlaybackTime
struct USubtitleWidget_GetSubtitlePlaybackTime_Params
{
	struct FBendSubtitleCue                            SubtitleCue;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SubtitleWidget.DisplaySubtitleWithName
struct USubtitleWidget_DisplaySubtitleWithName_Params
{
	struct FString                                     SubTitle;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
};

// Function BendGame.SubtitleWidget.DisplaySubtitleWithDuration
struct USubtitleWidget_DisplaySubtitleWithDuration_Params
{
	struct FString                                     SubTitle;                                                 // (Parm, ZeroConstructor)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SubtitleWidget.DisplaySubtitleCueArray
struct USubtitleWidget_DisplaySubtitleCueArray_Params
{
	TArray<struct FBendSubtitleCue>                    SubtitleCueArray;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SubtitleWidget.DisplaySubtitleCue
struct USubtitleWidget_DisplaySubtitleCue_Params
{
	struct FBendSubtitleCue                            SubtitleCue;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.SubtitleWidget.DisplaySubtitle
struct USubtitleWidget_DisplaySubtitle_Params
{
	struct FString                                     SubTitle;                                                 // (Parm, ZeroConstructor)
};

// Function BendGame.SubtitleWidget.ClearSubtitles
struct USubtitleWidget_ClearSubtitles_Params
{
};

// Function BendGame.SurvivalWheel.SetSelectedIndex
struct USurvivalWheel_SetSelectedIndex_Params
{
	int                                                CategoryIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.ResetWheelState
struct USurvivalWheel_ResetWheelState_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveUseReleased
struct USurvivalWheel_ReceiveUseReleased_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveUsePressed
struct USurvivalWheel_ReceiveUsePressed_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveOnValidAnalogInput
struct USurvivalWheel_ReceiveOnValidAnalogInput_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.ReceiveOnToggleCategoryPressed
struct USurvivalWheel_ReceiveOnToggleCategoryPressed_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveOnOpenCategoryPressed
struct USurvivalWheel_ReceiveOnOpenCategoryPressed_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveOnInvalidAnalogInput
struct USurvivalWheel_ReceiveOnInvalidAnalogInput_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.ReceiveOnCloseCategoryPressed
struct USurvivalWheel_ReceiveOnCloseCategoryPressed_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveCraftReleased
struct USurvivalWheel_ReceiveCraftReleased_Params
{
};

// Function BendGame.SurvivalWheel.ReceiveCraftPressed
struct USurvivalWheel_ReceiveCraftPressed_Params
{
};

// Function BendGame.SurvivalWheel.OpenSelectedCategory
struct USurvivalWheel_OpenSelectedCategory_Params
{
};

// Function BendGame.SurvivalWheel.OnSurvivalWheelOpened
struct USurvivalWheel_OnSurvivalWheelOpened_Params
{
};

// Function BendGame.SurvivalWheel.OnSurvivalWheelClosed
struct USurvivalWheel_OnSurvivalWheelClosed_Params
{
};

// Function BendGame.SurvivalWheel.IsCategoryOpen
struct USurvivalWheel_IsCategoryOpen_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.InputChanged
struct USurvivalWheel_InputChanged_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.GetCategoryExpansionPercent
struct USurvivalWheel_GetCategoryExpansionPercent_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.CloseSelectedCategory
struct USurvivalWheel_CloseSelectedCategory_Params
{
};

// Function BendGame.SurvivalWheel.CategorySelected
struct USurvivalWheel_CategorySelected_Params
{
	int                                                CategoryIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USurvivalWheelCategory*                      Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.CategoryItemSelected
struct USurvivalWheel_CategoryItemSelected_Params
{
	int                                                CategoryIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USurvivalWheelCategory*                      Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CategoryItemIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class USurvivalWheelItem*                          Item;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheel.CategoryHighlighted
struct USurvivalWheel_CategoryHighlighted_Params
{
	int                                                CategoryIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class USurvivalWheelCategory*                      Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.SetSelectedItem
struct USurvivalWheelCategory_SetSelectedItem_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.Select
struct USurvivalWheelCategory_Select_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.Preview
struct USurvivalWheelCategory_Preview_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.Open
struct USurvivalWheelCategory_Open_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.OnSelected
struct USurvivalWheelCategory_OnSelected_Params
{
};

// Function BendGame.SurvivalWheelCategory.OnPreviewed
struct USurvivalWheelCategory_OnPreviewed_Params
{
};

// Function BendGame.SurvivalWheelCategory.OnOpened
struct USurvivalWheelCategory_OnOpened_Params
{
};

// Function BendGame.SurvivalWheelCategory.OnItemSelected
struct USurvivalWheelCategory_OnItemSelected_Params
{
};

// Function BendGame.SurvivalWheelCategory.OnInputModeChanged
struct USurvivalWheelCategory_OnInputModeChanged_Params
{
	bool                                               bUsingMouseInput;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.OnDeselected
struct USurvivalWheelCategory_OnDeselected_Params
{
};

// Function BendGame.SurvivalWheelCategory.OnClosed
struct USurvivalWheelCategory_OnClosed_Params
{
};

// Function BendGame.SurvivalWheelCategory.IsSelected
struct USurvivalWheelCategory_IsSelected_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.HasItems
struct USurvivalWheelCategory_HasItems_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetItemWidth
struct USurvivalWheelCategory_GetItemWidth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetItemForWeapon
struct USurvivalWheelCategory_GetItemForWeapon_Params
{
	class ABendWeapon*                                 Weapon;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class USurvivalWheelItem*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetItemCount
struct USurvivalWheelCategory_GetItemCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetExpansionState
struct USurvivalWheelCategory_GetExpansionState_Params
{
	TEnumAsByte<ESurvivalWheelCategoryState>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetExpandedWidth
struct USurvivalWheelCategory_GetExpandedWidth_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.GetCategoryAngle
struct USurvivalWheelCategory_GetCategoryAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.Deselect
struct USurvivalWheelCategory_Deselect_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.ContainsAngle
struct USurvivalWheelCategory_ContainsAngle_Params
{
	float                                              InAngle;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.Close
struct USurvivalWheelCategory_Close_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.CanOpen
struct USurvivalWheelCategory_CanOpen_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelCategory.CalculateItemWidth
struct USurvivalWheelCategory_CalculateItemWidth_Params
{
};

// Function BendGame.SurvivalWheelItem.SetDetails
struct USurvivalWheelItem_SetDetails_Params
{
	class UInventoryItem*                              InInventoryItem;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.SurvivalWheelItem.RefreshDetails
struct USurvivalWheelItem_RefreshDetails_Params
{
};

// Function BendGame.SurvivalWheelItem.ItemSelected
struct USurvivalWheelItem_ItemSelected_Params
{
};

// Function BendGame.SurvivalWheelItem.ItemDeselected
struct USurvivalWheelItem_ItemDeselected_Params
{
};

// Function BendGame.SurvivalWheelItem.IsValidForSelection
struct USurvivalWheelItem_IsValidForSelection_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.SurvivalWheelItem.IsEmpty
struct USurvivalWheelItem_IsEmpty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.MakeVectorTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeVectorTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeTextTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeTextTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	struct FText                                       Value;                                                    // (Parm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeTextArrayTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeTextArrayTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TArray<struct FText>                               Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeStringTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeStringTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeStringArrayTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeStringArrayTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TArray<struct FString>                             Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeIntTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeIntTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeIntArrayTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeIntArrayTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TArray<int>                                        Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeFloatTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeFloatTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeFloatArrayTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeFloatArrayTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TArray<float>                                      Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeBoolTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeBoolTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.MakeBoolArrayTelemetryAttribute
struct UTelemetryFunctionLibrary_MakeBoolArrayTelemetryAttribute_Params
{
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TArray<bool>                                       Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FTelemetryEventTypedAttr                    ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.TelemetryFunctionLibrary.GetTelemetryMemoryStats
struct UTelemetryFunctionLibrary_GetTelemetryMemoryStats_Params
{
	TArray<struct FTelemetryEventTypedAttr>            Attributes;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.TelemetryFunctionLibrary.GetStreamingStats
struct UTelemetryFunctionLibrary_GetStreamingStats_Params
{
	TArray<struct FTelemetryEventAttr>                 Attributes;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.TelemetryFunctionLibrary.GetStreamingStat
struct UTelemetryFunctionLibrary_GetStreamingStat_Params
{
	TEnumAsByte<EBPStreamingStatId>                    StatId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetNumLoadedPackages
struct UTelemetryFunctionLibrary_GetNumLoadedPackages_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetNumAsyncPackages
struct UTelemetryFunctionLibrary_GetNumAsyncPackages_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetMemoryStats
struct UTelemetryFunctionLibrary_GetMemoryStats_Params
{
	TArray<struct FTelemetryEventAttr>                 Attributes;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.TelemetryFunctionLibrary.GetMallocTrackerUsageExternal
struct UTelemetryFunctionLibrary_GetMallocTrackerUsageExternal_Params
{
	TEnumAsByte<EBPMallocTrackerGroupExternal>         GroupId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetMallocTrackerUsage
struct UTelemetryFunctionLibrary_GetMallocTrackerUsage_Params
{
	TEnumAsByte<EBPMallocTrackerGroup>                 GroupId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetMallocTrackerBudgetExternal
struct UTelemetryFunctionLibrary_GetMallocTrackerBudgetExternal_Params
{
	TEnumAsByte<EBPMallocTrackerGroupExternal>         GroupId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetMallocTrackerBudget
struct UTelemetryFunctionLibrary_GetMallocTrackerBudget_Params
{
	TEnumAsByte<EBPMallocTrackerGroup>                 GroupId;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetAverageRenderThreadTime
struct UTelemetryFunctionLibrary_GetAverageRenderThreadTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetAverageGPUFrameTime
struct UTelemetryFunctionLibrary_GetAverageGPUFrameTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetAverageGameThreadTime
struct UTelemetryFunctionLibrary_GetAverageGameThreadTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.GetAverageFPS
struct UTelemetryFunctionLibrary_GetAverageFPS_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.BroadcastEventWithTypedAttributes
struct UTelemetryFunctionLibrary_BroadcastEventWithTypedAttributes_Params
{
	struct FString                                     EventName;                                                // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FTelemetryEventTypedAttr>            Attributes;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bBroadcastEvent;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPrintToScreen;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.TelemetryFunctionLibrary.BroadcastEventWithAttributes
struct UTelemetryFunctionLibrary_BroadcastEventWithAttributes_Params
{
	struct FText                                       EventName;                                                // (ConstParm, Parm)
	TArray<struct FTelemetryEventAttr>                 Attributes;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bBroadcastEvent;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPrintToScreen;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.TouchpadDisplay.UpdateCanvas
struct UTouchpadDisplay_UpdateCanvas_Params
{
};

// Function BendGame.TouchpadDisplay.InitializeCanvas
struct UTouchpadDisplay_InitializeCanvas_Params
{
};

// Function BendGame.TouchpadDisplay.HighlightLocation
struct UTouchpadDisplay_HighlightLocation_Params
{
	int                                                X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.TouchpadDisplay.FadeCanvas
struct UTouchpadDisplay_FadeCanvas_Params
{
};

// Function BendGame.TouchpadDisplay.ClearCanvas
struct UTouchpadDisplay_ClearCanvas_Params
{
};

// Function BendGame.UIManager.SpawnMenu3D
struct AUIManager_SpawnMenu3D_Params
{
	class AMenu3D*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.SpawnMap3D
struct AUIManager_SpawnMap3D_Params
{
	struct FVector                                     Location;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotator;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AMap3D*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.SetUse3DMenu
struct AUIManager_SetUse3DMenu_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetUIPostProcessEnabled
struct AUIManager_SetUIPostProcessEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetSubtitlesForceHidden
struct AUIManager_SetSubtitlesForceHidden_Params
{
	bool                                               bForceHidden;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetSubtitlesEnabled
struct AUIManager_SetSubtitlesEnabled_Params
{
	bool                                               Enabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetSubtitles
struct AUIManager_SetSubtitles_Params
{
	TArray<struct FBendSubtitleCue>                    Subtitles;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              TotalDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetPauseMenuDisabled
struct AUIManager_SetPauseMenuDisabled_Params
{
	bool                                               IsDisabled;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.SetControllerDisconnectHandled
struct AUIManager_SetControllerDisconnectHandled_Params
{
};

// Function BendGame.UIManager.KillAllSubtitles
struct AUIManager_KillAllSubtitles_Params
{
};

// Function BendGame.UIManager.IsUsing3DMenu
struct AUIManager_IsUsing3DMenu_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsSubtitlesForceHidden
struct AUIManager_IsSubtitlesForceHidden_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsSubtitlesEnabled
struct AUIManager_IsSubtitlesEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsPauseMenuDisabled
struct AUIManager_IsPauseMenuDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsPauseMenuActive
struct AUIManager_IsPauseMenuActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsDebugSubtitles
struct AUIManager_IsDebugSubtitles_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.IsControllerDisconnected
struct AUIManager_IsControllerDisconnected_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetUIVariables
struct AUIManager_GetUIVariables_Params
{
	class UUIDesignerVariables*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetUIManager
struct AUIManager_GetUIManager_Params
{
	class AUIManager*                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetTutorialManager
struct AUIManager_GetTutorialManager_Params
{
	class UBendTutorialManager*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetSubtitleWidget
struct AUIManager_GetSubtitleWidget_Params
{
	class USubtitleWidget*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetMenu3D
struct AUIManager_GetMenu3D_Params
{
	class AMenu3D*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.GetMap3D
struct AUIManager_GetMap3D_Params
{
	class AMap3D*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.UIManager.ForceGCNextTick
struct AUIManager_ForceGCNextTick_Params
{
};

// Function BendGame.UIManager.EnableHighFPS
struct AUIManager_EnableHighFPS_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.UIManager.ConstructMenuWidgetBase
struct AUIManager_ConstructMenuWidgetBase_Params
{
	TEnumAsByte<EWidgetMenuClass>                      MenuClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldAddToViewport;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UBaseMenuWidget*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.ToggleRideAssist
struct AVehicleInputListener_ToggleRideAssist_Params
{
};

// Function BendGame.VehicleInputListener.SurvivalWheelReleased
struct AVehicleInputListener_SurvivalWheelReleased_Params
{
};

// Function BendGame.VehicleInputListener.SurvivalWheelPressed
struct AVehicleInputListener_SurvivalWheelPressed_Params
{
};

// Function BendGame.VehicleInputListener.OnWeaponFireReleased
struct AVehicleInputListener_OnWeaponFireReleased_Params
{
};

// Function BendGame.VehicleInputListener.OnWeaponFirePressed
struct AVehicleInputListener_OnWeaponFirePressed_Params
{
};

// Function BendGame.VehicleInputListener.OnWalkModifierTogglePressed
struct AVehicleInputListener_OnWalkModifierTogglePressed_Params
{
};

// Function BendGame.VehicleInputListener.OnWalkBackward
struct AVehicleInputListener_OnWalkBackward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnWalkAxisTurn_RightKeyboard
struct AVehicleInputListener_OnWalkAxisTurn_RightKeyboard_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnWalkAxisTurn_LeftKeyboard
struct AVehicleInputListener_OnWalkAxisTurn_LeftKeyboard_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnWalkAxisTurn_GamePad
struct AVehicleInputListener_OnWalkAxisTurn_GamePad_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnWalkAxisForward
struct AVehicleInputListener_OnWalkAxisForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnVehicleEnterExitedReleased
struct AVehicleInputListener_OnVehicleEnterExitedReleased_Params
{
};

// Function BendGame.VehicleInputListener.OnVehicleEnterExitedPressed
struct AVehicleInputListener_OnVehicleEnterExitedPressed_Params
{
};

// Function BendGame.VehicleInputListener.OnTurnRight
struct AVehicleInputListener_OnTurnRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnTurnLeft
struct AVehicleInputListener_OnTurnLeft_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnTireSlipOn
struct AVehicleInputListener_OnTireSlipOn_Params
{
};

// Function BendGame.VehicleInputListener.OnTireSlipOff
struct AVehicleInputListener_OnTireSlipOff_Params
{
};

// Function BendGame.VehicleInputListener.OnTiltForwardKey
struct AVehicleInputListener_OnTiltForwardKey_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnTiltForward
struct AVehicleInputListener_OnTiltForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnTiltBackwardKey
struct AVehicleInputListener_OnTiltBackwardKey_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnStopAiming
struct AVehicleInputListener_OnStopAiming_Params
{
};

// Function BendGame.VehicleInputListener.OnStartAiming
struct AVehicleInputListener_OnStartAiming_Params
{
};

// Function BendGame.VehicleInputListener.OnMoveRight
struct AVehicleInputListener_OnMoveRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnMoveForward
struct AVehicleInputListener_OnMoveForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnMoveBackward
struct AVehicleInputListener_OnMoveBackward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnHandbrakePressed
struct AVehicleInputListener_OnHandbrakePressed_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.VehicleInputListener.OnDisengageClutchOn
struct AVehicleInputListener_OnDisengageClutchOn_Params
{
};

// Function BendGame.VehicleInputListener.OnDisengageClutchOff
struct AVehicleInputListener_OnDisengageClutchOff_Params
{
};

// Function BendGame.VehicleInputListener.OnBoostTogglePressed
struct AVehicleInputListener_OnBoostTogglePressed_Params
{
};

// Function BendGame.VehicleInputListener.OnBoostReleased
struct AVehicleInputListener_OnBoostReleased_Params
{
};

// Function BendGame.VehicleInputListener.OnBoostPressed
struct AVehicleInputListener_OnBoostPressed_Params
{
};

// Function BendGame.VehicleInputListener.OnBlindFireReleased
struct AVehicleInputListener_OnBlindFireReleased_Params
{
};

// Function BendGame.VehicleInputListener.OnBlindFirePressed
struct AVehicleInputListener_OnBlindFirePressed_Params
{
};

// Function BendGame.VehicleInputListener.OnBlindFireCycleTarget
struct AVehicleInputListener_OnBlindFireCycleTarget_Params
{
};

// Function BendGame.VehicleInputListener.FireReleased
struct AVehicleInputListener_FireReleased_Params
{
};

// Function BendGame.VehicleInputListener.FirePressed
struct AVehicleInputListener_FirePressed_Params
{
};

// Function BendGame.VehicleInputListener.CycleReleased
struct AVehicleInputListener_CycleReleased_Params
{
};

// Function BendGame.VehicleInputListener.CyclePressed
struct AVehicleInputListener_CyclePressed_Params
{
};

// Function BendGame.VehicleInputListener.ConsumeInput
struct AVehicleInputListener_ConsumeInput_Params
{
};

// Function BendGame.VehicleMeshActor.SetMobility_Vehicle
struct AVehicleMeshActor_SetMobility_Vehicle_Params
{
	class USceneComponent*                             SceneComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EComponentMobility>                    NewMobility;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WaypointWidget.SyncDistance
struct AWaypointWidget_SyncDistance_Params
{
	bool                                               ForceUpdate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WaypointWidget.OnDistanceChanged
struct AWaypointWidget_OnDistanceChanged_Params
{
	struct FText                                       DistanceText;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.WaypointWidget.GetDistanceText
struct AWaypointWidget_GetDistanceText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.WeaponComparisonDataAggregator.PerformWeaponGenerationStep
struct AWeaponComparisonDataAggregator_PerformWeaponGenerationStep_Params
{
	int                                                Items;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WeaponComparisonDataAggregator.GenerateComparisonDataForWeapons
struct AWeaponComparisonDataAggregator_GenerateComparisonDataForWeapons_Params
{
};

// Function BendGame.WeaponComparisonDataAggregator.GenerateComparisonDataForWeaponParts
struct AWeaponComparisonDataAggregator_GenerateComparisonDataForWeaponParts_Params
{
};

// Function BendGame.WeatherLibrary.WeightedSelection
struct UWeatherLibrary_WeightedSelection_Params
{
	TArray<float>                                      Weights;                                                  // (Parm, ZeroConstructor)
	float                                              fZeroToOne;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.WeatherLibrary.SetWindValues
struct UWeatherLibrary_SetWindValues_Params
{
	class AWindDirectionalSource*                      WindActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InStrength;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InSpeed;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WeatherLibrary.SetWindDirection
struct UWeatherLibrary_SetWindDirection_Params
{
	class AWindDirectionalSource*                      WindActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ZRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WeatherLibrary.GetWindValues
struct UWeatherLibrary_GetWindValues_Params
{
	class AWindDirectionalSource*                      WindActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              InStrength;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              InSpeed;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.WorldQueryNodes.GetWorldName
struct UWorldQueryNodes_GetWorldName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.WorldQueryNodes.GetWorldMapRoot
struct UWorldQueryNodes_GetWorldMapRoot_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecRestrictArea.OnBoxBeginOverlap
struct AXpecRestrictArea_OnBoxBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.UpdateAnimationData
struct AXpecBlockingPawnSpawnLocation_UpdateAnimationData_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.SpawnDummyPawn
struct AXpecBlockingPawnSpawnLocation_SpawnDummyPawn_Params
{
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	class AXpecDummySkeletalMeshActor*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.SetupAnimBP
struct AXpecBlockingPawnSpawnLocation_SetupAnimBP_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.PlayMontage
struct AXpecBlockingPawnSpawnLocation_PlayMontage_Params
{
	class UAnimMontage*                                anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartSectionName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.OnTriggerEndOverlap
struct AXpecBlockingPawnSpawnLocation_OnTriggerEndOverlap_Params
{
};

// Function BendGame.XpecBlockingPawnSpawnLocation.OnTriggerBeginOverlap
struct AXpecBlockingPawnSpawnLocation_OnTriggerBeginOverlap_Params
{
};

// Function BendGame.XpecBlockingPawnSpawnLocation.IUntrigger
struct AXpecBlockingPawnSpawnLocation_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.ITrigger
struct AXpecBlockingPawnSpawnLocation_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.GetSpawnTransform
struct AXpecBlockingPawnSpawnLocation_GetSpawnTransform_Params
{
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.FinishedLoadingLook
struct AXpecBlockingPawnSpawnLocation_FinishedLoadingLook_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.ExitedVehicle
struct AXpecBlockingPawnSpawnLocation_ExitedVehicle_Params
{
	class AVehiclePawn*                                VehiclePawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendVehicleExitReason>                VehicleExitReason;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.EnableBlocking
struct AXpecBlockingPawnSpawnLocation_EnableBlocking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecBlockingPawnSpawnLocation.DisableBlocking
struct AXpecBlockingPawnSpawnLocation_DisableBlocking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.SpawnScenarioInstance
struct AXpecEventManager_SpawnScenarioInstance_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.SpawnScenarioActorSlot
struct AXpecEventManager_SpawnScenarioActorSlot_Params
{
	class AXpecPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.SetRandomWaitTime
struct AXpecEventManager_SetRandomWaitTime_Params
{
	struct FName                                       evetName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RandomMin;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RandomMax;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.OnPlayerLeavingEncampment
struct AXpecEventManager_OnPlayerLeavingEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.OnPlayerEnteredEncampment
struct AXpecEventManager_OnPlayerEnteredEncampment_Params
{
	class UBendEncampmentData*                         Encampment;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.GetZoneManagerById
struct AXpecEventManager_GetZoneManagerById_Params
{
	struct FName                                       zoneId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.GetTimeZone
struct AXpecEventManager_GetTimeZone_Params
{
	TEnumAsByte<EXpecTimeZone>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugPrintInfo
struct AXpecEventManager_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecEventManager.DebugOnZonePreview
struct AXpecEventManager_DebugOnZonePreview_Params
{
	struct FName                                       zoneName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnWeatherSelected
struct AXpecEventManager_DebugOnWeatherSelected_Params
{
	struct FName                                       NodeName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnUsePOISelected
struct AXpecEventManager_DebugOnUsePOISelected_Params
{
	struct FName                                       ItemName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnTimeSelected
struct AXpecEventManager_DebugOnTimeSelected_Params
{
	struct FName                                       NodeName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnSpawnSelected
struct AXpecEventManager_DebugOnSpawnSelected_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnSendEventSelected
struct AXpecEventManager_DebugOnSendEventSelected_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnPOIPreview
struct AXpecEventManager_DebugOnPOIPreview_Params
{
	struct FName                                       POIName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnPOIFocused
struct AXpecEventManager_DebugOnPOIFocused_Params
{
	struct FName                                       POIName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnPawnPreview
struct AXpecEventManager_DebugOnPawnPreview_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnPawnFocused
struct AXpecEventManager_DebugOnPawnFocused_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnKillSelected
struct AXpecEventManager_DebugOnKillSelected_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnInfoZoneSelected
struct AXpecEventManager_DebugOnInfoZoneSelected_Params
{
	struct FName                                       zoneName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnInfoPOISelected
struct AXpecEventManager_DebugOnInfoPOISelected_Params
{
	struct FName                                       POIName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugOnInfoPawnSelected
struct AXpecEventManager_DebugOnInfoPawnSelected_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugDeleteInfos
struct AXpecEventManager_DebugDeleteInfos_Params
{
	struct FName                                       ItemName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEventManager.DebugAddInfos
struct AXpecEventManager_DebugAddInfos_Params
{
	struct FName                                       ItemName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.ZoneActivated
struct AXpecPopulation_ZoneActivated_Params
{
	class AXpecZoneManager*                            zoneManager;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Activated;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.UpdateLook
struct AXpecPopulation_UpdateLook_Params
{
	struct FName                                       nameToOverride;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.SetLODLevel
struct AXpecPopulation_SetLODLevel_Params
{
	class ABendPawnSpawnLocation*                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPawnLODLevel>                     eLevel;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDistance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.SetLODBoxManager
struct AXpecPopulation_SetLODBoxManager_Params
{
	class AXpecLODBoxManager*                          mgr;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.SetInitPOIForDummy
struct AXpecPopulation_SetInitPOIForDummy_Params
{
	int                                                iSN;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FXpecScenarioSave                           poiData;                                                  // (ConstParm, Parm)
	class USkeletalMeshComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecPopulation.ResetSpawnerLODBoxUpdate
struct AXpecPopulation_ResetSpawnerLODBoxUpdate_Params
{
	int                                                sn;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RequestSpawnLowLOD
struct AXpecPopulation_RequestSpawnLowLOD_Params
{
	class ABendPawnSpawnLocation*                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ASkeletalMeshActor*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RequestActivateSpawner
struct AXpecPopulation_RequestActivateSpawner_Params
{
	TEnumAsByte<EXpecPOIUserType>                      pawnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               currentActivate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isImportant;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RemoveOverrideLook
struct AXpecPopulation_RemoveOverrideLook_Params
{
	struct FName                                       nameToOverride;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RemoveEventPawn
struct AXpecPopulation_RemoveEventPawn_Params
{
	class AActor*                                      eventPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RemoveDummyPawn
struct AXpecPopulation_RemoveDummyPawn_Params
{
	class AActor*                                      DummyPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RegisterSpawner
struct AXpecPopulation_RegisterSpawner_Params
{
	class ABendPawnSpawnLocation*                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RegisterPawn
struct AXpecPopulation_RegisterPawn_Params
{
	class ABendPawnSpawnLocation*                      pSpwaner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           pController;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RegisterEventPawn
struct AXpecPopulation_RegisterEventPawn_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendAIController*                           pController;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RecycleKilledPawn
struct AXpecPopulation_RecycleKilledPawn_Params
{
	class ABendPawn*                                   KilledPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.RecoverPawnInfoLook
struct AXpecPopulation_RecoverPawnInfoLook_Params
{
	struct FName                                       nameToOverride;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.PawnWeaponAdded
struct AXpecPopulation_PawnWeaponAdded_Params
{
	class ABendWeapon*                                 pWeapon;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.OverridePawnInfoLook
struct AXpecPopulation_OverridePawnInfoLook_Params
{
	struct FName                                       nameToOverride;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.NotifyDeactivateSpawner
struct AXpecPopulation_NotifyDeactivateSpawner_Params
{
	TEnumAsByte<EXpecPOIUserType>                      pawnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.LoadDataTable
struct AXpecPopulation_LoadDataTable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.Load
struct AXpecPopulation_Load_Params
{
	bool                                               bForceReload;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.GetPopulationRowByName
struct AXpecPopulation_GetPopulationRowByName_Params
{
	class UDataTable*                                  DataTable;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       pName;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FXpecPawnInfo                               ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecPopulation.GetPawnInfoString
struct AXpecPopulation_GetPawnInfoString_Params
{
	int                                                sn;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               showPOIName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPopulation.GetPawnInfo
struct AXpecPopulation_GetPawnInfo_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FXpecLODPawn                                ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecPopulation.FreezeDummyTick
struct AXpecPopulation_FreezeDummyTick_Params
{
	class ABendPawnSpawnLocation*                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               freeze;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.FindSecondaryMovingTargetForEventPawn
struct AXpecPopulation_FindSecondaryMovingTargetForEventPawn_Params
{
	class AActor*                                      eventPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  pNewTransform;                                            // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.FindPawnInfo
struct AXpecPopulation_FindPawnInfo_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FXpecPawnInfo                               pawnInfo;                                                 // (Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.FindMovingTargetForEventPawn
struct AXpecPopulation_FindMovingTargetForEventPawn_Params
{
	struct FXpecLODPawn                                pawnInfo;                                                 // (Parm)
	struct FTransform                                  pNewTransform;                                            // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.EventFromRallySystem
struct AXpecPopulation_EventFromRallySystem_Params
{
	TEnumAsByte<EXpecRallyEvent>                       eventType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.DespawnLowLODBySN
struct AXpecPopulation_DespawnLowLODBySN_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.DespawnLowLOD
struct AXpecPopulation_DespawnLowLOD_Params
{
	class ABendPawnSpawnLocation*                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.DeactivateEventPawn
struct AXpecPopulation_DeactivateEventPawn_Params
{
	class ABendPawn*                                   pEventPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.CreateDummy
struct AXpecPopulation_CreateDummy_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ASkeletalMeshActor*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.CheckPawnLODBoxOverlap
struct AXpecPopulation_CheckPawnLODBoxOverlap_Params
{
	class AActor*                                      currentActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isInImportantBlock;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               isInUnseenBlock;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               isInIsolateArea;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.AddOverrideLook
struct AXpecPopulation_AddOverrideLook_Params
{
	struct FName                                       nameToOverride;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UBendSkeletalMeshLookBase*                   overridelook;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.AddEventPawn
struct AXpecPopulation_AddEventPawn_Params
{
	class AActor*                                      eventPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.AddDummyPawn
struct AXpecPopulation_AddDummyPawn_Params
{
	class AActor*                                      DummyPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.Add
struct AXpecPopulation_Add_Params
{
	struct FXpecPawnInfo                               pawnInfo;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPopulation.ActivateSpawnersOnAdjust
struct AXpecPopulation_ActivateSpawnersOnAdjust_Params
{
	class AXpecEventManager*                           m_EventMgr;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPopulation.ActivateEventPawn
struct AXpecPopulation_ActivateEventPawn_Params
{
	struct FXpecLODPawn                                pPawnInfo;                                                // (Parm)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecRallySystem.RequestRally
struct AXpecRallySystem_RequestRally_Params
{
	bool                                               bSkipRally;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRallySystem.RequestDismiss
struct AXpecRallySystem_RequestDismiss_Params
{
};

// Function BendGame.XpecRallySystem.OnPawnMoveComplete
struct AXpecRallySystem_OnPawnMoveComplete_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRallySystem.OnPawnEnterSpeechArea
struct AXpecRallySystem_OnPawnEnterSpeechArea_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.XpecRallySystem.OnMissionSpecialEvent
struct AXpecRallySystem_OnMissionSpecialEvent_Params
{
	struct FString                                     CustomMessage;                                            // (Parm, ZeroConstructor)
	TEnumAsByte<EMissionIDs>                           MissionID;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRallySystem.FillPawnToZoneIDMappings
struct AXpecRallySystem_FillPawnToZoneIDMappings_Params
{
	bool                                               outputResultToLog;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecShiftController.SetUpAreaPawnName
struct AXpecShiftController_SetUpAreaPawnName_Params
{
	TArray<struct FName>                               pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecShiftController.SetShiftPOIPawnName
struct AXpecShiftController_SetShiftPOIPawnName_Params
{
	TArray<struct FName>                               upAreaPawnName;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               downAreaPawnName;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecShiftController.SetDownAreaPawnName
struct AXpecShiftController_SetDownAreaPawnName_Params
{
	TArray<struct FName>                               pawnName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecShiftController.IUntrigger
struct AXpecShiftController_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecShiftController.ITrigger
struct AXpecShiftController_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnerInterface.IIsActivated
struct UXpecTalkingPawnSpawnerInterface_IIsActivated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnerInterface.IGetSpawnTransform
struct UXpecTalkingPawnSpawnerInterface_IGetSpawnTransform_Params
{
	class AActor*                                      pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.SpawnEventPawn
struct AXpecTalkingPawnSpawnLocation_SpawnEventPawn_Params
{
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.SpawnDummyPawn
struct AXpecTalkingPawnSpawnLocation_SpawnDummyPawn_Params
{
	struct FTransform                                  Transform;                                                // (Parm, IsPlainOldData)
	class ASkeletalMeshActor*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.OnTrustChanged
struct AXpecTalkingPawnSpawnLocation_OnTrustChanged_Params
{
	class UBendEncampmentData*                         encamp;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETrustTier>                            PreviousTier;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETrustTier>                            NewTier;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.IIsActivated
struct AXpecTalkingPawnSpawnLocation_IIsActivated_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.IGetSpawnTransform
struct AXpecTalkingPawnSpawnLocation_IGetSpawnTransform_Params
{
	class AActor*                                      pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.GetVOClassC
struct AXpecTalkingPawnSpawnLocation_GetVOClassC_Params
{
	TEnumAsByte<EXpecVOClass>                          Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TAssetPtr<class USoundClass>                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.GetNormalVOTag
struct AXpecTalkingPawnSpawnLocation_GetNormalVOTag_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.GetMeatVOTag
struct AXpecTalkingPawnSpawnLocation_GetMeatVOTag_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.FinishedLoadingLook
struct AXpecTalkingPawnSpawnLocation_FinishedLoadingLook_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnSpawnLocation.FinishedLoadingDuelLook
struct AXpecTalkingPawnSpawnLocation_FinishedLoadingDuelLook_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnController.OnVOComplete
struct AXpecTalkingPawnController_OnVOComplete_Params
{
	class ABendPawn*                                   PawnSpeaking;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoundName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ConversationID;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDonePlayVocalReason>                  SuccessOrFail;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnController.IUntrigger
struct AXpecTalkingPawnController_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnController.ITrigger
struct AXpecTalkingPawnController_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDebugActor.Tick_BP
struct AXpecDebugActor_Tick_BP_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecDebugActor.HelpTickPoseInEditor
struct AXpecDebugActor_HelpTickPoseInEditor_Params
{
	class USkeletalMeshComponent*                      SkeletalMeshComp;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecDummyMovementComponent.SetSkeletalMeshForRootMotion
struct UXpecDummyMovementComponent_SetSkeletalMeshForRootMotion_Params
{
	class USkeletalMeshComponent*                      pInSkeletalMeshComponent;                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecDummySpawnInterface.IGetDummySpawnLocationCandidates
struct UXpecDummySpawnInterface_IGetDummySpawnLocationCandidates_Params
{
	TArray<struct FTransform>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecEvent.ITryResumeScenario
struct AXpecEvent_ITryResumeScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IScenarioCondition
struct AXpecEvent_IScenarioCondition_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       conditionName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideTimerTime
struct AXpecEvent_IOverrideTimerTime_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultTimerTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideRotateAlignTarget
struct AXpecEvent_IOverrideRotateAlignTarget_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverridePerformActionParameter
struct AXpecEvent_IOverridePerformActionParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       defaultAnimGroup;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  defaultAnchorTransform;                                   // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               defaultUseAnchor;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendInTime;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultBlendOutTime;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              DefaultPlayRate;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 defaultWeaponType;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       animGroup;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  AnchorTransform;                                          // (Parm, OutParm, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fPlayRate;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideMoveToParameter
struct AXpecEvent_IOverrideMoveToParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultMoveToSpeed;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultApplySpeedMultiply;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultRadius;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultApproachOuterRadius;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultSlowApproach;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, OutParm, IsPlainOldData)
	float                                              fMoveToSpeed;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedMultiply;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fApproachOuterRadius;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowApproach;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideLookAtParameter
struct AXpecEvent_IOverrideLookAtParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bDefaultOverrideAngleLimits;                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rDefaultAngleLimitsOverride;                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          eDefaultPartialSet;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDefaultInterpolationRate;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultDuration;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rAngleLimitsOverride;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          ePartialSet;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fInterpolationRate;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fDuration;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideGateParameter
struct AXpecEvent_IOverrideGateParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                defaultGateMin;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                defaultGateMax;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMin;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMax;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOverrideDelayParameter
struct AXpecEvent_IOverrideDelayParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultDelayTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOnScenarioSetup
struct AXpecEvent_IOnScenarioSetup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOnScenarioCleanup
struct AXpecEvent_IOnScenarioCleanup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IOnRunScenario
struct AXpecEvent_IOnRunScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pMainActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultScenarioName;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGrant
struct AXpecEvent_IGrant_Params
{
	float                                              fRewardPercentage;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fCostPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetVO
struct AXpecEvent_IGetVO_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       defaultVOName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetSearchCenterForScenarioActor
struct AXpecEvent_IGetSearchCenterForScenarioActor_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetScenarioActorCandidates
struct AXpecEvent_IGetScenarioActorCandidates_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TArray<class ABendPawn*>                           candidates;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetNextScenario
struct AXpecEvent_IGetNextScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lastScenarioName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecScenarioExecuteResult>            eLastScenarioResult;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetFirstScenario
struct AXpecEvent_IGetFirstScenario_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IGetConversationData
struct AXpecEvent_IGetConversationData_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pTalkPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   pTalkToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVocalConversationData>              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecEvent.IGetAnchorTransform
struct AXpecEvent_IGetAnchorTransform_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       AnimGroupName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.ICanActorJoinScenario
struct AXpecEvent_ICanActorJoinScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class ABendPawn*                                   pNewActor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iNewActorIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEvent.IAboutToSwitchToLowLOD
struct AXpecEvent_IAboutToSwitchToLowLOD_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventPawnManagerComponent.RequestEventPawn
struct UXpecEventPawnManagerComponent_RequestEventPawn_Params
{
	struct FXpecLODPawn                                pawnInfo;                                                 // (Parm, OutParm)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventPawnManagerComponent.Initialize
struct UXpecEventPawnManagerComponent_Initialize_Params
{
	int                                                numEventPawn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventPawnManagerComponent.DeactivateEventPawn
struct UXpecEventPawnManagerComponent_DeactivateEventPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecEventPawnManagerComponent.ActivateEventPawn
struct UXpecEventPawnManagerComponent_ActivateEventPawn_Params
{
	struct FXpecLODPawn                                pawnInfo;                                                 // (Parm, OutParm)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecExtendedAllowedToUseInterface.IIsAllowedToUse
struct UXpecExtendedAllowedToUseInterface_IIsAllowedToUse_Params
{
	TEnumAsByte<EXpecPOIUserType>                      userType;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    userGender;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecExtendedAllowedToUseComponent.IIsAllowedToUse
struct UXpecExtendedAllowedToUseComponent_IIsAllowedToUse_Params
{
	TEnumAsByte<EXpecPOIUserType>                      userType;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    userGender;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecLODBoxInstance.SetBoxComponent
struct UXpecLODBoxInstance_SetBoxComponent_Params
{
	class UPrimitiveComponent*                         B;                                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxInstance.OnLODBoxOverlapEnd
struct UXpecLODBoxInstance_OnLODBoxOverlapEnd_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxInstance.OnLODBoxOverlapBegin
struct UXpecLODBoxInstance_OnLODBoxOverlapBegin_Params
{
	class AActor*                                      OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function BendGame.XpecLODBoxManager.RegisterLODBox
struct AXpecLODBoxManager_RegisterLODBox_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UPrimitiveComponent*>                 visibleBoxes;                                             // (Parm, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 invisibleBoxes;                                           // (Parm, ZeroConstructor)
};

// Function BendGame.XpecLODBoxManager.RegisterIsolateArea
struct AXpecLODBoxManager_RegisterIsolateArea_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnPlayerLeaveIsolatedArea
struct AXpecLODBoxManager_OnPlayerLeaveIsolatedArea_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnPlayerLeaveBox
struct AXpecLODBoxManager_OnPlayerLeaveBox_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnPlayerEnterIsolatedArea
struct AXpecLODBoxManager_OnPlayerEnterIsolatedArea_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnPlayerEnterBox
struct AXpecLODBoxManager_OnPlayerEnterBox_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnOtherActorChangeIsolatedArea
struct AXpecLODBoxManager_OnOtherActorChangeIsolatedArea_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnOtherActorChangeBox
struct AXpecLODBoxManager_OnOtherActorChangeBox_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.onIsolateEndOverlap
struct AXpecLODBoxManager_onIsolateEndOverlap_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.onIsolateBeginOverlap
struct AXpecLODBoxManager_onIsolateBeginOverlap_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.onBoxEndOverlap
struct AXpecLODBoxManager_onBoxEndOverlap_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.OnBoxBeginOverlap
struct AXpecLODBoxManager_OnBoxBeginOverlap_Params
{
	class UPrimitiveComponent*                         Box;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecLODBoxManager.DrawDebugBoxes
struct AXpecLODBoxManager_DrawDebugBoxes_Params
{
};

// Function BendGame.XpecLODBoxManager.CheckActorWithLODBox
struct AXpecLODBoxManager_CheckActorWithLODBox_Params
{
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isImportant;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               isInvisible;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               isInIsolateArea;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecMapExporter.IOnConstructionScript
struct UXpecMapExporter_IOnConstructionScript_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingInterface.IHiddenByMissionBlockingVolume
struct UXpecMissionBlockingInterface_IHiddenByMissionBlockingVolume_Params
{
	bool                                               bShouldHide;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyHidePawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.SetPawnsAvoidRoad
struct AXpecMissionBlockingVolume_SetPawnsAvoidRoad_Params
{
	bool                                               bActivate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.RemoveActorFromHidden
struct AXpecMissionBlockingVolume_RemoveActorFromHidden_Params
{
	class AActor*                                      ActorToRemove;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInEndPlay;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.HideActorInVolume
struct AXpecMissionBlockingVolume_HideActorInVolume_Params
{
	class AActor*                                      ActorToHide;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.GetActiveVolumes
struct AXpecMissionBlockingVolume_GetActiveVolumes_Params
{
	TArray<class AXpecMissionBlockingVolume*>          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecMissionBlockingVolume.DisablePOIInVolume
struct AXpecMissionBlockingVolume_DisablePOIInVolume_Params
{
	class AXpecPOI*                                    POIToDisable;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.DeactivateVolume
struct AXpecMissionBlockingVolume_DeactivateVolume_Params
{
};

// Function BendGame.XpecMissionBlockingVolume.CheckPawnMovingToVolume
struct AXpecMissionBlockingVolume_CheckPawnMovingToVolume_Params
{
	class UXpecPawnComponent*                          InXpecPawnComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.CheckActorOverlapVolume
struct AXpecMissionBlockingVolume_CheckActorOverlapVolume_Params
{
	class AActor*                                      InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.BlockImportantSpawner
struct AXpecMissionBlockingVolume_BlockImportantSpawner_Params
{
	class AXpecPawnSpawnLocation*                      SpawnerToBlock;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecMissionBlockingVolume.ActivateVolume
struct AXpecMissionBlockingVolume_ActivateVolume_Params
{
};

// Function BendGame.XpecNeedComponent.SetNeedValue
struct UXpecNeedComponent_SetNeedValue_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecNeedComponent.InitNeed
struct UXpecNeedComponent_InitNeed_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              FMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 pWeightTbl;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecNeedComponent.AddNeedValue
struct UXpecNeedComponent_AddNeedValue_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPath.SetShowDebugPath
struct AXpecPath_SetShowDebugPath_Params
{
	bool                                               inputShowDebugPath;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPath.GetLocation
struct AXpecPath_GetLocation_Params
{
	int                                                iIndex;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.SetNextPOI
struct UXpecPawnComponent_SetNextPOI_Params
{
	class ABendPOI*                                    pNextPOI;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.SetLowLOD
struct UXpecPawnComponent_SetLowLOD_Params
{
	bool                                               bLowLOD;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.SetCurrentScenario
struct UXpecPawnComponent_SetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.RemoveScenarioFromSchedule
struct UXpecPawnComponent_RemoveScenarioFromSchedule_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.OnUsePOI
struct UXpecPawnComponent_OnUsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.OnShowHighLOD
struct UXpecPawnComponent_OnShowHighLOD_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.OnRequestUsePOI
struct UXpecPawnComponent_OnRequestUsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         eBendPOIUserType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pDefaultSlot;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.OnLeavePOI
struct UXpecPawnComponent_OnLeavePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.OnGetPOIPriority
struct UXpecPawnComponent_OnGetPOIPriority_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         eBendPOIUserType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultPriority;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.MoveToZone
struct UXpecPawnComponent_MoveToZone_Params
{
	class AXpecZoneManager*                            pNewZoneManager;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.Initialize
struct UXpecPawnComponent_Initialize_Params
{
	class ABendPawn*                                   pPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecPopulation*                             pPopulation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.GetRadiusForAvoidance
struct UXpecPawnComponent_GetRadiusForAvoidance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.GetNextScenario
struct UXpecPawnComponent_GetNextScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.GetCurrentScenario
struct UXpecPawnComponent_GetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.GetAvoidancePosition
struct UXpecPawnComponent_GetAvoidancePosition_Params
{
	bool                                               bNeedToAvoid;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bNeedToUpdate;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAvoidanceWait;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.FindPOI
struct UXpecPawnComponent_FindPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.DebugPrintInfo
struct UXpecPawnComponent_DebugPrintInfo_Params
{
	struct FString                                     line;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecPawnComponent.DeactivatePawn
struct UXpecPawnComponent_DeactivatePawn_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.AddScenarioToSchedule
struct UXpecPawnComponent_AddScenarioToSchedule_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pInsert;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInterrupt;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.AddIgnoreAvoidance
struct UXpecPawnComponent_AddIgnoreAvoidance_Params
{
	class AActor*                                      Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.AddFavoredPOI
struct UXpecPawnComponent_AddFavoredPOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPawnComponent.ActivatePawn
struct UXpecPawnComponent_ActivatePawn_Params
{
	struct FXpecPawnInfo                               pawnInfo;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                iSN;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecZoneManager*                            pZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOICount.ResetCount
struct UXpecPOICount_ResetCount_Params
{
};

// Function BendGame.XpecPOICount.Reported
struct UXpecPOICount_Reported_Params
{
	class ABendPOI*                                    POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOICountReport>                   reportType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOICount.EventMgrEndPlay
struct UXpecPOICount_EventMgrEndPlay_Params
{
};

// Function BendGame.XpecPOICount.DumpLogAndReset
struct UXpecPOICount_DumpLogAndReset_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPOIMigrationInterface.IVoTriggerEventEnable
struct UXpecPOIMigrationInterface_IVoTriggerEventEnable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.IUpdateMoving
struct UXpecPOIMigrationInterface_IUpdateMoving_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.ITriggerVoEvent
struct UXpecPOIMigrationInterface_ITriggerVoEvent_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.IShouldIgnoreWeatherChangedInterrupt
struct UXpecPOIMigrationInterface_IShouldIgnoreWeatherChangedInterrupt_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.IIsForceHighLOD
struct UXpecPOIMigrationInterface_IIsForceHighLOD_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.IGetUsagePawnName
struct UXpecPOIMigrationInterface_IGetUsagePawnName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIMigrationInterface.IGetDummySpawnTransforms
struct UXpecPOIMigrationInterface_IGetDummySpawnTransforms_Params
{
	TArray<struct FTransform>                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPOIMigrationInterface.ICanUse
struct UXpecPOIMigrationInterface_ICanUse_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.SetPropVisible
struct UXpecPOISlotInterface_SetPropVisible_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IScenarioCondition
struct UXpecPOISlotInterface_IScenarioCondition_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       conditionName;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               DoesConditionHandled;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideTimerTime
struct UXpecPOISlotInterface_IOverrideTimerTime_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultTimerTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideRotateAlignTarget
struct UXpecPOISlotInterface_IOverrideRotateAlignTarget_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideMoveToParameter
struct UXpecPOISlotInterface_IOverrideMoveToParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultMoveToSpeed;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultApplySpeedMultiply;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultRadius;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              defaultApproachOuterRadius;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               defaultSlowApproach;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // (Parm, OutParm, IsPlainOldData)
	float                                              fMoveToSpeed;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedMultiply;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fApproachOuterRadius;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowApproach;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideLookAtParameter
struct UXpecPOISlotInterface_IOverrideLookAtParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bDefaultOverrideAngleLimits;                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rDefaultAngleLimitsOverride;                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          eDefaultPartialSet;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fDefaultInterpolationRate;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultDuration;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAngleLimits;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    rAngleLimitsOverride;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          ePartialSet;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fInterpolationRate;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fDuration;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideGateParameter
struct UXpecPOISlotInterface_IOverrideGateParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                defaultGateMin;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                defaultGateMax;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMin;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                iGateMax;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOverrideDelayParameter
struct UXpecPOISlotInterface_IOverrideDelayParameter_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FName                                       ActionName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              defaultDelayTime;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOnScenarioSetup
struct UXpecPOISlotInterface_IOnScenarioSetup_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOnReceiveAnimNotify
struct UXpecPOISlotInterface_IOnReceiveAnimNotify_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOnLODStateChanged
struct UXpecPOISlotInterface_IOnLODStateChanged_Params
{
	struct FXpecLODPawn                                pPawnInfo;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EXpecPawnLODChangeState>               ChangeState;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IOnLeaveSlot
struct UXpecPOISlotInterface_IOnLeaveSlot_Params
{
	class ABendPawn*                                   pUser;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IGetUsageAnimGroups
struct UXpecPOISlotInterface_IGetUsageAnimGroups_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecPOISlotInterface.IGetMainScenarioName
struct UXpecPOISlotInterface_IGetMainScenarioName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IGetLowLODAnimGroup
struct UXpecPOISlotInterface_IGetLowLODAnimGroup_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.IGetDummyInfo
struct UXpecPOISlotInterface_IGetDummyInfo_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    dummyGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecVOClass>                          eUserVOClass;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      dummyMesh;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  loopPosition;                                             // (Parm, OutParm, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                commandIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lowLODAnimGroup;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              fTransitionTime;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 m_eWeaponType;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.DetachProp
struct UXpecPOISlotInterface_DetachProp_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      pMeshToDetach;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOISlotInterface.AttachProp
struct UXpecPOISlotInterface_AttachProp_Params
{
	struct FName                                       pawnName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      eUserType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eUserGender;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      pMeshToAttach;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachSocketName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.SetPerformPawn
struct UXpecPOIStandInLineComponent_SetPerformPawn_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.SetPawnInLine
struct UXpecPOIStandInLineComponent_SetPawnInLine_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.SetMovingTargetLocation
struct UXpecPOIStandInLineComponent_SetMovingTargetLocation_Params
{
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                Anchor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.SetEventOnScenario
struct UXpecPOIStandInLineComponent_SetEventOnScenario_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               isSet;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.ScenarioCondition
struct UXpecPOIStandInLineComponent_ScenarioCondition_Params
{
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       conditionName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.RemovePawnFromPOI
struct UXpecPOIStandInLineComponent_RemovePawnFromPOI_Params
{
	class ABendPawn*                                   Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.RemoveDummyFromPOI
struct UXpecPOIStandInLineComponent_RemoveDummyFromPOI_Params
{
	struct FName                                       dummy;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.ReadyToRelease
struct UXpecPOIStandInLineComponent_ReadyToRelease_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.POITrigger
struct UXpecPOIStandInLineComponent_POITrigger_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   triggerPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.OverrideRotateAlignTarget
struct UXpecPOIStandInLineComponent_OverrideRotateAlignTarget_Params
{
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.OverrideMoveToParameter
struct UXpecPOIStandInLineComponent_OverrideMoveToParameter_Params
{
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.OrderLinePosition
struct UXpecPOIStandInLineComponent_OrderLinePosition_Params
{
	class AXpecScenarioInstance*                       scenario;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               findNewPosition;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.OnPerformDone
struct UXpecPOIStandInLineComponent_OnPerformDone_Params
{
};

// Function BendGame.XpecPOIStandInLineComponent.OnLODStateChanged
struct UXpecPOIStandInLineComponent_OnLODStateChanged_Params
{
	struct FXpecLODPawn                                pPawnInfo;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<EXpecPawnLODChangeState>               ChangeState;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.IsAllowedToUse
struct UXpecPOIStandInLineComponent_IsAllowedToUse_Params
{
	class ABendPawn*                                   Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.IsAllowDummyToUse
struct UXpecPOIStandInLineComponent_IsAllowDummyToUse_Params
{
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.InterruptOnWeatherChange
struct UXpecPOIStandInLineComponent_InterruptOnWeatherChange_Params
{
};

// Function BendGame.XpecPOIStandInLineComponent.Initialize
struct UXpecPOIStandInLineComponent_Initialize_Params
{
	class ABendPOI*                                    POI;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  perform;                                                  // (Parm, IsPlainOldData)
	struct FTransform                                  Destination;                                              // (Parm, IsPlainOldData)
	struct FTransform                                  Entry;                                                    // (Parm, IsPlainOldData)
	TArray<struct FTransform>                          lineAnchors;                                              // (Parm, ZeroConstructor)
	TArray<struct FTransform>                          alterLineAnchors;                                         // (Parm, ZeroConstructor)
	class ATriggerBox*                                 advanceDetectVolume;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOI*                                    ignorePOI;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                animType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                dummyNum;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              entryDist;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.InitCommandTrigger
struct UXpecPOIStandInLineComponent_InitCommandTrigger_Params
{
	int                                                minimalUserToStart;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecPOI*                                    commandPOI;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetRandomScenario
struct UXpecPOIStandInLineComponent_GetRandomScenario_Params
{
	float                                              first;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              second;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              third;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              forth;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetPerformPawn
struct UXpecPOIStandInLineComponent_GetPerformPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetPawnNumInLine
struct UXpecPOIStandInLineComponent_GetPawnNumInLine_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetPawnInLine
struct UXpecPOIStandInLineComponent_GetPawnInLine_Params
{
	int                                                Id;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetDummyLocation
struct UXpecPOIStandInLineComponent_GetDummyLocation_Params
{
	struct FTransform                                  Transform;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               isPerform;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               isChat;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.GetCurrentScenarioType
struct UXpecPOIStandInLineComponent_GetCurrentScenarioType_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.FindVOCandidate
struct UXpecPOIStandInLineComponent_FindVOCandidate_Params
{
	TArray<class ABendPawn*>                           candidates;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function BendGame.XpecPOIStandInLineComponent.FindDummyInPOI
struct UXpecPOIStandInLineComponent_FindDummyInPOI_Params
{
	struct FName                                       userName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               onPerform;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                idx;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.DrawDebugInfo
struct UXpecPOIStandInLineComponent_DrawDebugInfo_Params
{
};

// Function BendGame.XpecPOIStandInLineComponent.CommandPOITrigger
struct UXpecPOIStandInLineComponent_CommandPOITrigger_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.CheckDummiesInPOI
struct UXpecPOIStandInLineComponent_CheckDummiesInPOI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIStandInLineComponent.CheckAdvance
struct UXpecPOIStandInLineComponent_CheckAdvance_Params
{
};

// Function BendGame.XpecPOIUserInterface.ISetUpperbodyMontageInfo
struct UXpecPOIUserInterface_ISetUpperbodyMontageInfo_Params
{
	class UAnimMontage*                                Montage;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Section;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.ISetNextPOI
struct UXpecPOIUserInterface_ISetNextPOI_Params
{
	class ABendPOI*                                    pNextPOI;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.ISetMoveToTarget
struct UXpecPOIUserInterface_ISetMoveToTarget_Params
{
	class AActor*                                      pTarget;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.ISetLowLODAnimGroup
struct UXpecPOIUserInterface_ISetLowLODAnimGroup_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomInGroup;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.ISetLowLOD
struct UXpecPOIUserInterface_ISetLowLOD_Params
{
	bool                                               bLowLOD;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.ISetCurrentScenario
struct UXpecPOIUserInterface_ISetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IRemoveScenarioFromSchedule
struct UXpecPOIUserInterface_IRemoveScenarioFromSchedule_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IOnUsePOI
struct UXpecPOIUserInterface_IOnUsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pSlot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IOnRequestUsePOI
struct UXpecPOIUserInterface_IOnRequestUsePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         eBendPOIUserType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                pDefaultSlot;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IOnLeavePOI
struct UXpecPOIUserInterface_IOnLeavePOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IOnGetPOIPriority
struct UXpecPOIUserInterface_IOnGetPOIPriority_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EePOIUserType>                         eBendPOIUserType;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDefaultPriority;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IMoveToZone
struct UXpecPOIUserInterface_IMoveToZone_Params
{
	class AXpecZoneManager*                            pNewZoneManager;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IIsLowLODRequested
struct UXpecPOIUserInterface_IIsLowLODRequested_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IInitialize
struct UXpecPOIUserInterface_IInitialize_Params
{
	class AXpecPopulation*                             pPopulation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetZoneManager
struct UXpecPOIUserInterface_IGetZoneManager_Params
{
	class AXpecZoneManager*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetUpperbodyMontage
struct UXpecPOIUserInterface_IGetUpperbodyMontage_Params
{
	struct FName                                       Section;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetType
struct UXpecPOIUserInterface_IGetType_Params
{
	TEnumAsByte<EXpecPOIUserType>                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetSpeedMultiply
struct UXpecPOIUserInterface_IGetSpeedMultiply_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetSN
struct UXpecPOIUserInterface_IGetSN_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetRadiusForAvoidance
struct UXpecPOIUserInterface_IGetRadiusForAvoidance_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetNextScenario
struct UXpecPOIUserInterface_IGetNextScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetNextPOI
struct UXpecPOIUserInterface_IGetNextPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetName
struct UXpecPOIUserInterface_IGetName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetMoveToTargetObstacle
struct UXpecPOIUserInterface_IGetMoveToTargetObstacle_Params
{
	class AActor*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetLowLODAnimGroup
struct UXpecPOIUserInterface_IGetLowLODAnimGroup_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetGender
struct UXpecPOIUserInterface_IGetGender_Params
{
	TEnumAsByte<EXpecPOIUserGender>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetCurrentSlot
struct UXpecPOIUserInterface_IGetCurrentSlot_Params
{
	class ABendPOISlot*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetCurrentScenario
struct UXpecPOIUserInterface_IGetCurrentScenario_Params
{
	class AXpecScenarioInstance*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetCurrentPOI
struct UXpecPOIUserInterface_IGetCurrentPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IGetAvoidancePosition
struct UXpecPOIUserInterface_IGetAvoidancePosition_Params
{
	bool                                               bNeedToAvoid;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bNeedToUpdate;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAvoidanceWait;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IFindPOI
struct UXpecPOIUserInterface_IFindPOI_Params
{
	class ABendPOI*                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IEnableTurnToIdle
struct UXpecPOIUserInterface_IEnableTurnToIdle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IEnableMoveToIdleAnchor
struct UXpecPOIUserInterface_IEnableMoveToIdleAnchor_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IEnableMoveToIdle
struct UXpecPOIUserInterface_IEnableMoveToIdle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IAddScenarioToSchedule
struct UXpecPOIUserInterface_IAddScenarioToSchedule_Params
{
	class AXpecScenarioInstance*                       pScenario;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AXpecScenarioInstance*                       pInsert;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInterrupt;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecPOIUserInterface.IAddFavoredPOI
struct UXpecPOIUserInterface_IAddFavoredPOI_Params
{
	class ABendPOI*                                    pPOI;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.GetRewardValue
struct UXpecRewardComponent_GetRewardValue_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.GetRewardScore
struct UXpecRewardComponent_GetRewardScore_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.GetBaseScore
struct UXpecRewardComponent_GetBaseScore_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.ApplyReward
struct UXpecRewardComponent_ApplyReward_Params
{
	float                                              fScale;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.ApplyCost
struct UXpecRewardComponent_ApplyCost_Params
{
	float                                              fScale;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.AddReward
struct UXpecRewardComponent_AddReward_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecRewardComponent.AddCost
struct UXpecRewardComponent_AddCost_Params
{
	struct FName                                       Name;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              fValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.WaitForEvent
struct UXpecScenario_WaitForEvent_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fLimitTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoReset;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.WaitForAction
struct UXpecScenario_WaitForAction_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iWaitForActorIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       waitForActionName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWaitForBeginning;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fLimitTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.UntriggerSingle
struct UXpecScenario_UntriggerSingle_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.UntriggerMultiple
struct UXpecScenario_UntriggerMultiple_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               targetNames;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Unlock
struct UXpecScenario_Unlock_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iTargetActorIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.StopTimer
struct UXpecScenario_StopTimer_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.StartTimer
struct UXpecScenario_StartTimer_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fTime;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRepeat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.SetLookBlendPart
struct UXpecScenario_SetLookBlendPart_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBendCharacterLookPartialSet>          eBlendPart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.SetIdleGroup
struct UXpecScenario_SetIdleGroup_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAnchor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.SetEvent
struct UXpecScenario_SetEvent_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.SendEventSingle
struct UXpecScenario_SendEventSingle_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.SendEventMultiple
struct UXpecScenario_SendEventMultiple_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               targetNames;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.RunScenario
struct UXpecScenario_RunScenario_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       scenarioName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iInterruptLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       failName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       returnName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.RotateTo
struct UXpecScenario_RotateTo_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnchorName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseLocationAsTarget;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fTolerableAngle;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Return
struct UXpecScenario_Return_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.RequestClientScenario
struct UXpecScenario_RequestClientScenario_Params
{
	TArray<struct FName>                               requiredScenarios;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<EXpecPOIUserType>                      eActorType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eActorGender;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMinJoinDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMaxJoinDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       eventScenario;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.ReleaseEvent
struct UXpecScenario_ReleaseEvent_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.PlayVO
struct UXpecScenario_PlayVO_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bResponse;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.PlayConversation
struct UXpecScenario_PlayConversation_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.PerformAction
struct UXpecScenario_PerformAction_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnchorName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAnchorTransform;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendInTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fBlendOutTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCurrentWeaponType;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreCollision;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableFootLocking;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoLock;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomInGroup;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.MoveTo
struct UXpecScenario_MoveTo_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseTransformAsTarget;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fSpeed;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplySpeedMultiply;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fRadius;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fApproachOuterRadius;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowApproach;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipDefendZoneCheck;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTurnToIdleInMovement;                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableMoveToIdleAnchor;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fAvoidanceMaxWaitTime;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bChangeWeaponWhileMoving;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fChangeWeaponDistance;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fChangeWeaponPlayRate;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.MakeScenario
struct UXpecScenario_MakeScenario_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecScenario.LookAt
struct UXpecScenario_LookAt_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Lock
struct UXpecScenario_Lock_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iTargetActorIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Jump
struct UXpecScenario_Jump_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       conditionName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       negativeTargetName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       positiveTargetName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.HandleReplySimpleVOEvent
struct UXpecScenario_HandleReplySimpleVOEvent_Params
{
	struct FName                                       stateEvent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.HandleReplyConversationEvent
struct UXpecScenario_HandleReplyConversationEvent_Params
{
	struct FName                                       stateEvent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.HandlePlayVOToPlayerEvent
struct UXpecScenario_HandlePlayVOToPlayerEvent_Params
{
};

// Function BendGame.XpecScenario.Goto
struct UXpecScenario_Goto_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Gate
struct UXpecScenario_Gate_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       returnName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Finish
struct UXpecScenario_Finish_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       nextPOIName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bChangeWeaponWhileFinishing;                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnaimedAnimMoveStyle>                 EWeaponType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fChangeWeaponPlayRate;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iRewardPercentage;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iCostPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.EventJump
struct UXpecScenario_EventJump_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       negativeTargetName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       positiveTargetName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.EndScenario
struct UXpecScenario_EndScenario_Params
{
};

// Function BendGame.XpecScenario.EndEventHandle
struct UXpecScenario_EndEventHandle_Params
{
};

// Function BendGame.XpecScenario.EnableLODSwitch
struct UXpecScenario_EnableLODSwitch_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       lowLODAnimGroup;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fTransitionTime;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomInGroup;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.DisableLODSwitch
struct UXpecScenario_DisableLODSwitch_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Delay
struct UXpecScenario_Delay_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fDelay;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.ClearEvent
struct UXpecScenario_ClearEvent_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Checkpoint
struct UXpecScenario_Checkpoint_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.Cancel
struct UXpecScenario_Cancel_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.BeginScenario
struct UXpecScenario_BeginScenario_Params
{
	struct FName                                       scenarioName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                iPriority;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      eActorType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eActorGender;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.BeginEventHandle
struct UXpecScenario_BeginEventHandle_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.AlignWith
struct UXpecScenario_AlignWith_Params
{
	int                                                iActorIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ActionName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnchorName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseForwardVector;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fTolerableAngle;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSync;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.AddGroup
struct UXpecScenario_AddGroup_Params
{
	struct FName                                       GroupName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecScenario.AddActor
struct UXpecScenario_AddActor_Params
{
	TEnumAsByte<EXpecPOIUserType>                      eActorType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserGender>                    eActorGender;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMinJoinDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              fMaxJoinDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecSoundFXInterface.IGetVocalEventSoundClass
struct UXpecSoundFXInterface_IGetVocalEventSoundClass_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class USoundClass*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSoundFXInterface.IGetVocalEventAudioComponent
struct UXpecSoundFXInterface_IGetVocalEventAudioComponent_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function BendGame.XpecSoundFXInterface.IGetImpactEventInfo
struct UXpecSoundFXInterface_IGetImpactEventInfo_Params
{
	class AActor*                                      Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSoundFXInterface.ICanPlayVO
struct UXpecSoundFXInterface_ICanPlayVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSpotLightComponent.ToggleLightImmediate
struct UXpecSpotLightComponent_ToggleLightImmediate_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecSpotLightComponent.ToggleLight
struct UXpecSpotLightComponent_ToggleLight_Params
{
	bool                                               On;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecSpotLightComponent.IUntrigger
struct UXpecSpotLightComponent_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecSpotLightComponent.ITrigger
struct UXpecSpotLightComponent_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecStreamingComponent.LoadStreamingAssets
struct UXpecStreamingComponent_LoadStreamingAssets_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecStreamingComponent.LoadSingleStreamingAsset
struct UXpecStreamingComponent_LoadSingleStreamingAsset_Params
{
	int                                                indexToLoad;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnPOIInterface.IRegisterSpawner
struct UXpecTalkingPawnPOIInterface_IRegisterSpawner_Params
{
	class AActor*                                      pSpawner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnPOIInterface.IIsValid
struct UXpecTalkingPawnPOIInterface_IIsValid_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecTalkingPawnPOIInterface.IGetCurrentPawn
struct UXpecTalkingPawnPOIInterface_IGetCurrentPawn_Params
{
	class ABendPawn*                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVODataManager.SaveDebugData
struct AXpecVODataManager_SaveDebugData_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVODataManager.GetMonologueVOData
struct AXpecVODataManager_GetMonologueVOData_Params
{
	TArray<struct FXpecVOData>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecVODataManager.GetDebugData
struct AXpecVODataManager_GetDebugData_Params
{
	TArray<struct FName>                               _POITags;                                                 // (Parm, ZeroConstructor)
	TArray<struct FName>                               _ZoneTags;                                                // (Parm, ZeroConstructor)
	TArray<struct FXpecVODebugData>                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecVODataManager.GetConversationVOData
struct AXpecVODataManager_GetConversationVOData_Params
{
	TArray<struct FXpecVOData>                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function BendGame.XpecVODataManager.ClearDebugData
struct AXpecVODataManager_ClearDebugData_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.TriggerRepeatableCooldown
struct AXpecVOManager_TriggerRepeatableCooldown_Params
{
	float                                              fTimeScale;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecVOManager.TriggerMonologueCooldown
struct AXpecVOManager_TriggerMonologueCooldown_Params
{
	float                                              fTimeScale;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecVOManager.TriggerGlobalCooldown
struct AXpecVOManager_TriggerGlobalCooldown_Params
{
	float                                              fTimeScale;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecVOManager.TriggerConversationCooldown
struct AXpecVOManager_TriggerConversationCooldown_Params
{
	float                                              fTimeScale;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function BendGame.XpecVOManager.ResetMonologue
struct AXpecVOManager_ResetMonologue_Params
{
};

// Function BendGame.XpecVOManager.ResetConversation
struct AXpecVOManager_ResetConversation_Params
{
};

// Function BendGame.XpecVOManager.Reset
struct AXpecVOManager_Reset_Params
{
};

// Function BendGame.XpecVOManager.RequestMonologue
struct AXpecVOManager_RequestMonologue_Params
{
	struct FName                                       POIName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       zoneId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      pawnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Actor0SndClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FXpecVOData                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecVOManager.RequestConversation
struct AXpecVOManager_RequestConversation_Params
{
	struct FName                                       POIName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       zoneId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      pawnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Actor0SndClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Actor1SndClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Success;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FXpecVOData                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecVOManager.RegisterVODebugData
struct AXpecVOManager_RegisterVODebugData_Params
{
	struct FXpecVOData                                 VOData;                                                   // (Parm)
	bool                                               increaseCount;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.OnDeactivate
struct AXpecVOManager_OnDeactivate_Params
{
};

// Function BendGame.XpecVOManager.OnActivate
struct AXpecVOManager_OnActivate_Params
{
};

// Function BendGame.XpecVOManager.IUntrigger
struct AXpecVOManager_IUntrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.ITrigger
struct AXpecVOManager_ITrigger_Params
{
	struct FName                                       EventName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class AActor*                                      pSource;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.IsInCinematic
struct AXpecVOManager_IsInCinematic_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.GetVOFlowRowByName
struct AXpecVOManager_GetVOFlowRowByName_Params
{
	class UDataTable*                                  DataTable;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       pName;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Result;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FXpecVOData                                 ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function BendGame.XpecVOManager.CanTalkToPlayer
struct AXpecVOManager_CanTalkToPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.CanStartVO
struct AXpecVOManager_CanStartVO_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.CanStartRepeatable
struct AXpecVOManager_CanStartRepeatable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.CanStartMonologue
struct AXpecVOManager_CanStartMonologue_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.CanStartConversation
struct AXpecVOManager_CanStartConversation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function BendGame.XpecVOManager.CanPlayConversation
struct AXpecVOManager_CanPlayConversation_Params
{
	struct FName                                       POIName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       zoneId;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EXpecPOIUserType>                      pawnType;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Actor0SndClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Actor1SndClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
